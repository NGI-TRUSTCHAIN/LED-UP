/**
 * Configuration for API endpoints
 */

export const API_BASE_URL = process.env.NEXT_PUBLIC_AZURE_API_URL || 'http://localhost:7071/api';

export const API_ENDPOINTS = {
  AUTH: {
    CHALLENGE: `${API_BASE_URL}/auth/challenge`,
    AUTHENTICATE: `${API_BASE_URL}/auth/authenticate`,
    REFRESH_TOKEN: `${API_BASE_URL}/auth/refresh`,
    VERIFY_TOKEN: `${API_BASE_URL}/auth/verify`,
    GET_DID_FOR_ADDRESS: `${API_BASE_URL}/auth/did`,
    CHECK_DID_ACTIVE: `${API_BASE_URL}/auth/did-status`,
    LOGOUT: `${API_BASE_URL}/auth/logout`,
  },
  DID: {
    CREATE: `${API_BASE_URL}/did/create`,
    GET_DOCUMENT: `${API_BASE_URL}/did/document`,
    UPDATE_DOCUMENT: `${API_BASE_URL}/did/update`,
    DEACTIVATE: `${API_BASE_URL}/did/deactivate`,
    GET_FOR_ADDRESS: `${API_BASE_URL}/did/address`,
    RESOLVE: `${API_BASE_URL}/did/resolve`,
    UPDATE_PUBLIC_KEY: `${API_BASE_URL}/did/update-public-key`,
  },
  DATA_REGISTRY: {
    CREATE: `${API_BASE_URL}/data-registry/create`,
    GET_RECORD: `${API_BASE_URL}/data-registry/record`,
    UPDATE: `${API_BASE_URL}/data-registry/update`,
    SHARE: `${API_BASE_URL}/data-registry/share-data`,
    GET_PRODUCER_RECORD: `${API_BASE_URL}/data-registry/producer/record`,
    GET_PRODUCER_RECORDS: `${API_BASE_URL}/data-registry/producer/records`,
    GET_PRODUCER_RECORD_COUNT: `${API_BASE_URL}/data-registry/producer/record-count`,
    GET_PRODUCER_RECORD_INFO: `${API_BASE_URL}/data-registry/producer/record-info`,
    GET_PRODUCER_RECORD_STATUS: `${API_BASE_URL}/data-registry/producer/record-status`,
    UPDATE_PRODUCER_RECORD: `${API_BASE_URL}/data-registry/producer/update-record`,
    UPDATE_PRODUCER_METADATA: `${API_BASE_URL}/data-registry/producer/update-metadata`,
    UPDATE_PRODUCER_RECORD_STATUS: `${API_BASE_URL}/data-registry/producer/update-record-status`,
    REGISTER_PRODUCER: `${API_BASE_URL}/data-registry/producer/register-record`,
    REMOVE_PRODUCER: `${API_BASE_URL}/data-registry/producer/remove`,
    REMOVE_PRODUCER_RECORD: `${API_BASE_URL}/data-registry/producer/remove-record`,
    GET_PROVIDER: `${API_BASE_URL}/data-registry/provider`,
    GET_PROVIDER_METADATA: `${API_BASE_URL}/data-registry/metadata`,
    UPDATE_PROVIDER_SCHEMA: `${API_BASE_URL}/data-registry/provider/update-schema`,
    GET_RECORD_SCHEMA: `${API_BASE_URL}/data-registry/record-schema`,
    GET_SHARED_RECORD: `${API_BASE_URL}/data-registry/shared-record`,
    GET_TOTAL_RECORDS_COUNT: `${API_BASE_URL}/data-registry/total-records-count`,
    GET_COMPENSATION_ADDRESS: `${API_BASE_URL}/data-registry/compensation-address`,
    GET_PAUSE_STATE: `${API_BASE_URL}/data-registry/pause-state`,
    SET_PAUSE_STATE: `${API_BASE_URL}/data-registry/pause`,
    TRANSFER_OWNERSHIP: `${API_BASE_URL}/data-registry/transfer-ownership`,
    RENOUNCE_OWNERSHIP: `${API_BASE_URL}/data-registry/renounce-ownership`,
    PRODUCER_EXISTS: `${API_BASE_URL}/data-registry/producer/exists`,
  },
  COMPENSATION: {
    GET_UNIT_PRICE: `${API_BASE_URL}/compensation/unit-price`,
    CHANGE_UNIT_PRICE: `${API_BASE_URL}/compensation/change-unit-price`,
    UPDATE_UNIT_PRICE: `${API_BASE_URL}/compensation/update-unit-price`,
    UPDATE_TOKEN_ADDRESS: `${API_BASE_URL}/compensation/update-token-address`,
    GET_TOKEN_ADDRESS: `${API_BASE_URL}/compensation/token-address`,
    GET_SERVICE_FEE: `${API_BASE_URL}/compensation/service-fee`,
    GET_PRODUCER_BALANCE: `${API_BASE_URL}/compensation/producer-balance`,
    GET_PROVIDER_WALLET: `${API_BASE_URL}/compensation/provider-wallet`,
    GET_PROVIDER_WALLET_BALANCE: `${API_BASE_URL}/compensation/provider-wallet-balance`,
    GET_MINIMUM_WITHDRAW_AMOUNT: `${API_BASE_URL}/compensation/minimum-withdraw-amount`,
    WITHDRAW_PRODUCER_BALANCE: `${API_BASE_URL}/compensation/producer/withdraw`,
    WITHDRAW_SERVICE_FEE: `${API_BASE_URL}/compensation/withdraw-service-fee`,
    PROCESS_PAYMENT: `${API_BASE_URL}/compensation/process-payment`,
    PAUSE: `${API_BASE_URL}/compensation/pause`,
    UNPAUSE: `${API_BASE_URL}/compensation/unpause`,
  },
  BLOCKCHAIN: {
    GET_EVENTS_BY_NAME: `${API_BASE_URL}/blockchain/events`,
    GET_LATEST_EVENTS: `${API_BASE_URL}/blockchain/events/latest`,
    GET_SYNC_STATE: `${API_BASE_URL}/blockchain/sync/state`,
    GET_SYNC_STATUS: `${API_BASE_URL}/blockchain/sync/status`,
    RESET_SYNC_STATE: `${API_BASE_URL}/blockchain/sync/reset`,
  },
  CREDENTIAL: {
    ISSUE: `${API_BASE_URL}/credential/issue`,
    VERIFY: `${API_BASE_URL}/credential/verify`,
  },
  PRESENTATION: {
    VERIFY: `${API_BASE_URL}/presentation/verify`,
  },
  VERIFICATION: {
    AGE: `${API_BASE_URL}/age-verification`,
    HASH: `${API_BASE_URL}/hash-verification`,
    REGISTRY: `${API_BASE_URL}/verificationRegistry`,
    FACTORY: `${API_BASE_URL}/verifierFactory`,
  },
  IPFS: {
    GET_DATA: `${API_BASE_URL}/ipfs`,
    DELETE: `${API_BASE_URL}/ipfs/:cid`,
    GET_IPFS_DATA: `${API_BASE_URL}/ipfs/getData`,
    PIN: `${API_BASE_URL}/ipfs/pin`,
    UPDATE_BLOCKCHAIN: `${API_BASE_URL}/ipfs/pin`,
    GET_BULK_DATA: `${API_BASE_URL}/ipfs/getBulkData`,
    ACCESS_DATA: `${API_BASE_URL}/ipfs/accessData`,
  },
};
