/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DidRegistry,
  DidRegistryInterface,
} from "../../contracts/DidRegistry";

const _abi = [
  {
    inputs: [],
    name: "DidRegistry__DIDAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "DidRegistry__DeactivatedDID",
    type: "error",
  },
  {
    inputs: [],
    name: "DidRegistry__InvalidDID",
    type: "error",
  },
  {
    inputs: [],
    name: "DidRegistry__Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DIDDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "DIDRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DIDUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addressToDID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "deactivateDid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getDocument",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getDocumentForDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getLastUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getLastUpdatedForDid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getPublicKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getPublicKeyForDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getSubject",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getSubjectForDid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "isActiveForDid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        internalType: "string",
        name: "document",
        type: "string",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "registerDid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "resolveDid",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subject",
            type: "address",
          },
          {
            internalType: "uint40",
            name: "lastUpdated",
            type: "uint40",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "string",
            name: "publicKey",
            type: "string",
          },
          {
            internalType: "string",
            name: "document",
            type: "string",
          },
        ],
        internalType: "struct DidRegistry.DIDDocument",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        internalType: "string",
        name: "newDocument",
        type: "string",
      },
    ],
    name: "updateDidDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        internalType: "string",
        name: "newPublicKey",
        type: "string",
      },
    ],
    name: "updateDidPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610ff7908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306da339a146107dc5780633633852c1461066d57806343b162c814610608578063454b0d27146102d65780634aeee7ba1461060857806363a27111146106085780637ccb6a64146104a25780639462be3a146104e05780639961860e146104a2578063be89ee8014610314578063bff90821146102d6578063c8902a21146100d7578063dd1388c21461027b578063e1f0bde01461027b578063f4653a1d14610183578063f789c0a11461013b5763f8d087b2146100d757600080fd5b34610136576020366003190112610136576004356001600160401b0381116101365761012c61011561010f6020933690600401610c43565b90610f27565b600052600160205260ff60406000205460c81c1690565b6040519015158152f35b600080fd5b34610136576020366003190112610136576004356001600160a01b03811681036101365761016b61017f91610edb565b604051918291602083526020830190610c70565b0390f35b34610136576020366003190112610136576004356001600160401b038111610136576101b3903690600401610c43565b6101bd8183610f27565b6101d4813360005260026020526040600020541490565b1561026a5780600052600160205260ff60406000205460c81c161561025a576000908152600160205260409020805465ffffffffffff60a01b19164260a01b64ffffffffff60a01b161790557fa462dbc9bc21feff6ddeab7dc5f3bfc006aa8fcd156b8b1b30e02f1d1dd197d890610255905b604051918291429583610e0f565b0390a2005b62e7400960e21b60005260046000fd5b63cc6b994960e01b60005260046000fd5b34610136576020366003190112610136576004356001600160401b038111610136576102ce6102b361010f6020933690600401610c43565b600052600160205264ffffffffff60406000205460a01c1690565b604051908152f35b34610136576020366003190112610136576004356001600160401b0381116101365761016b61030f61010f61017f933690600401610c43565b610f71565b346101365761032236610cb1565b9061032d8385610f27565b610344813360005260026020526040600020541490565b1561026a5780600052600160205260ff60406000205460c81c161561025a57600052600160205260406000209160018301916001600160401b03821161048c57610398826103928554610d83565b85610dbd565b600090601f831160011461041057926103e283610247946102559794600080516020610fa28339815191529997600092610405575b50508160011b916000199060031b1c19161790565b90555b805464ffffffffff60a01b19164260a01b64ffffffffff60a01b16179055565b013590508a806103cd565b8382526020822091601f198416815b8181106104745750936102559693600080516020610fa283398151915298969360019383610247981061045a575b505050811b0190556103e5565b0135600019600384901b60f8161c1916905589808061044d565b9193602060018192878701358155019501920161041f565b634e487b7160e01b600052604160045260246000fd5b34610136576020366003190112610136576004356001600160401b0381116101365761016b6104db61010f61017f933690600401610c43565b610f89565b34610136576104ee36610cb1565b906104f98385610f27565b610510813360005260026020526040600020541490565b1561026a5780600052600160205260ff60406000205460c81c161561025a57600052600160205260406000209160028301916001600160401b03821161048c5761055e826103928554610d83565b600090601f83116001146105a757926103e283610247946102559794600080516020610fa283398151915299976000926104055750508160011b916000199060031b1c19161790565b8382526020822091601f198416815b8181106105f05750936102559693600080516020610fa283398151915298969360019383610247981061045a57505050811b0190556103e5565b919360206001819287870135815501950192016105b6565b34610136576020366003190112610136576004356001600160401b0381116101365761065b61064061010f6020933690600401610c43565b6000908152600160205260409020546001600160a01b031690565b6040516001600160a01b039091168152f35b34610136576020366003190112610136576004356001600160401b038111610136576106a06106cf913690600401610c43565b90606060806040516106b181610d01565b60008152600060208201526000604082015282808201520152610f27565b60005260016020526040600020604051906106e982610d01565b61017f81549160018060a01b03831684526107c9602085019464ffffffffff8560a01c16865260ff604082019560c81c161515855264ffffffffff610743600261073560018701610e37565b956060850196875201610e37565b93846080840152519160018060a01b0390511695511515965116956040519561076b87610d01565b86526020860196875260408601908152606086019182526080860193845264ffffffffff6040519788976020895260018060a01b0390511660208901525116604087015251151560608601525160a0608086015260c0850190610c70565b9051838203601f190160a0850152610c70565b34610136576060366003190112610136576004356001600160401b0381116101365761080c903690600401610c43565b6024356001600160401b0381116101365761082b903690600401610c43565b6044356001600160401b0381116101365761084a903690600401610c43565b929091610858368688610d3d565b602081519101209384600052600160205260018060a01b0360406000205416610c32573360005260026020528460406000205480610c26575b505061092564ffffffffff6108db604051956108ac87610d01565b3387526108cc60208801988442168a526040890196600188523691610d3d565b95606088019687523691610d3d565b6080860190815260008881526001602052604090209551865497516001600160c81b03199098166001600160a01b0391909116179190961660a01b64ffffffffff60a01b16178455565b51825460ff60c81b191690151560c81b60ff60c81b1617825551805160018301916001600160401b03821161048c57610962826103928554610d83565b602090601f8311600114610bbb579180610997926002969594600092610bb05750508160011b916000199060031b1c19161790565b90555b0190518051906001600160401b03821161048c576109bc826103928554610d83565b602090601f8311600114610b49576109ec929160009183610b3e5750508160011b916000199060031b1c19161790565b90555b336000526002602052806040600020558060405183858237602081858101600381520301902055600052600460205260406000206001600160401b03821161048c57610a4582610a3f8354610d83565b83610dbd565b6000601f8311600114610ab6579161025591610a9a82807fd59e4d670f6e249831d6f8ce560f47ced54b3f4203e2d0050dc495fd6b919dd296600091610aab575b508160011b916000199060031b1c19161790565b90555b604051918291339583610e0f565b905087013588610a86565b8181526020812090601f198416815b818110610b265750916102559391857fd59e4d670f6e249831d6f8ce560f47ced54b3f4203e2d0050dc495fd6b919dd2969410610b0c575b5050600182811b019055610a9d565b860135600019600385901b60f8161c191690558580610afd565b9192602060018192868a013581550194019201610ac5565b0151905087806103cd565b90601f1983169184600052816000209260005b818110610b985750908460019594939210610b7f575b505050811b0190556109ef565b015160001960f88460031b161c19169055868080610b72565b92936020600181928786015181550195019301610b5c565b015190508a806103cd565b90601f1983169184600052816000209260005b818110610c0e575091600193918560029897969410610bf5575b505050811b01905561099a565b015160001960f88460031b161c19169055898080610be8565b92936020600181928786015181550195019301610bce565b0361026a578488610891565b632236a56360e11b60005260046000fd5b9181601f84011215610136578235916001600160401b038311610136576020838186019501011161013657565b919082519283825260005b848110610c9c575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610c7b565b6040600319820112610136576004356001600160401b0381116101365781610cdb91600401610c43565b92909291602435906001600160401b03821161013657610cfd91600401610c43565b9091565b60a081019081106001600160401b0382111761048c57604052565b90601f801991011681019081106001600160401b0382111761048c57604052565b9291926001600160401b03821161048c5760405191610d66601f8201601f191660200184610d1c565b829481845281830111610136578281602093846000960137010152565b90600182811c92168015610db3575b6020831014610d9d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d92565b601f8211610dca57505050565b6000526020600020906020601f840160051c83019310610e05575b601f0160051c01905b818110610df9575050565b60008155600101610dee565b9091508190610de5565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b9060405191826000825492610e4b84610d83565b8084529360018116908115610eb95750600114610e72575b50610e7092500383610d1c565b565b90506000929192526020600020906000915b818310610e9d575050906020610e709282010138610e63565b6020919350806001915483858901015201910190918492610e84565b905060209250610e7094915060ff191682840152151560051b82010138610e63565b6001600160a01b03166000908152600260205260409020548015610f11576000526004602052610f0e6040600020610e37565b90565b50604051610f20602082610d1c565b6000815290565b602090826040519384928337600390820190815203019020546000818152600160205260409020546001600160a01b031615610f605790565b637c24598f60e01b60005260046000fd5b6000526001602052610f0e6001604060002001610e37565b6000526001602052610f0e6002604060002001610e3756fe7d3c1c12143e97b7e778b120465649d38afc23c41117c80cf79e1a65b4c54e0ea2646970667358221220a72829449a18790600a06d93c4e6052add66be5833fdb772c8014dc1902bd03164736f6c634300081c0033";

type DidRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DidRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DidRegistry__factory extends ContractFactory {
  constructor(...args: DidRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DidRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DidRegistry__factory {
    return super.connect(runner) as DidRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DidRegistryInterface {
    return new Interface(_abi) as DidRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DidRegistry {
    return new Contract(address, _abi, runner) as unknown as DidRegistry;
  }
}
