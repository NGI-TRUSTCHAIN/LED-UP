/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Compensation,
  CompensationInterface,
} from "../../contracts/Compensation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_leveaWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_serviceFeePercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unitPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_didAuthAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Compensation__InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidConsumer",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidConsumerDID",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidInputParam",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidProducer",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidProducerDID",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidRole",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__LowDepositAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__MinimumWithdrawAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__NoBalanceToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__OnlyOwnerCanWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__ProducerAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__TokenTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "serviceFee",
        type: "uint256",
      },
    ],
    name: "PaymentProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProducerPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProducerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldServiceFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newServiceFee",
        type: "uint256",
      },
    ],
    name: "ServiceFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ServiceFeeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldUnitPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newUnitPrice",
        type: "uint256",
      },
    ],
    name: "UnitPriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newServiceFee",
        type: "uint256",
      },
    ],
    name: "changeServiceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "changeTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newUnitPrice",
        type: "uint256",
      },
    ],
    name: "changeUnitPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "didAuth",
    outputs: [
      {
        internalType: "contract DidAuth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "getConsumerDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLeveaWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLeveaWalletBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumWithdrawAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPaymentTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProducerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getServiceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnitPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dataSize",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
    ],
    name: "processPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "producerExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_did",
        type: "string",
      },
    ],
    name: "registerConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_did",
        type: "string",
      },
    ],
    name: "registerProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "removeProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setMinimumWithdrawAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_didAuthAddress",
        type: "address",
      },
    ],
    name: "updateDidAuthAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
    ],
    name: "verifyPayment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawProducerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawServiceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461015857601f611a7738819003918201601f19168301916001600160401b0383118484101761015d5780849260c0946040528339810103126101585761004781610173565b61005360208301610173565b60408301519092906001600160a01b038116908190036101585760608201519061008460a060808501519401610173565b6001600160a01b039094169485156101425760008054604051979182906001600160a01b038316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a81b031916176000908155678ac7230489e80000600455600655600180546001600160a01b03199081166001600160a01b0393841617909155600280548216939093179092556003929092556005929092556009805490921692169190911790556118ef90816101888239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101585756fe608080604052600436101561001357600080fd5b60003560e01c908163012a33aa146116525750806301c61a32146112455780630552f9ff146111db5780630a0137ab1461117d57806311a1933c1461115f5780631fa8c9ae1461113e57806320875d6614610e8f5780633f185b6c14610dbf5780634be3a6e914610d5d578063586d396b14610cf85780635a21533814610cda5780635c975abb14610cb457806364208e0914610c8b578063715018a614610c325780637418c96814610c085780637843365514610b7a5780637af8bb5d14610ad05780637c87816614610ab25780638135c36f146109b05780638da5cb5b146109875780638e0e4e09146107b657806394906bcf146107545780639a3867e91461051c578063c9cda91f146104cf578063d150700114610469578063d32ad62214610440578063d3e256bf146103d8578063dea182c114610279578063e058e99714610397578063f2fde38b1461030e578063f9468713146102a2578063fc0c546a146102795763fe80c4f41461018a57600080fd5b34610274576020366003190112610274576001600160a01b036101ab61166d565b16600052600a6020526040600020604051906000908054906101cc826117bb565b808552916001811690811561024d575060011461020c575b610208846101f481860382611683565b60405191829160208352602083019061171f565b0390f35b600090815260208120939250905b808210610233575090915081016020016101f4826101e4565b91926001816020925483858801015201910190929161021a565b60ff191660208087019190915292151560051b850190920192506101f491508390506101e4565b600080fd5b34610274576000366003190112610274576001546040516001600160a01b039091168152602090f35b346102745760203660031901126102745760043567ffffffffffffffff8111610274576102ec60206102da60409336906004016116a5565b818451938285809451938492016116fc565b8101600881520301902060ff6001825492015416825191825215156020820152f35b346102745760203660031901126102745761032761166d565b61032f61184f565b6001600160a01b0316801561038157600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b34610274576020366003190112610274576103b061166d565b6103b861184f565b60018060a01b031660005260076020526020604060002054604051908152f35b34610274576020366003190112610274576004356103f461184f565b801561042f57600354816003556040519081527fea943276b7af14e01ef5207cd2cee75f7c7b742afe03d223779a09627301965560203392a3005b63f0adf53360e01b60005260046000fd5b34610274576000366003190112610274576009546040516001600160a01b039091168152602090f35b34610274576020366003190112610274576001600160a01b0361048a61166d565b168060005260076020526040600020541515806104af575b6020906040519015158152f35b50600052600a60205260206104c86040600020546117bb565b15156104a2565b34610274576020366003190112610274576104e861166d565b6104f061184f565b6001600160a01b0316801561042f576bffffffffffffffffffffffff60a01b6001541617600155600080f35b346102745761052a36611744565b9061053361184f565b6009546040516325e016d360e11b81526001600160a01b0390911690602081600481855afa90811561071457600091610720575b5060209061058b92604051808095819463e0bb933d60e01b8352896004840161179f565b03915afa908115610714576000916106e5575b50156106d4576001600160a01b03166000908152600b60205260409020815167ffffffffffffffff81116106be576105d682546117bb565b601f8111610681575b50602092601f82116001146106215761061292938291600092610616575b50508160011b916000199060031b1c19161790565b9055005b0151905084806105fd565b601f1982169383600052806000209160005b8681106106695750836001959610610650575b505050811b019055005b015160001960f88460031b161c19169055838080610646565b91926020600181928685015181550194019201610633565b6106ae90836000526020600020601f840160051c810191602085106106b4575b601f0160051c0190611838565b836105df565b90915081906106a1565b634e487b7160e01b600052604160045260246000fd5b630a3f1b7960e21b60005260046000fd5b610707915060203d60201161070d575b6106ff8183611683565b810190611787565b8361059e565b503d6106f5565b6040513d6000823e3d90fd5b90506020813d60201161074c575b8161073b60209383611683565b81010312610274575161058b610567565b3d915061072e565b346102745760003660031901126102745761076d61184f565b610775611898565b61077d611898565b60ff60a01b19600054166000557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610274576107c436611744565b906107cd61184f565b60095460405163cb3e1fe760e01b81526001600160a01b0390911690602081600481855afa90811561071457600091610953575b5060209061082592604051808095819463e0bb933d60e01b8352896004840161179f565b03915afa90811561071457600091610934575b5015610923576001600160a01b03166000908152600a60205260409020815167ffffffffffffffff81116106be5761087082546117bb565b601f81116108f1575b50602092601f82116001146108ab57610612929382916000926106165750508160011b916000199060031b1c19161790565b601f1982169383600052806000209160005b8681106108d9575083600195961061065057505050811b019055005b919260206001819286850151815501940192016108bd565b61091d90836000526020600020601f840160051c810191602085106106b457601f0160051c0190611838565b83610879565b63319f172f60e21b60005260046000fd5b61094d915060203d60201161070d576106ff8183611683565b83610838565b90506020813d60201161097f575b8161096e60209383611683565b810103126102745751610825610801565b3d9150610961565b34610274576000366003190112610274576000546040516001600160a01b039091168152602090f35b34610274576020366003190112610274576004356109cc61184f565b6109d4611878565b600654808211610aa157816109e89161182b565b60065560015460025460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529160209183916044918391600091165af190811561071457600091610a82575b5015610a71576002544291906001600160a01b03167f0ec851daa65cf683ea50a214d0556df1c12c6c97741c24d6a433b81b01b8a1ef600080a4005b637024dad560e11b60005260046000fd5b610a9b915060203d60201161070d576106ff8183611683565b82610a35565b6306ba5aa760e11b60005260046000fd5b34610274576000366003190112610274576020600454604051908152f35b34610274576020366003190112610274576001600160a01b03610af161166d565b16600052600b602052604060002060405190600090805490610b12826117bb565b808552916001811690811561024d5750600114610b3957610208846101f481860382611683565b600090815260208120939250905b808210610b60575090915081016020016101f4826101e4565b919260018160209254838588010152019101909291610b47565b34610274576000366003190112610274576001546002546040516370a0823160e01b81526001600160a01b0391821660048201529160209183916024918391165afa801561071457600090610bd5575b602090604051908152f35b506020813d602011610c00575b81610bef60209383611683565b810103126102745760209051610bca565b3d9150610be2565b34610274576000366003190112610274573360005260076020526020604060002054604051908152f35b3461027457600036600319011261027457610c4b61184f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610274576000366003190112610274576002546040516001600160a01b039091168152602090f35b3461027457600036600319011261027457602060ff60005460a01c166040519015158152f35b34610274576000366003190112610274576020600654604051908152f35b346102745760203660031901126102745760043567ffffffffffffffff81116102745760ff6001610d466020610d33819536906004016116a5565b81604051938285809451938492016116fc565b810160088152030190200154166040519015158152f35b3461027457602036600319011261027457600435610d7961184f565b801561042f5760607fbef184c70b971ce37dd431ed022897a9211e97ca421f71da4c3aa85da4f6c5e59160055490806005556040519133835260208301526040820152a1005b3461027457602036600319011261027457610dd861166d565b610de061184f565b610de8611878565b6001600160a01b03166000818152600760209081526040808320839055600a90915290208054610e17906117bb565b9081610e4b575b827f7aeea51f76cf53bb0e38ea557afb288adf612290f445157ce8bf0e19fdcc4c766020604051428152a2005b81601f60009311600114610e635750555b8180610e1e565b81835260208320610e7f91601f0160051c810190600101611838565b8082528160208120915555610e5c565b3461027457602036600319011261027457600435610eab611878565b33600052600a602052604060002060405190816000825492610ecc846117bb565b808452936001811690811561111c57506001146110d5575b50610ef192500382611683565b805115908115611009575b50610ff857600454808210610fe757336000526007602052604060002054908110610aa1578111610fd6573360005260076020526040600020610f4082825461182b565b905560015460405163a9059cbb60e01b81523360048201526024810183905290602090829060449082906000906001600160a01b03165af190811561071457600091610fb7575b5015610a71574290337f9e6f10237a3bc28f40142a7f51474829ca0926a141b2aa82d169584162500fda600080a4005b610fd0915060203d60201161070d576106ff8183611683565b82610f87565b6379d9383360e11b60005260046000fd5b63b2726f4960e01b60005260046000fd5b6351a846b160e11b60005260046000fd5b60095460405163cb3e1fe760e01b81526001600160a01b03909116925090602082600481865afa9182156107145760009261109f575b5060405163e0bb933d60e01b81529260209284928391829161106591906004840161179f565b03915afa90811561071457600091611080575b501582610efc565b611099915060203d60201161070d576106ff8183611683565b82611078565b91506020823d6020116110cd575b816110ba60209383611683565b810103126102745790519061106561103f565b3d91506110ad565b90506000929192526020600020906000915b818310611100575050906020610ef19282010185610ee4565b60209193508060019154838588010152019101909183926110e7565b905060209250610ef194915060ff191682840152151560051b82010185610ee4565b346102745760203660031901126102745761115761184f565b600480359055005b34610274576000366003190112610274576020600354604051908152f35b346102745760203660031901126102745761119661166d565b61119e61184f565b6001600160a01b031680156111ca576bffffffffffffffffffffffff60a01b6009541617600955600080f35b63778e115760e01b60005260046000fd5b34610274576000366003190112610274576111f461184f565b6111fc611878565b611204611878565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1005b346102745760803660031901126102745761125e61166d565b60243567ffffffffffffffff81116102745761127e9036906004016116a5565b9060643567ffffffffffffffff81116102745761129f9036906004016116a5565b6009546040516325e016d360e11b81526001600160a01b03909116929190602081600481875afa9081156107145760009161161e575b5060405163e0bb933d60e01b815291602091839182916112f8916004840161179f565b0381865afa908115610714576000916115ff575b50156115ee5760018060a01b03169081600052600a6020526040600020906040519182600082549261133d846117bb565b80845293600181169081156115cc5750600114611585575b5061136292500383611683565b8151159182156114c6575b5050610ff85780156111ca576113876005546044356117f5565b906000602060018060a01b03600154166064604051809481936323b872dd60e01b83523360048401523060248401528860448401525af1908115610714576000916114a7575b5015610a71576113fb60646113e4600354856117f5565b0480936113f38260065461181e565b60065561182b565b92816000526007602052604060002061141585825461181e565b9055604051604081019080821067ffffffffffffffff8311176106be5760019160405285815261145a60208083019484865281604051938285809451938492016116fc565b8101600881520301902090518155019051151560ff801983541691161790556040519182527fa6c1325e03b867ee45303c64111dc7e52670f1da44597390374b5210cda6508d60203393a4005b6114c0915060203d60201161070d576106ff8183611683565b846113cd565b60405163cb3e1fe760e01b8152919250602082600481865afa9182156107145760009261154f575b5060405163e0bb933d60e01b81529260209284928391829161151491906004840161179f565b03915afa90811561071457600091611530575b5015838061136d565b611549915060203d60201161070d576106ff8183611683565b83611527565b91506020823d60201161157d575b8161156a60209383611683565b81010312610274579051906115146114ee565b3d915061155d565b90506000929192526020600020906000915b8183106115b05750509060206113629282010187611355565b6020919350806001915483858901015201910190918492611597565b90506020925061136294915060ff191682840152151560051b82010187611355565b6366a70fa760e11b60005260046000fd5b611618915060203d60201161070d576106ff8183611683565b8461130c565b90506020813d60201161164a575b8161163960209383611683565b8101031261027457516112f86112d5565b3d915061162c565b34610274576000366003190112610274576020906005548152f35b600435906001600160a01b038216820361027457565b90601f8019910116810190811067ffffffffffffffff8211176106be57604052565b81601f820112156102745780359067ffffffffffffffff82116106be57604051926116da601f8401601f191660200185611683565b8284526020838301011161027457816000926020809301838601378301015290565b60005b83811061170f5750506000910152565b81810151838201526020016116ff565b90602091611738815180928185528580860191016116fc565b601f01601f1916010190565b906040600319830112610274576004356001600160a01b038116810361027457916024359067ffffffffffffffff821161027457611784916004016116a5565b90565b90816020910312610274575180151581036102745790565b9291906117b660209160408652604086019061171f565b930152565b90600182811c921680156117eb575b60208310146117d557565b634e487b7160e01b600052602260045260246000fd5b91607f16916117ca565b8181029291811591840414171561180857565b634e487b7160e01b600052601160045260246000fd5b9190820180921161180857565b9190820391821161180857565b818110611843575050565b60008155600101611838565b6000546001600160a01b0316330361186357565b63118cdaa760e01b6000523360045260246000fd5b60ff60005460a01c1661188757565b63d93c066560e01b60005260046000fd5b60ff60005460a01c16156118a857565b638dfc202b60e01b60005260046000fdfea2646970667358221220bf5df1ffeac76366ec76f59534d96f6f50094d06f5fc6b838c22658cb0e654f564736f6c634300081c0033";

type CompensationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompensationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Compensation__factory extends ContractFactory {
  constructor(...args: CompensationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _provider: AddressLike,
    _tokenAddress: AddressLike,
    _leveaWallet: AddressLike,
    _serviceFeePercent: BigNumberish,
    _unitPrice: BigNumberish,
    _didAuthAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _provider,
      _tokenAddress,
      _leveaWallet,
      _serviceFeePercent,
      _unitPrice,
      _didAuthAddress,
      overrides || {}
    );
  }
  override deploy(
    _provider: AddressLike,
    _tokenAddress: AddressLike,
    _leveaWallet: AddressLike,
    _serviceFeePercent: BigNumberish,
    _unitPrice: BigNumberish,
    _didAuthAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _provider,
      _tokenAddress,
      _leveaWallet,
      _serviceFeePercent,
      _unitPrice,
      _didAuthAddress,
      overrides || {}
    ) as Promise<
      Compensation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Compensation__factory {
    return super.connect(runner) as Compensation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompensationInterface {
    return new Interface(_abi) as CompensationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Compensation {
    return new Contract(address, _abi, runner) as unknown as Compensation;
  }
}
