/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ConsentManagement,
  ConsentManagementInterface,
} from "../../../contracts/Consent.sol/ConsentManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_didRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AccessManagedInvalidAuthority",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "delay",
        type: "uint32",
      },
    ],
    name: "AccessManagedRequiredDelay",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AccessManagedUnauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ConsentManagement__AlreadyGranted",
    type: "error",
  },
  {
    inputs: [],
    name: "ConsentManagement__InvalidDID",
    type: "error",
  },
  {
    inputs: [],
    name: "ConsentManagement__NotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ConsentManagement__Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "producerDid",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "providerDid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
    ],
    name: "ConsentGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "producerDid",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "providerDid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ConsentRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "providerDid",
        type: "string",
      },
      {
        internalType: "string",
        name: "purpose",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
    ],
    name: "grantConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "producerDid",
        type: "string",
      },
      {
        internalType: "string",
        name: "providerDid",
        type: "string",
      },
    ],
    name: "hasValidConsent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConsumingScheduledOp",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "producerDid",
        type: "string",
      },
      {
        internalType: "string",
        name: "providerDid",
        type: "string",
      },
    ],
    name: "queryConsent",
    outputs: [
      {
        internalType: "enum ConsentManagement.ConsentStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "providerDid",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "revokeConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803460ab57601f6111c638819003918201601f19168301916001600160401b0383118484101760b05780849260209460405283398101031260ab57516001600160a01b0381169081900360ab573360018060a01b031960005416176000557f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad6020604051338152a1600180546001600160a01b0319169190911790556040516110ff90816100c78239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80630ab46b39146102ea5780636a81f842146102095780637a9e5e4b146101635780638fb360371461011d5780639642ea3b146100bd578063bf7e214f146100945763efb552661461006957600080fd5b3461008f57602061008561007c36610958565b92919091610ca6565b6040519015158152f35b600080fd5b3461008f57600036600319011261008f576000546040516001600160a01b039091168152602090f35b3461008f576100d76100ce36610958565b92919091610bba565b9160405192600382101561010757839261010392845260208401526060604084015260608301906109cd565b0390f35b634e487b7160e01b600052602160045260246000fd5b3461008f57600036600319011261008f5760005460a01c60ff161561015a576020638fb3603760e01b5b6040516001600160e01b03199091168152f35b60206000610147565b3461008f57602036600319011261008f576004356001600160a01b0381169081810361008f57600054906001600160a01b03821633036101f5573b156101e0576001600160a01b03191681176000556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90602090a1005b506361798f2f60e11b60005260045260246000fd5b62d1953b60e31b6000523360045260246000fd5b3461008f5761021736610958565b92919061022333610d79565b610231939193368387610a30565b60208151910120906000526002602052604060002090600052602052604060002092600284019060ff8254166003811015610107576001036102d9577f618be86904aeb4cb30cdd7cf6b1d5c0b65782e5d800f21b5c5671bfa4c1d95df946102a992600260ff19825416179055600342910155610af6565b93816040519283928337810160008152039020936102d4604051928392602084526020840191610a8f565b0390a3005b634c3dd8bd60e11b60005260046000fd5b3461008f57606036600319011261008f5760043567ffffffffffffffff811161008f5761031b90369060040161092a565b60243567ffffffffffffffff811161008f5761033b90369060040161092a565b926044359161034933610d79565b959094610357368286610a30565b602081519101209560018060a01b036001541660405163c8902a2160e01b8152602060048201526020818061038f60248201876109cd565b0381855afa9081156108ff5760009161090b575b501590811561088c575b5061087b5787600052600260205260406000208760005260205260ff6002604060002001541660038110156101075760011461086a57604051966103f0886109f2565b8188526103fe368488610a30565b97602081019889526040810191600183526060820199428b5260808301918a835261042a36898b610a30565b9c60a085019d8e5260005260026020526040600020906000526020526040600020925180519067ffffffffffffffff821161079157819061046b8654610abc565b601f8111610817575b50602090601f83116001146107b2576000926107a7575b50508160011b916000199060031b1c19161783555b518051600184019167ffffffffffffffff82116107915781906104c38454610abc565b601f811161073e575b50602090601f83116001146106d9576000926106ce575b50508160011b916000199060031b1c19161790555b6002820192519960038b10156101075760059360009b60ff8019835416911617905551600383015551600482015501975197885167ffffffffffffffff81116106ba576105458254610abc565b601f8111610675575b506020601f82116001146105ea5790806105a99493928b9c7f07c41fe0fba2bd444c2aaa4669d320f9f28f73bd764517486d6719b6dcf3cd889a9b9c926105df575b50508160011b916000199060031b1c1916179055610af6565b948160405192839283378101888152039020946105d3604051938493604085526040850191610a8f565b9060208301520390a380f35b015190508c80610590565b828a52808a209a601f1983168b5b81811061065d57509b60019284926105a99796957f07c41fe0fba2bd444c2aaa4669d320f9f28f73bd764517486d6719b6dcf3cd889c9d9e9f10610644575b505050811b019055610af6565b015160001960f88460031b161c191690558c8080610637565b838301518e556001909d019c602093840193016105f8565b828a5260208a20601f830160051c810191602084106106b0575b601f0160051c01905b8181106106a5575061054e565b8a8155600101610698565b909150819061068f565b634e487b7160e01b89526041600452602489fd5b015190508e806104e3565b60008581528281209350601f198516905b818110610726575090846001959493921061070d575b505050811b0190556104f8565b015160001960f88460031b161c191690558e8080610700565b929360206001819287860151815501950193016106ea565b909150836000526020600020601f840160051c81019160208510610787575b90601f859493920160051c01905b81811061077857506104cc565b6000815584935060010161076b565b909150819061075d565b634e487b7160e01b600052604160045260246000fd5b015190508e8061048b565b60008781528281209350601f198516905b8181106107ff57509084600195949392106107e6575b505050811b0183556104a0565b015160001960f88460031b161c191690558e80806107d9565b929360206001819287860151815501950193016107c3565b909150856000526020600020601f840160051c81019160208510610860575b90601f859493920160051c01905b8181106108515750610474565b60008155849350600101610844565b9091508190610836565b63b6842e3960e01b60005260046000fd5b6332164c0f60e01b60005260046000fd5b90506020604051809263c8902a2160e01b825282600483015281806108b560248201898d610a8f565b03915afa9081156108ff576000916108d0575b5015896103ad565b6108f2915060203d6020116108f8575b6108ea8183610a0e565b810190610a77565b896108c8565b503d6108e0565b6040513d6000823e3d90fd5b610924915060203d6020116108f8576108ea8183610a0e565b8a6103a3565b9181601f8401121561008f5782359167ffffffffffffffff831161008f576020838186019501011161008f57565b604060031982011261008f5760043567ffffffffffffffff811161008f57816109839160040161092a565b929092916024359067ffffffffffffffff821161008f576109a69160040161092a565b9091565b60005b8381106109bd5750506000910152565b81810151838201526020016109ad565b906020916109e6815180928185528580860191016109aa565b601f01601f1916010190565b60c0810190811067ffffffffffffffff82111761079157604052565b90601f8019910116810190811067ffffffffffffffff82111761079157604052565b92919267ffffffffffffffff82116107915760405191610a5a601f8201601f191660200184610a0e565b82948184528183011161008f578281602093846000960137010152565b9081602091031261008f5751801515810361008f5790565b908060209392818452848401376000828201840152601f01601f1916010190565b60038210156101075752565b90600182811c92168015610aec575b6020831014610ad657565b634e487b7160e01b600052602260045260246000fd5b91607f1691610acb565b610b0e906020604051928284809451938492016109aa565b810103902090565b9060405191826000825492610b2a84610abc565b8084529360018116908115610b985750600114610b51575b50610b4f92500383610a0e565b565b90506000929192526020600020906000915b818310610b7c575050906020610b4f9282010138610b42565b6020919350806001915483858901015201910190918492610b63565b905060209250610b4f94915060ff191682840152151560051b82010138610b42565b610bca90610bd993923691610a30565b60208151910120923691610a30565b60208151910120906000526002602052604060002090600052602052604060002060405191610c07836109f2565b610c1082610b16565b8352610c1e60018301610b16565b602084015260ff600283015416610c39604085019182610ab0565b60038301549260608501938452610c5e60056004830154926080880193845201610b16565b9460a081019586525151156102d957518015159081610c9c575b50610c9157519160038310156101075751925191929190565b509051915160029291565b9050421138610c78565b610bca90610cb693923691610a30565b602081519101209060005260026020526040600020906000526020526040600020604051610ce3816109f2565b610cec82610b16565b8152610cfa60018301610b16565b602082015260ff60028301541690610d16604082019283610ab0565b6003830154606082015260a0610d3a60056004860154956080850196875201610b16565b9101525160038110156101075760001901610d7357518015159081610d69575b50610d6457600190565b600090565b9050421138610d5a565b50600090565b60018060a01b031690816000526003602052610d99604060002054610abc565b61103657604051610dab606082610a0e565b602881526020810190604036833760005b60148110610f2e5750610e0360296040518094610df26020830195683234b21d32ba34391d60b91b8752518092858501906109aa565b81010301601f198101845283610a0e565b81519020928060005260036020526040600020825167ffffffffffffffff811161079157610e318254610abc565b601f8111610ee6575b50806020601f8211600114610e8357600091610e78575b508160011b916000199060031b1c19161790555b6000526004602052826040600020559190565b905084015138610e51565b60008481528181209250601f198416905b818110610ece57509083600194939210610eb5575b5050811b019055610e65565b86015160001960f88460031b161c191690553880610ea9565b9192602060018192868b015181550194019201610e94565b826000526020600020601f830160051c81019160208410610f24575b601f0160051c01905b818110610f185750610e3a565b60008155600101610f0b565b9091508190610f02565b806013036013811161100a57600381901b906001600160fd1b0381160361100a5760ff811161100a576001811b156110205785901c60f481901b600f60f81b169060f081169060ff1660ff16039060ff821161100a57610f97906001600160f81b031916611087565b600183901b916001600160ff1b038416840361100a57610fd19160001a610fbe8487611060565b5360f81b6001600160f81b031916611087565b600060018301809311610ff6576001939291610fef911a9185611060565b5301610dbc565b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b816000526003602052604060002091600052600460205261105c60406000205492610b16565b9190565b908151811015611071570160200190565b634e487b7160e01b600052603260045260246000fd5b60f81c600a8110156110ae5760300160ff811161100a5760f81b6001600160f81b03191690565b60570160ff811161100a5760f81b6001600160f81b0319169056fea2646970667358221220552bdae004e68cb8867a4edc14d3c62b42c1b478fc960f712685f076ebf9429664736f6c634300081c0033";

type ConsentManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsentManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsentManagement__factory extends ContractFactory {
  constructor(...args: ConsentManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _didRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_didRegistryAddress, overrides || {});
  }
  override deploy(
    _didRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_didRegistryAddress, overrides || {}) as Promise<
      ConsentManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConsentManagement__factory {
    return super.connect(runner) as ConsentManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsentManagementInterface {
    return new Interface(_abi) as ConsentManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConsentManagement {
    return new Contract(address, _abi, runner) as unknown as ConsentManagement;
  }
}
