/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DidIssuer, DidIssuerInterface } from "../../contracts/DidIssuer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_didRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DidIssuer__CredentialAlreadyIssued",
    type: "error",
  },
  {
    inputs: [],
    name: "DidIssuer__InvalidSubject",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "credentialType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "credentialId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CredentialIssued",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "credentialId",
        type: "bytes32",
      },
    ],
    name: "isCredentialValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "credentialType",
        type: "string",
      },
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "credentialId",
        type: "bytes32",
      },
    ],
    name: "issueCredential",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034607057601f61034438819003918201601f19168301916001600160401b03831184841017607557808492602094604052833981010312607057516001600160a01b03811690819003607057600080546001600160a01b0319169190911790556040516102b8908161008c8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081635c591ef11461006b5750636dc158eb1461003557600080fd5b34610066576020366003190112610066576004356000526001602052602060ff604060002054166040519015158152f35b600080fd5b346100665760603660031901126100665760043567ffffffffffffffff81116100665761009c903690600401610233565b60243567ffffffffffffffff8111610066576100bc903690600401610233565b60005463c8902a2160e01b8652602060048701819052929560443593909182906001600160a01b031681806100f560248201888d610261565b03915afa908115610227576000916101bb575b50156101aa5781600052600160205260ff60406000205416610199577f3d28bbee9384b086a7d8c99955e4ab96ea5e144003875fe3406af4c4cbfeeab294610188918360005260016020526040600020600160ff1982541617905561017a604051968796608088526080880191610261565b918583036020870152610261565b9060408301524260608301520390a1005b63030cb3db60e61b60005260046000fd5b631604938f60e21b60005260046000fd5b60203d602011610220575b601f8101601f1916820167ffffffffffffffff81118382101761020c576020918391604052810103126102085751908115158203610205575086610108565b80fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b503d6101c6565b6040513d6000823e3d90fd5b9181601f840112156100665782359167ffffffffffffffff8311610066576020838186019501011161006657565b908060209392818452848401376000828201840152601f01601f191601019056fea26469706673582212208818979a51a72950277b9137bffce16ad6181eb350899ff7d7b71d783e88196564736f6c634300081c0033";

type DidIssuerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DidIssuerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DidIssuer__factory extends ContractFactory {
  constructor(...args: DidIssuerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _didRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_didRegistryAddress, overrides || {});
  }
  override deploy(
    _didRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_didRegistryAddress, overrides || {}) as Promise<
      DidIssuer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DidIssuer__factory {
    return super.connect(runner) as DidIssuer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DidIssuerInterface {
    return new Interface(_abi) as DidIssuerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DidIssuer {
    return new Contract(address, _abi, runner) as unknown as DidIssuer;
  }
}
