/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DataRegistry,
  DataRegistryInterface,
} from "../../src/DataRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_serviceFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_didAuth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "DataRegistry__AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__ConsentAlreadyGranted",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__ConsentAlreadyRevoked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "DataRegistry__ConsentNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__DidAuthNotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__InvalidDID",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__InvalidDidAuthAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__InvalidInputParam",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__InvalidRecord",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__PaymentNotVerified",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "DataRegistry__ProducerNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__RecordAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__RecordNotActive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "DataRegistry__RecordNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__ServicePaused",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__UnauthorizedConsumer",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__UnauthorizedProducer",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__UnauthorizedServiceProvider",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__UnauthorizedVerifier",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
    ],
    name: "AccessNotAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "ownerDid",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
    ],
    name: "ConsumerAuthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
    ],
    name: "ConsumerDeauthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DataDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ownerDid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "DataRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "DataRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    name: "DataShared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "DataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "verifierDid",
        type: "string",
      },
    ],
    name: "DataVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "PauseStateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IDataRegistry.ConsentStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ProducerConsentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "ProducerRecordRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IDataRegistry.RecordStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "ProducerRecordStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "ProducerRecordUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "ownerDid",
        type: "string",
      },
    ],
    name: "ProducerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "ProviderMetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "ProviderSchemaUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "producerDid",
        type: "string",
      },
    ],
    name: "SharingNotAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "TokenAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_pause",
        type: "bool",
      },
    ],
    name: "changePauseState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "changeTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "didAuth",
    outputs: [
      {
        internalType: "contract DidAuth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getAddressFromDid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCompensationContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getProducerConsent",
    outputs: [
      {
        internalType: "enum IDataRegistry.ConsentStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
    ],
    name: "getProducerRecord",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "resourceType",
            type: "string",
          },
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isVerified",
            type: "bool",
          },
        ],
        internalType: "struct IDataRegistry.HealthRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerRecordCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerRecordInfo",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ownerDid",
            type: "string",
          },
          {
            internalType: "address",
            name: "producer",
            type: "address",
          },
          {
            internalType: "enum IDataRegistry.RecordStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "enum IDataRegistry.ConsentStatus",
            name: "consent",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct IDataRegistry.DataRecordCore",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerRecordStatus",
    outputs: [
      {
        internalType: "enum IDataRegistry.RecordStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerRecords",
    outputs: [
      {
        internalType: "enum IDataRegistry.RecordStatus",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum IDataRegistry.ConsentStatus",
        name: "",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "resourceType",
            type: "string",
          },
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isVerified",
            type: "bool",
          },
        ],
        internalType: "struct IDataRegistry.HealthRecord[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProviderMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IDataRegistry.Metadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "string",
        name: "requesterDid",
        type: "string",
      },
    ],
    name: "getRecordCid",
    outputs: [
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecordSchema",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
              },
            ],
            internalType: "struct IDataRegistry.Metadata",
            name: "schemaRef",
            type: "tuple",
          },
        ],
        internalType: "struct IDataRegistry.Schema",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalRecordsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
    ],
    name: "isConsumerAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "producerExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IDataRegistry.RecordStatus",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "enum IDataRegistry.ConsentStatus",
        name: "_consent",
        type: "uint8",
      },
    ],
    name: "registerProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_ownerDid",
        type: "string",
      },
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "_resourceType",
        type: "string",
      },
      {
        internalType: "enum IDataRegistry.ConsentStatus",
        name: "_consent",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IDataRegistry.RecordMetadata",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "registerProducerRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "removeProducerRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
      {
        internalType: "string",
        name: "ownerDid",
        type: "string",
      },
    ],
    name: "shareData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_didAuthAddress",
        type: "address",
      },
    ],
    name: "updateDidAuthAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "enum IDataRegistry.ConsentStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "updateProducerConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "resourceType",
        type: "string",
      },
      {
        internalType: "enum IDataRegistry.RecordStatus",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "enum IDataRegistry.ConsentStatus",
        name: "_consent",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IDataRegistry.RecordMetadata",
        name: "_recordMetadata",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "updaterDid",
        type: "string",
      },
    ],
    name: "updateProducerRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IDataRegistry.RecordMetadata",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "updateProducerRecordMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "enum IDataRegistry.RecordStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "updateProducerRecordStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
        ],
        internalType: "struct IDataRegistry.Metadata",
        name: "_metadata",
        type: "tuple",
      },
    ],
    name: "updateProviderMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "url",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
              },
            ],
            internalType: "struct IDataRegistry.Metadata",
            name: "schemaRef",
            type: "tuple",
          },
        ],
        internalType: "struct IDataRegistry.Schema",
        name: "_schemaRef",
        type: "tuple",
      },
    ],
    name: "updateProviderRecordSchema",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "string",
        name: "verifierDid",
        type: "string",
      },
    ],
    name: "verifyData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620001b757601f6200569d38819003918201601f19168301926001600160401b0392909183851183861017620001bc578160809284926040978852833981010312620001b7576200005381620001d2565b60208201516001600160a01b038082169490929091859003620001b757620000826060878601519501620001d2565b9133156200019f5760009284845491895192338382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08980a36001600160a81b0319163360ff60a01b1916178655600486905516908115620001905750600180546001600160a01b03199081168317909155885190969093611afe808601948511868610176200017c57918786949260c0969462003b9f87398b855216998a60208501528b8401526060830152670de0b6b3a7640000608083015260a082015203019082f0908115620001715750168160025416176002556003541617600355516139b79081620001e88239f35b8551903d90823e3d90fd5b634e487b7160e01b87526041600452602487fd5b634973c50160e01b8152600490fd5b8651631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001b75756fe6080604052600436101561001257600080fd5b60003560e01c80630a0137ab146132225780630d77a962146130fb5780630e2e92b0146130b357806313e1af3614612eb857806316fab11914612e1457806320c10fe814612cdc57806334808254146129be57806337959c941461291757806341cf798e1461257457806350ea4c68146122f8578063555e2c19146121a95780635c70dba5146120185780635c975abb14611ff2578063631f1c7914611f9757806369942c9514611f6e578063715018a614611f155780637ebe9dc214611b1a5780638020ccb6146119525780638da5cb5b146119295780639a96fcc11461190b578063a5c6b83d146118d1578063a64d27c314611887578063aa3c083e1461116a578063b52ac34d14610f94578063b950fb8f14610e8d578063c14cfdda14610e4e578063c9cda91f14610de5578063d32ad62214610dbc578063d95b322114610cb4578063da7383ed14610a2c578063de857725146102c3578063e9e797ac14610283578063f2fde38b146101fa5763fe80c4f41461019257600080fd5b346101f55760203660031901126101f5576001600160a01b036101b361327c565b1660005260096020526101f16101d66101dd604060002060405192838092613700565b0382613373565b6040519182916020835260208301906132b5565b0390f35b600080fd5b346101f55760203660031901126101f55761021361327c565b61021b6135a5565b6001600160a01b0390811690811561026a57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b346101f55760203660031901126101f55760206001600160a01b03806102a761327c565b1660005260098252600160406000200154161515604051908152f35b346101f55760e03660031901126101f5576004356001600160401b0381116101f5576102f390369060040161352e565b6024356001600160401b0381116101f55761031290369060040161352e565b926044359290916001600160a01b03841684036101f5576064356001600160401b0381116101f557366023820112156101f5576103599036906024816004013591016133af565b946084356001600160401b0381116101f55761037990369060040161352e565b95600360a43510156101f55760c4356001600160401b0381116101f5576103a490369060040161344a565b966103ad6136c6565b6001546001600160a01b031615610a1a578315610a08576001600160a01b03821615610a085760405186888237600d818801908152819003602090810190912080546001600160a01b0319166001600160a01b038581169182179092556000908152600990925260409091206001810180549195929091166109c557610434888a87613796565b80546001600160a81b0319166001600160a01b03851617815561045960a43582613682565b60006003860155805460ff60b01b1916600160b01b179055426002850155600454600181018111610987576001016004555b60018060a01b038316600052600b6020526104b46104ae604060002087896136e7565b546135d1565b6109b3576001600160a01b0383166000908152600a6020526040902080546801000000000000000081101561081e576104f291600182018155613859565b61099d57858761050192613796565b6003840154600181018111610987576001016003850155885161053f60208b01519260408c0151946040519d8e61053781613322565b5236916133af565b60208c015260408b015260608a01526080890152600060a089015260018060a01b0316600052600b602052610579604060002083856136e7565b9680518051906001600160401b03821161081e5781906105a38261059d8d546135d1565b8d613622565b602090601f831160011461092157600092610916575b50508160011b916000199060031b1c19161788555b602081015180516001600160401b03811161081e578060018b01926105fd826105f786546135d1565b86613622565b602090601f83116001146108b0576000926108a5575b50508160011b916000199060031b1c19161790555b604081015180516001600160401b03811161081e578060028b0192610651826105f786546135d1565b602090601f831160011461083f57600092610834575b50508160011b916000199060031b1c19161790555b60608101519788516001600160401b03811161081e576106ac816106a360038501546135d1565b60038501613622565b6020601f82116001146107825761076c959493928260a0936005937fd032e01f2d9158c8569c8e81b890fd35278fa07ba5e45b8087059b22d7cc6b489d9e600092610777575b50508160011b916000199060031b1c19161760038201555b6080840151600482015501910151151560ff8019835416911617905560024291015560408751970151928160405192839283378101600081520390209561075e604051958695606087526060870191613887565b9084820360208601526132b5565b9060408301520390a2005b015190508e806106f2565b6003830160005260206000209a60005b601f19841681106108065750926001837fd032e01f2d9158c8569c8e81b890fd35278fa07ba5e45b8087059b22d7cc6b489c9d60059461076c9a99989760a097601f198116106107ed575b505050811b01600382015561070a565b015160001960f88460031b161c191690558e80806107dd565b828201518d556001909c019b60209283019201610792565b634e487b7160e01b600052604160045260246000fd5b015190508b80610667565b6000858152602081209350601f198516905b81811061088d5750908460019594939210610874575b505050811b01905561067c565b015160001960f88460031b161c191690558b8080610867565b92936020600181928786015181550195019301610851565b015190508b80610613565b6000858152602081209350601f198516905b8181106108fe57509084600195949392106108e5575b505050811b019055610628565b015160001960f88460031b161c191690558b80806108d8565b929360206001819287860151815501950193016108c2565b015190508a806105b9565b60008c8152602081209350601f198516905b81811061096f5750908460019594939210610956575b505050811b0188556105ce565b015160001960f88460031b161c191690558a8080610949565b92936020600181928786015181550195019301610933565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b604051633fa2b9c960e11b8152600490fd5b506040516109d7816101d68188613700565b602081519101206109e936898b6133af565b602081519101201461048b575b60405163a72971e560e01b8152600490fd5b60405163fcf9ead760e01b8152600490fd5b604051630378e52960e61b8152600490fd5b346101f557610a3a3661355b565b6001546001600160a01b039081169392908415610a1a573360005260209460098652816001604060002001541615610c9c5733600052600b8652610a866104ae6040600020878a6136e7565b15610c755760ff610aab604051878a82378881898101600c81520301902086866136e7565b541615908115610bb8575b506109f6576002541684604051809263586d396b60e01b82528260048301528180610ae5602482018a8d613887565b03915afa908115610bac57600091610b7f575b5015610b6d57610b5294610b5993610b2a610b4593600295604051848682378981868101600c815203019020916136e7565b60ff19815416905533600052600b86526040600020916136e7565b0160405193848092613700565b0383613373565b6101f16040519282849384528301906132b5565b604051631a71808760e31b8152600490fd5b610b9f9150853d8711610ba5575b610b978183613373565b8101906138a8565b86610af8565b503d610b8d565b6040513d6000823e3d90fd5b6040516325e016d360e11b81529091508681600481855afa8015610bac578791600091610c46575b50604051928380809363e0bb933d60e01b825260406004830152610c08604483018b8b613887565b90602483015203915afa908115610bac57600091610c29575b501587610ab6565b610c409150863d8811610ba557610b978183613373565b87610c21565b82819392503d8311610c6e575b610c5d8183613373565b810103126101f55786905189610be0565b503d610c53565b60405163214173d760e11b81526004810187905280610c9860248201888b613887565b0390fd5b604051630f3a639160e11b8152336004820152602490fd5b346101f55760203660031901126101f557600435801515908181036101f557610cdb6135a5565b15610d6857610ce86135a5565b610cf06136c6565b610cf86136c6565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a15b60405190815233907fa97bea79c4fcd6e304357750d9d90655eaa0a6a938922de8184fdd06cab4788660203092a3005b610d706135a5565b610d7861395f565b610d8061395f565b60ff60a01b19600054166000557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1610d38565b346101f55760003660031901126101f5576001546040516001600160a01b039091168152602090f35b346101f55760203660031901126101f557610dfe61327c565b610e066135a5565b6001600160a01b03168015610a0857600380546001600160a01b031916821790557f2f0c7f17be551d1f4566672cd67adbe50173e96632f56ff80d80acc4ac00f328600080a2005b346101f557602060ff610e8182610e643661355b565b928260409592955193849283378101600c815203019020916136e7565b54166040519015158152f35b346101f55760003660031901126101f557610ea6613945565b50604051610eb381613358565b60405190600091600554610ec6816135d1565b80835290600190818116908115610f6c5750600114610f0f575b5050610ef1816101f1940382613373565b815260065460208201526040519182916020835260208301906132da565b6005600090815294507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828610610f545750505091820160200191610ef181610ee0565b80546020878601810191909152909501948101610f3a565b6101f196508492506020915092610ef19360ff191682840152151560051b8201019450610ee0565b346101f5576020806003193601126101f5576001600160401b03906004358281116101f557610fc7903690600401613404565b90610fd06135a5565b610fd86136c6565b815192835190811161081e57600590610ff182546135d1565b601f8111611114575b5082601f82116001146110705781907f8e35eca6c2d38f317a32ca1587b580845af194c0b0fe866a08c5fe2ae567f8d09596600092611065575b50508160011b916000199060031b1c19161790555b61105b818401519384600655516136a6565b92604051908152a2005b015190508680611034565b601f19821695836000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09660005b8181106110fd5750917f8e35eca6c2d38f317a32ca1587b580845af194c0b0fe866a08c5fe2ae567f8d09697918460019594106110e4575b505050811b019055611049565b015160001960f88460031b161c191690558680806110d7565b83830151895560019098019792860192860161109f565b61115a90836000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0601f8401851c810191868510611160575b601f01851c019061360b565b85610ffa565b909150819061114e565b346101f5576101003660031901126101f5576004356001600160401b0381116101f55761119b90369060040161352e565b60243591906001600160a01b03831683036101f5576044356001600160401b0381116101f5576111cf90369060040161352e565b6064929192356001600160401b0381116101f5576111f190369060040161352e565b600560849592953510156101f557600360a43510156101f55760c4356001600160401b0381116101f55761122990369060040161344a565b946001600160401b0360e435116101f5576112493660e43560040161352e565b9490936112546136c6565b6001600160a01b038a81166000908152600960205260409020600101541615611866576000546001600160a01b031633141580611853575b6109f6576001546001600160a01b03168015610a1a5760018060a01b038b166000526009602052604060002095600b6020526112cd60406000208a8d6136e7565b60018801549098906001600160a01b038116156118325760b01c60ff1615611820578854926112fb846135d1565b156117fa57604051611311816101d6818d613700565b602081519101206113233684866133af565b6020815191012014928315611738575b8315611664575b505050156109f6576001600160401b03831161081e578261135d611363926135d1565b88613622565b600090601f83116001146115f55761139f94939291600091836115ea575b50508160011b916000199060031b1c19161785555b60018501613796565b6113ae6084356001830161365e565b6113bd60a43560018301613682565b835180516001600160401b03811161081e578060028501926113e3826105f786546135d1565b602090601f831160011461158457600092611579575b50508160011b916000199060031b1c19161790555b6020840151805160038401916001600160401b03821161081e5761143c8261143685546135d1565b85613622565b602090601f831160011461150e5760039493929160009183611503575b50508160011b9160001990861b1c19161790555b60056040860193845160048201550160ff198154169055426002820155019182549360018501809511610987577fdb595948a728ad55d119c1e62d41fcd9b482095ce6ac864a4caa9ae4833be2fc946114ec945551915194816040519283928337810160008152039020946040519283926040845260408401906132b5565b60208301959095526001600160a01b0316930390a3005b015190508a80611459565b90601f198316918460005260206000209260005b818110611561575091600193918560039897969410611549575b505050811b01905561146d565b015160001983881b60f8161c191690558a808061153c565b92936020600181928786015181550195019301611522565b0151905089806113f9565b6000858152602081209350601f198516905b8181106115d257509084600195949392106115b9575b505050811b01905561140e565b015160001960f88460031b161c191690558980806115ac565b92936020600181928786015181550195019301611596565b013590508b80611381565b8660005260206000209160005b601f198516811061164c575091839160019361139f979695601f19811610611632575b505050811b018555611396565b0135600019600384901b60f8161c191690558b8080611625565b90926020600181928686013581550194019101611602565b60405163cb3e1fe760e01b815293509091602084600481865afa938415610bac576000946116fc575b50916116bb916020936040519586948593849363e0bb933d60e01b8552604060048601526044850191613887565b90602483015203915afa908115610bac576000916116dd575b508c808061133a565b6116f6915060203d602011610ba557610b978183613373565b8c6116d4565b91929093506020823d602011611730575b8161171a60209383613373565b810103126101f5579051929091906116bb61168d565b3d915061170d565b604051630de3574560e11b8152909350602081600481855afa908115610bac576000916117c8575b50602060405180809363e0bb933d60e01b82526040600483015261178860448301888a613887565b9060248301520381855afa908115610bac576000916117a9575b5092611333565b6117c2915060203d602011610ba557610b978183613373565b8f6117a2565b90506020813d6020116117f2575b816117e360209383613373565b810103126101f557518f611760565b3d91506117d6565b8c8b610c9860405192839263214173d760e11b8452602060048501526024840191613887565b604051633326770360e11b8152600490fd5b604051630f3a639160e11b81526001600160a01b038f166004820152602490fd5b50336001600160a01b038b16141561128c565b604051630f3a639160e11b81526001600160a01b038b166004820152602490fd5b346101f55760203660031901126101f5576001600160a01b036118a861327c565b166000526009602052602060ff60016040600020015460a01c166118cf60405180926134b6565bf35b346101f55760203660031901126101f5576001600160a01b036118f261327c565b16600052600a6020526020604060002054604051908152f35b346101f55760003660031901126101f5576020600454604051908152f35b346101f55760003660031901126101f5576000546040516001600160a01b039091168152602090f35b346101f5576119603661355b565b909261196a6136c6565b6001546001600160a01b03919082168015610a1a5733600052602092600984526001604060002001541615610c9c5733600052600b83526119b36104ae604060002087856136e7565b15611af757604051630de3574560e11b81528381600481855afa8015610bac578491600091611ac8575b50604051928380809363e0bb933d60e01b825260406004830152611a068c8b6044850191613887565b90602483015203915afa908115610bac57600091611aab575b5015611a99577f3fbb5b9a234eee03eca46fef56d9fc4105da82c38ace0aefb394e2388949033093611a949133600052600b84526005611a64604060002084846136e7565b01600160ff1982541617905581604051928392833781016000815203902094604051938385948552840191613887565b0390a2005b60405163cc8bfebf60e01b8152600490fd5b611ac29150833d8511610ba557610b978183613373565b86611a1f565b82819392503d8311611af0575b611adf8183613373565b810103126101f557839051886119dd565b503d611ad5565b60405163214173d760e11b81526004810184905280610c98602482018886613887565b346101f55760603660031901126101f5576001600160401b036004358181116101f557611b4b90369060040161352e565b6024929192358281116101f557611b6690369060040161352e565b9190926044359081116101f557611b8190369060040161352e565b9190943360005260206009815260018060a01b036001604060002001541615610c9c576000546001600160a01b031633141580611f0d575b6109f657611bc56136c6565b6001546001600160a01b03168015610a1a5733600090815260098352604090206001810154906001600160a01b03821615610c9c57611c0d6101d69160405192838092613700565b838151910120611c1e36888c6133af565b80519085012060405163cb3e1fe760e01b81529291148483600481875afa908115610bac578893600092611edb575b5085611c788d604051948592839263e0bb933d60e01b998a8552604060048601526044850191613887565b9060248301520381885afa918215610bac57600092611ebc575b50159081611eb3575b506109f65760025460405163586d396b60e01b81526004810186905290859082906001600160a01b03168180611cd5602482018d8d613887565b03915afa908115610bac57600091611e96575b5015610b6d5760a81c60ff166003811015611e8057611e51576040516325e016d360e11b8152908382600481865afa928315610bac578492600094611e20575b506040518080958194825260406004830152611d498d8d6044850191613887565b90602483015203915afa908115610bac57600091611e03575b5015611df157604051611d86918484833781858101600c81520301902085876136e7565b600160ff198254161790558160405192839283378101600081520390209381604051928392833781016000815203902091816040519283928337810160008152039020917f9fb317cf214e8ec9229ce9b8796fcfbf14114523602c68cbcb417e9b5a7a9dc5600080a4005b604051631b2d695d60e11b8152600490fd5b611e1a9150823d8411610ba557610b978183613373565b88611d62565b8381949295503d8311611e4a575b611e388183613373565b810103126101f557839151928b611d28565b503d611e2e565b6040805163b0ee660560e01b8152600481019190915280611e76604482018888613887565b3360248301520390fd5b634e487b7160e01b600052602160045260246000fd5b611ead9150853d8711610ba557610b978183613373565b8b611ce8565b9050158b611c9b565b611ed4919250863d8811610ba557610b978183613373565b908c611c92565b935090508483813d8111611f06575b611ef48183613373565b810103126101f557879251908c611c4d565b503d611eea565b506000611bb9565b346101f55760003660031901126101f557611f2e6135a5565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101f55760003660031901126101f5576002546040516001600160a01b039091168152602090f35b346101f55760203660031901126101f5576004356001600160401b0381116101f557611fc9602091369060040161352e565b80604051928337600d90820190815281900382019020546040516001600160a01b039091168152f35b346101f55760003660031901126101f557602060ff60005460a01c166040519015158152f35b346101f5576020806003193601126101f55761203261327c565b90600060c06040516120438161333d565b6060815282848201528260408201528260608201528260808201528260a0820152015260018060a01b03809216806000526009825282600160406000200154161561219157826000541633141580612187575b6109f657600052600981526040600020604051926120b38461333d565b6040516120c4816101d68186613700565b845260018201549183850192828116845260ff8160a01c1660408701906005811015611e8057815260ff8260a81c1660608801906003811015611e805761216f9261216491835260ff60808b019560b01c1615158552600360028701549660a08c0197885201549660c08b019788526121518a60e06040519d8e9d8e5251918d01526101008c01906132b5565b98511660408a01525160608901906134b6565b5160808701906132fa565b51151560a08501525160c08401525160e08301520390f35b5080331415612096565b60249060405190630f3a639160e11b82526004820152fd5b346101f55760403660031901126101f5576121c261327c565b6024356001600160401b0381116101f5576121e19036906004016133e6565b906121ea6138e6565b506001600160a01b039081166000818152600960205260409020600101549091908116156122df5760005416331415806122d5575b6109f6576101f19161223e91600052600b6020526040600020906138c0565b60ff60056040519261224f84613322565b604051612260816101d68185613700565b8452604051612276816101d68160018601613700565b602085015260405161228f816101d68160028601613700565b60408501526040516122a8816101d68160038601613700565b606085015260048101546080850152015416151560a08201526040519182916020835260208301906134c3565b508033141561221f565b604051630f3a639160e11b815260048101839052602490fd5b346101f55760403660031901126101f55760043560058110156101f55760243560038110156101f55760249061232c6136c6565b6001805460405163d38cca6160e01b8152336004820152936001600160a01b039392916000918691829087165afa938415610bac576000946124f9575b5033600052602092600984528160406000200154166124e1573360005260098352604060002094818601336001600160601b0360a01b8254161790558451956001600160401b03871161081e576123ca876123c483546135d1565b83613622565b8496601f811160011461247157600995949261242a9492826124189361243e9b600091612466575b50600019600383901b1c191690851b1790555b336000528686528260406000200161365e565b33600052848452604060002001613682565b3360005252600060036040822001556136a6565b337f9f1fa412bb163f6f44a52bf060bb20728f24361929ff4d9785cd40e427687515600080a3005b90508a01518c6123f2565b601f1981169782600052866000209860005b8181106124cc575092858361243e9b60099a9997946124189661242a9a98106124b3575b5050811b019055612405565b8c015160001960f88460031b161c191690558c806124a7565b898301518b5599860199918801918801612483565b604051633501bdc160e01b8152336004820152602490fd5b9093503d806000833e61250c8183613373565b8101906020818303126101f5578051906001600160401b0382116101f5570181601f820112156101f557805161254181613394565b9261254f6040519485613373565b818452602082840101116101f55761256d9160208085019101613292565b9285612369565b346101f5576020806003193601126101f5576001600160a01b03908161259861327c565b1690816000526009815260019280846040600020015416156128fe5760005416331415806128f4575b6109f6578160005260098152604060002090600a81526040600020546125e68161391a565b6125f36040519182613373565b818152601f1991826126048261391a565b0160005b8181106128d757505060005b8181106127835750508584015494600052600a83526003604060002094015492845461263f8161391a565b9061264d6040519283613373565b808252888383018098600052846000206000915b8483106127585750505050506040519661269860a08901916126898a60ff8360a01c166134b6565b60ff858b019160a81c166132fa565b60a06040890152835180915260c08801908360c08260051b8b01019501916000905b8b8b84841061272857945050505050830360608801525191828152818101828460051b83010196946000925b8584106126fa5789808a8a60808301520390f35b90919293949597858061271783868f958790030188528c516132b5565b9a01940194019295949391906126e6565b9661274681998293949596979b9960bf199082030186528b516134c3565b990192019201909291969594966126ba565b8387819260409b999a9b51612771816101d68189613700565b81520192019201919097969597612661565b8660009593949552600b83526040600020600a8452836127a7836040600020613859565b50916040519283918c60009280546127be816135d1565b9281169081156128c05750600114612886575b505081520301902060ff6005604051926127ea84613322565b6040516127fb816101d68185613700565b84526101d66128128d604051928380928601613700565b8785015260405161282a816101d68160028601613700565b6040850152604051612843816101d68160038601613700565b606085015260048101546080850152015416151560a08201526128668286613931565b526128718185613931565b50600019811461098757870193929193612614565b90919250600052836000208d6000915b8383106128aa575050508201908d806127d1565b8054838901528a96889650909201918101612896565b60ff19168652505080151502830191508d806127d1565b94809394956128e46138e6565b8282880101520194939294612608565b50813314156125c1565b604051630f3a639160e11b815260048101849052602490fd5b346101f55760403660031901126101f55761293061327c565b60243560038110156101f5576129446135a5565b61294c6136c6565b6001600160a01b03918216600081815260096020526040902060010154909216156122df5760207f64eb31408af76a886f9c4792085f613c997ab89b66ad33d65f742370571953cc9183600052600982526129ae816001604060002001613682565b6129bb60405180926132fa565ba2005b346101f55760603660031901126101f5576129d761327c565b6001600160401b03906024358281116101f5576129f89036906004016133e6565b916044358181116101f557612a1190369060040161344a565b90612a1a6135a5565b612a226136c6565b60018060a01b0380931692836000526020916009835260019182604060002001541615612cc35784600052600b8352612a626104ae6040600020886138c0565b15612ca157835185600052600b84526002612a816040600020896138c0565b019080519083821161081e578190612a9d826105f786546135d1565b8690601f8311600114612c3e57600092612c33575b5050600019600383901b1c191690841b1790555b828401519185600052600b84526003612ae36040600020896138c0565b0192805192831161081e57612afc836105f786546135d1565b8490601f8411600114612ba65792807f1a6c621ce297512b54d9fe58c6d8e32546e8a41325802ae88d331d0e3ad3afbf9795938193612b929896600094612b9b575b50501b916000199060031b1c19161790555b612b7d6040830192835187600052600b84526004612b7260406000208b6138c0565b0155519251966136a6565b956040519384936040855260408501906132b5565b918301520390a3005b015192508b80612b3e565b90601f9392931983169185600052866000209260005b818110612c1e575091612b9297959391857f1a6c621ce297512b54d9fe58c6d8e32546e8a41325802ae88d331d0e3ad3afbf9a98969410612c05575b505050811b019055612b50565b015160001960f88460031b161c19169055898080612bf8565b82840151855593860193928801928801612bbc565b015190508980612ab2565b90869350601f1983169185600052886000209260005b8a828210612c8b5750508411612c72575b505050811b019055612ac6565b015160001960f88460031b161c19169055898080612c65565b8385015186558a97909501949384019301612c54565b60405163214173d760e11b81526004810184905280610c9860248201896132b5565b604051630f3a639160e11b815260048101869052602490fd5b346101f5576020806003193601126101f55760006003612cfa61327c565b612d026135a5565b612d0a6136c6565b60018060a01b03169283835260098152806101d6612d316040862060405192838092613700565b80519081612ddf575b505050838352600981526040832090612d5382546135d1565b80612da2575b505082600182015582600282015501556004546000198101908111610987576004557fe6e557d47a75287b3ed558b7c82b3380135b5bfc0752ebe108433e9cecae03e0600080a2005b601f8111600114612dba5750508281555b8480612d59565b612dd6601f86938585528420920160051c82016001830161360b565b81835555612db3565b81612df284936040518096819501613292565b8101600d8152030190206001600160601b0360a01b8154169055808580612d3a565b346101f55760403660031901126101f557612e2d61327c565b60243560058110156101f557612e416135a5565b612e496136c6565b6001600160a01b03918216600081815260096020526040902060010154909216156122df5760207f730b94e013ecb1b73f119bf1a87c2328d2be36ffa5dfe7982bd2dfdb61e7e86a918360005260098252612eab81600160406000200161365e565b6129bb60405180926134b6565b346101f557602060031981813601126101f5576004356001600160401b03918282116101f557839082360301126101f55760405190612ef682613307565b8060040135908382116101f5576004612f129236920101613404565b8152612f1c6135a5565b612f246136c6565b805151805192831161081e57612f3b6007546135d1565b601f811161305a575b508390601f8411600114612fb3577fa7edb700029c08cb918eb17ac416c6bbbdb72b7f45f292875c84d7693678b117939160009183612fa8575b50508160011b916000199060031b1c1916176007555b519161105b818401519384600855516136a6565b015190508580612f7e565b90601f1984169160076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889260005b878282106130445750509160019391867fa7edb700029c08cb918eb17ac416c6bbbdb72b7f45f292875c84d7693678b11797941061302b575b505050811b01600755612f94565b015160001960f88460031b161c1916905585808061301d565b6001859682939686015181550195019301612fe4565b6130a39060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688601f860160051c8101918787106130a9575b601f0160051c019061360b565b84612f44565b9091508190613096565b346101f55760203660031901126101f5576001600160a01b036130d461327c565b166000526009602052602060ff60016040600020015460a81c166118cf60405180926132fa565b346101f55760003660031901126101f55760405161311881613307565b613120613945565b905260405161312e81613307565b6040519061313b82613358565b60405191600060075461314d816135d1565b808652906001908181169081156131fb57506001146131a0575b505092613179816101f1950382613373565b815260085460208201528152604051918291602083525160208084015260408301906132da565b6007600090815292507fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b8284106131e357505050830160200161317984613167565b805460208589018101919091529093019281016131cb565b60ff191660208089019190915292151560051b870190920192506131799150859050613167565b346101f55760203660031901126101f55761323b61327c565b6132436135a5565b6001600160a01b0316801561326a576001600160601b0360a01b6001541617600155600080f35b604051634973c50160e01b8152600490fd5b600435906001600160a01b03821682036101f557565b60005b8381106132a55750506000910152565b8181015183820152602001613295565b906020916132ce81518092818552858086019101613292565b601f01601f1916010190565b906020806132f184516040855260408501906132b5565b93015191015290565b906003821015611e805752565b602081019081106001600160401b0382111761081e57604052565b60c081019081106001600160401b0382111761081e57604052565b60e081019081106001600160401b0382111761081e57604052565b604081019081106001600160401b0382111761081e57604052565b90601f801991011681019081106001600160401b0382111761081e57604052565b6001600160401b03811161081e57601f01601f191660200190565b9291926133bb82613394565b916133c96040519384613373565b8294818452818301116101f5578281602093846000960137010152565b9080601f830112156101f557816020613401933591016133af565b90565b9190916040818403126101f5576040519061341e82613358565b81938135916001600160401b0383116101f55761344160209392849383016133e6565b84520135910152565b91906060838203126101f557604051906001600160401b0390606083018281118482101761081e57604052829480358381116101f5578261348c9183016133e6565b845260208101359283116101f5576134aa60409392849383016133e6565b60208501520135910152565b906005821015611e805752565b9060a0806135196135076134f56134e3875160c0885260c08801906132b5565b602088015187820360208901526132b5565b604087015186820360408801526132b5565b606086015185820360608701526132b5565b93608081015160808501520151151591015290565b9181601f840112156101f5578235916001600160401b0383116101f557602083818601950101116101f557565b60406003198201126101f5576001600160401b03916004358381116101f557826135879160040161352e565b939093926024359182116101f5576135a19160040161352e565b9091565b6000546001600160a01b031633036135b957565b60405163118cdaa760e01b8152336004820152602490fd5b90600182811c92168015613601575b60208310146135eb57565b634e487b7160e01b600052602260045260246000fd5b91607f16916135e0565b818110613616575050565b6000815560010161360b565b9190601f811161363157505050565b61365c926000526020600020906020601f840160051c830193106130a957601f0160051c019061360b565b565b906005811015611e8057815460ff60a01b191660a09190911b60ff60a01b16179055565b906003811015611e8057815460ff60a81b191660a89190911b60ff60a81b16179055565b6136be90602060405192828480945193849201613292565b810103902090565b60ff60005460a01c166136d557565b60405163d93c066560e01b8152600490fd5b6020919283604051948593843782019081520301902090565b9060009291805491613711836135d1565b9182825260019384811690816000146137735750600114613733575b50505050565b90919394506000526020928360002092846000945b83861061375f57505050500101903880808061372d565b805485870183015294019385908201613748565b9294505050602093945060ff191683830152151560051b0101903880808061372d565b9092916001600160401b03811161081e576137bb816137b584546135d1565b84613622565b6000601f82116001146137f557819293946000926137ea575b50508160011b916000199060031b1c1916179055565b0135905038806137d4565b601f198216948382526020918281209281905b88821061384157505083600195969710613827575b505050811b019055565b0135600019600384901b60f8161c1916905538808061381d565b80600184968294958701358155019501920190613808565b80548210156138715760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b908160209103126101f5575180151581036101f55790565b6020906138da928260405194838680955193849201613292565b82019081520301902090565b604051906138f382613322565b600060a0836060815260606020820152606060408201526060808201528260808201520152565b6001600160401b03811161081e5760051b60200190565b80518210156138715760209160051b010190565b6040519061395282613358565b6000602083606081520152565b60ff60005460a01c161561396f57565b604051638dfc202b60e01b8152600490fdfea2646970667358221220dd8a94149503ea70c5cf84222a4d84478d36bca714c562c4a41565f4160e224764736f6c634300081400336080346200013f57601f62001afe38819003918201601f19168301916001600160401b03831184841017620001445780849260c0946040528339810103126200013f576200004d816200015a565b906200005c602082016200015a565b60408201516001600160a01b038082169492939092918590036200013f576060810151836200009360a0608085015194016200015a565b931695861562000126576000549660405197818782167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018060a81b03191617600055678ac7230489e8000060045560006006558460018060a01b031996168660015416176001558560025416176002556003556005551690600954161760095561198e9081620001708239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200013f5756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263012a33aa146116ec5750816301c61a32146112945781630552f9ff1461122d5781630a0137ab146111d057816311a1933c146111b15781631fa8c9ae1461118f57816320875d6614610ed05781633f185b6c14610e0e5781634be3a6e914610d9c578163586d396b14610d375781635a21533814610d185781635c975abb14610cf357816364208e0914610cca578163715018a614610c705781637418c96814610c4a5781637843365514610bad5781637af8bb5d14610aff5781637c87816614610ae15781638135c36f146109e75781638da5cb5b146109bf5781638e0e4e09146107f257816394906bcf146107915781639a3867e914610558578163c9cda91f146104fb578163d15070011461049b578163d32ad62214610472578163d3e256bf14610409578163dea182c1146103e0578163e058e997146103a1578163f2fde38b1461031a578163f9468713146102aa57508063fc0c546a146102825763fe80c4f41461019057600080fd5b3461027e576020908160031936011261027a576001600160a01b036101b3611708565b168352600a82528083208151938491818154906101cf82611881565b92838652600192888482169182600014610250575050600114610212575b858861020e896101ff848a0385611723565b519282849384528301906117d5565b0390f35b87945081939291528383205b82841061023857505050820101816101ff61020e386101ed565b8054848a01860152889550879490930192810161021e565b60ff19168882015294151560051b870190940194508593506101ff925061020e91503890506101ed565b8280fd5b5080fd5b503461027e578160031936011261027e5760015490516001600160a01b039091168152602090f35b905082346103175760203660031901126103175781359067ffffffffffffffff821161031757506102e36102f59260209236910161175b565b818451938285809451938492016117b2565b8101600881520301902060ff6001825492015416825191825215156020820152f35b80fd5b90503461027a57602036600319011261027a57610335611708565b9061033e61183d565b6001600160a01b0391821692831561038b57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b50503461027e57602036600319011261027e57806020926103c0611708565b6103c861183d565b6001600160a01b031681526007845220549051908152f35b50503461027e578160031936011261027e5760015490516001600160a01b039091168152602090f35b9190503461027a57602036600319011261027a5781359161042861183d565b821561046457506003549082600355519081527fea943276b7af14e01ef5207cd2cee75f7c7b742afe03d223779a09627301965560203392a380f35b905163f0adf53360e01b8152fd5b50503461027e578160031936011261027e5760095490516001600160a01b039091168152602090f35b50503461027e57602036600319011261027e57602091906001600160a01b036104c2611708565b1682526007835280822054151591826104df575b50519015158152f35b819250906104f291600a85522054611881565b151590386104d6565b90503461027a57602036600319011261027a57610516611708565b61051e61183d565b6001600160a01b031691821561054b5750506bffffffffffffffffffffffff60a01b600154161760015580f35b5163f0adf53360e01b8152fd5b83833461027e57610568366117fa565b93909161057361183d565b60095481516325e016d360e11b81526020946001600160a01b0392909190831686828781845afa918215610787579087918993610750575b50855163e0bb933d60e01b815287810187905292839190829081906105d3604483018f6117d5565b90602483015203915afa908115610746578791610719575b501561070a57168452600b835283209184519167ffffffffffffffff83116106f757506106188354611881565b601f81116106be575b5080601f831160011461065c5750839482939492610651575b50508160011b916000199060031b1c191617905580f35b01519050848061063a565b90601f198316958486528286209286905b8882106106a65750508360019596971061068d575b505050811b01905580f35b015160001960f88460031b161c19169055848080610682565b8060018596829496860151815501950193019061066d565b6106e790848652828620601f850160051c8101918486106106ed575b601f0160051c019061191f565b85610621565b90915081906106da565b634e487b7160e01b855260419052602484fd5b505051630a3f1b7960e21b8152fd5b6107399150863d881161073f575b6107318183611723565b810190611869565b886105eb565b503d610727565b84513d89823e3d90fd5b8281939294503d8311610780575b6107688183611723565b8101031261077c57519086906105d36105ab565b8780fd5b503d61075e565b85513d8a823e3d90fd5b50503461027e578160031936011261027e5760207f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916107cf61183d565b6107d7611936565b6107df611936565b835460ff60a01b1916845551338152a180f35b83833461027e57610802366117fa565b93909161080d61183d565b600954815163cb3e1fe760e01b81526020946001600160a01b0392909190831686828781845afa91821561078757908791899361098c575b50855163e0bb933d60e01b8152878101879052928391908290819061086d604483018f6117d5565b90602483015203915afa90811561074657879161096f575b501561096057168452600a835283209184519167ffffffffffffffff83116106f757506108b28354611881565b601f8111610932575b5080601f83116001146108ea57508394829394926106515750508160011b916000199060031b1c191617905580f35b90601f198316958486528286209286905b88821061091a5750508360019596971061068d57505050811b01905580f35b806001859682949686015181550195019301906108fb565b61095a90848652828620601f850160051c8101918486106106ed57601f0160051c019061191f565b856108bb565b50505163319f172f60e21b8152fd5b6109869150863d881161073f576107318183611723565b88610885565b8281939294503d83116109b8575b6109a48183611723565b8101031261077c575190869061086d610845565b503d61099a565b50503461027e578160031936011261027e57905490516001600160a01b039091168152602090f35b9190503461027a57602036600319011261027a57813591610a0661183d565b610a0e6118fe565b600654808411610ad25783610a22916118f1565b60065560018060a01b03918460208460015416604486600254168551948593849263a9059cbb60e01b8452898401528a60248401525af1908115610ac8578691610aaa575b5015610a9d575050600254169042917f0ec851daa65cf683ea50a214d0556df1c12c6c97741c24d6a433b81b01b8a1ef8480a480f35b51637024dad560e11b8152fd5b610ac2915060203d811161073f576107318183611723565b38610a67565b82513d88823e3d90fd5b5090516306ba5aa760e11b8152fd5b90503461027a578260031936011261027a5760209250549051908152f35b50503461027e576020908160031936011261027a576001600160a01b03610b24611708565b168352600b8252808320815193849181815490610b4082611881565b92838652600192888482169182600014610250575050600114610b6f57858861020e896101ff848a0385611723565b87945081939291528383205b828410610b9557505050820101816101ff61020e386101ed565b8054848a018601528895508794909301928101610b7b565b9190503461027a578260031936011261027a5760015460025482516370a0823160e01b81526001600160a01b039182169481019490945260209184916024918391165afa918215610c40578392610c09575b6020838351908152f35b9091506020813d8211610c38575b81610c2460209383611723565b8101031261027a5760209250519038610bff565b3d9150610c17565b81513d85823e3d90fd5b50503461027e578160031936011261027e57806020923381526007845220549051908152f35b8334610317578060031936011261031757610c8961183d565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461027e578160031936011261027e5760025490516001600160a01b039091168152602090f35b50503461027e578160031936011261027e5760ff6020925460a01c1690519015158152f35b50503461027e578160031936011261027e576020906006549051908152f35b8284346103175760203660031901126103175782359067ffffffffffffffff821161031757506001610d866020610d74819660ff9536910161175b565b818651938285809451938492016117b2565b8101600881520301902001541690519015158152f35b90503461027a57602036600319011261027a57803590610dba61183d565b8115610e0057507fbef184c70b971ce37dd431ed022897a9211e97ca421f71da4c3aa85da4f6c5e59160609160055491816005558051923384526020840152820152a180f35b825163f0adf53360e01b8152fd5b50503461027e57602036600319011261027e577f7aeea51f76cf53bb0e38ea557afb288adf612290f445157ce8bf0e19fdcc4c766020610e4c611708565b610e5461183d565b610e5c6118fe565b60018060a01b031692838552600782528481812055600a825284818120610e838154611881565b80610e94575b50505051428152a280f35b82601f8211600114610eac575050555b843880610e89565b9091808252610ec9601f878420940160051c84016001850161191f565b5555610ea4565b90503461027a576020918260031936011261118b57813592610ef06118fe565b338552600a815281852082518154918188610f0a85611881565b9283835260019587878216918260001461116b57505060011461112d575b50610f3592500382611723565b805115908115611052575b506110435783548086106110335733875260078352838720549081106110235785116110145781869133835260078252848320610f7e8882546118f1565b905554845163a9059cbb60e01b815233878201526024810188905292839160449183916001600160a01b03165af191821561100a578692610fed575b505015610a9d5750504290337f9e6f10237a3bc28f40142a7f51474829ca0926a141b2aa82d169584162500fda8480a480f35b6110039250803d1061073f576107318183611723565b3880610fba565b83513d88823e3d90fd5b5050516379d9383360e11b8152fd5b505050516306ba5aa760e11b8152fd5b5050505163b2726f4960e01b8152fd5b5050516351a846b160e11b8152fd5b600954855163cb3e1fe760e01b815292506001600160a01b03169084838881855afa92831561112357908592918a946110ea575b50906110ad91875180958194829363e0bb933d60e01b84528b8d85015260448401906117d5565b90602483015203915afa9081156107465787916110cd575b501538610f40565b6110e49150833d851161073f576107318183611723565b386110c5565b838193949295503d831161111c575b6111038183611723565b810103126111185751918491906110ad611086565b8880fd5b503d6110f9565b86513d8b823e3d90fd5b91505088528184808a20858b915b858310611152575050610f35935082010138610f28565b809192945054838588010152019101859085859361113b565b60ff191685820152610f3595151560051b8501019250389150610f289050565b8380fd5b83903461027e57602036600319011261027e576111aa61183d565b8035905580f35b50503461027e578160031936011261027e576020906003549051908152f35b90503461027a57602036600319011261027a576111eb611708565b6111f361183d565b6001600160a01b03169182156112205750506bffffffffffffffffffffffff60a01b600954161760095580f35b5163778e115760e01b8152fd5b50503461027e578160031936011261027e5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161126b61183d565b6112736118fe565b61127b6118fe565b835460ff60a01b1916600160a01b17845551338152a180f35b90508234610317576080366003190112610317576112b0611708565b9267ffffffffffffffff9060243582811161118b576112d2903690860161175b565b906064358381116116e8576112ea903690870161175b565b60095482516325e016d360e11b8152976001600160a01b039460209493909286169190858b8b81865afa9a8b156116de57899b6116af575b5099856113508b9c879c999a9b9c5193849283928a63e0bb933d60e01b9d8e865285015260448401906117d5565b9060248301520381865afa9081156116a5578a91611688575b501561167857861694858952600a8552838920918451908a938281549561138f87611881565b928383526001978b898216918260001461165857505060011461161b575b506113ba92500383611723565b81511592831561154e575b50505061153e57841561152e5787846113e26005546044356118bb565b9783541660648c875194859384926323b872dd60e01b845233908401523060248401528c60448401525af1908115611524578991611507575b50156114f7576114496064611432600354896118bb565b048097611441826006546118e4565b6006556118f1565b968589526007855283892061145f8982546118e4565b9055835190818501908111828210176114e4577fa6c1325e03b867ee45303c64111dc7e52670f1da44597390374b5210cda6508d969798999a5084528881526114bb8580830194848652818751938285809451938492016117b2565b8101600881520301902090518155019051151560ff80198354169116179055519384523393a480f35b634e487b7160e01b8a5260418b5260248afd5b8251637024dad560e11b81528990fd5b61151e9150853d871161073f576107318183611723565b8a61141b565b84513d8b823e3d90fd5b825163778e115760e01b81528990fd5b82516351a846b160e11b81528990fd5b865163cb3e1fe760e01b8152929350909187818e81865afa9081156116115787928994928f928f916115d6575b50611597855197889687958695865285015260448401906117d5565b90602483015203915afa9081156115245789916115b9575b50158a80806113c5565b6115d09150853d871161073f576107318183611723565b8a6115af565b9395925050925081813d831161160a575b6115f18183611723565b8101031261160657918c87928994513861157b565b8b80fd5b503d6115e7565b87513d8e823e3d90fd5b9150508c5282888d878282205b85831061163f5750506113ba93508201018f6113ad565b8091929450548385890101520191018990878693611628565b915092506113ba94915060ff191682840152151560051b8201018f6113ad565b83516366a70fa760e11b81528a90fd5b61169f9150863d881161073f576107318183611723565b8b611369565b85513d8c823e3d90fd5b9a50858b813d83116116d7575b6116c68183611723565b810103126111185799519985611322565b503d6116bc565b85513d8b823e3d90fd5b8480fd5b84903461027e578160031936011261027e576020906005548152f35b600435906001600160a01b038216820361171e57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761174557604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121561171e5780359067ffffffffffffffff82116117455760405192611790601f8401601f191660200185611723565b8284526020838301011161171e57816000926020809301838601378301015290565b60005b8381106117c55750506000910152565b81810151838201526020016117b5565b906020916117ee815180928185528580860191016117b2565b601f01601f1916010190565b90604060031983011261171e576004356001600160a01b038116810361171e57916024359067ffffffffffffffff821161171e5761183a9160040161175b565b90565b6000546001600160a01b0316330361185157565b60405163118cdaa760e01b8152336004820152602490fd5b9081602091031261171e5751801515810361171e5790565b90600182811c921680156118b1575b602083101461189b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611890565b818102929181159184041417156118ce57565b634e487b7160e01b600052601160045260246000fd5b919082018092116118ce57565b919082039182116118ce57565b60ff60005460a01c1661190d57565b60405163d93c066560e01b8152600490fd5b81811061192a575050565b6000815560010161191f565b60ff60005460a01c161561194657565b604051638dfc202b60e01b8152600490fdfea2646970667358221220b139240d1cf2fc909b381ee8674dce7a9c70c237544cd304e085d09d31048bd064736f6c63430008140033";

type DataRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataRegistry__factory extends ContractFactory {
  constructor(...args: DataRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _provider: AddressLike,
    _serviceFee: BigNumberish,
    _didAuth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _token,
      _provider,
      _serviceFee,
      _didAuth,
      overrides || {}
    );
  }
  override deploy(
    _token: AddressLike,
    _provider: AddressLike,
    _serviceFee: BigNumberish,
    _didAuth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _token,
      _provider,
      _serviceFee,
      _didAuth,
      overrides || {}
    ) as Promise<
      DataRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DataRegistry__factory {
    return super.connect(runner) as DataRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataRegistryInterface {
    return new Interface(_abi) as DataRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataRegistry {
    return new Contract(address, _abi, runner) as unknown as DataRegistry;
  }
}
