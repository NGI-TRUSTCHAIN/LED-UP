/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Compensation,
  CompensationInterface,
} from "../../src/Compensation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_leveaWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_serviceFeePercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unitPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_didAuthAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Compensation__InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidConsumer",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidConsumerDID",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidInputParam",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidProducer",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidProducerDID",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__InvalidRole",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__LowDepositAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__MinimumWithdrawAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__NoBalanceToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__OnlyOwnerCanWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__ProducerAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "Compensation__TokenTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "serviceFee",
        type: "uint256",
      },
    ],
    name: "PaymentProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProducerPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProducerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldServiceFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newServiceFee",
        type: "uint256",
      },
    ],
    name: "ServiceFeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ServiceFeeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldUnitPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newUnitPrice",
        type: "uint256",
      },
    ],
    name: "UnitPriceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newServiceFee",
        type: "uint256",
      },
    ],
    name: "changeServiceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "changeTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newUnitPrice",
        type: "uint256",
      },
    ],
    name: "changeUnitPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "didAuth",
    outputs: [
      {
        internalType: "contract DidAuth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "getConsumerDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLeveaWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLeveaWalletBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumWithdrawAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPaymentTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProducerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "getProducerDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getServiceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnitPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPayed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dataSize",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
    ],
    name: "processPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "producerExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_did",
        type: "string",
      },
    ],
    name: "registerConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
      {
        internalType: "string",
        name: "_did",
        type: "string",
      },
    ],
    name: "registerProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_producer",
        type: "address",
      },
    ],
    name: "removeProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setMinimumWithdrawAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_didAuthAddress",
        type: "address",
      },
    ],
    name: "updateDidAuthAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_recordId",
        type: "string",
      },
    ],
    name: "verifyPayment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawProducerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawServiceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200013f57601f62001afe38819003918201601f19168301916001600160401b03831184841017620001445780849260c0946040528339810103126200013f576200004d816200015a565b906200005c602082016200015a565b60408201516001600160a01b038082169492939092918590036200013f576060810151836200009360a0608085015194016200015a565b931695861562000126576000549660405197818782167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018060a81b03191617600055678ac7230489e8000060045560006006558460018060a01b031996168660015416176001558560025416176002556003556005551690600954161760095561198e9081620001708239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200013f5756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263012a33aa146116ec5750816301c61a32146112945781630552f9ff1461122d5781630a0137ab146111d057816311a1933c146111b15781631fa8c9ae1461118f57816320875d6614610ed05781633f185b6c14610e0e5781634be3a6e914610d9c578163586d396b14610d375781635a21533814610d185781635c975abb14610cf357816364208e0914610cca578163715018a614610c705781637418c96814610c4a5781637843365514610bad5781637af8bb5d14610aff5781637c87816614610ae15781638135c36f146109e75781638da5cb5b146109bf5781638e0e4e09146107f257816394906bcf146107915781639a3867e914610558578163c9cda91f146104fb578163d15070011461049b578163d32ad62214610472578163d3e256bf14610409578163dea182c1146103e0578163e058e997146103a1578163f2fde38b1461031a578163f9468713146102aa57508063fc0c546a146102825763fe80c4f41461019057600080fd5b3461027e576020908160031936011261027a576001600160a01b036101b3611708565b168352600a82528083208151938491818154906101cf82611881565b92838652600192888482169182600014610250575050600114610212575b858861020e896101ff848a0385611723565b519282849384528301906117d5565b0390f35b87945081939291528383205b82841061023857505050820101816101ff61020e386101ed565b8054848a01860152889550879490930192810161021e565b60ff19168882015294151560051b870190940194508593506101ff925061020e91503890506101ed565b8280fd5b5080fd5b503461027e578160031936011261027e5760015490516001600160a01b039091168152602090f35b905082346103175760203660031901126103175781359067ffffffffffffffff821161031757506102e36102f59260209236910161175b565b818451938285809451938492016117b2565b8101600881520301902060ff6001825492015416825191825215156020820152f35b80fd5b90503461027a57602036600319011261027a57610335611708565b9061033e61183d565b6001600160a01b0391821692831561038b57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b50503461027e57602036600319011261027e57806020926103c0611708565b6103c861183d565b6001600160a01b031681526007845220549051908152f35b50503461027e578160031936011261027e5760015490516001600160a01b039091168152602090f35b9190503461027a57602036600319011261027a5781359161042861183d565b821561046457506003549082600355519081527fea943276b7af14e01ef5207cd2cee75f7c7b742afe03d223779a09627301965560203392a380f35b905163f0adf53360e01b8152fd5b50503461027e578160031936011261027e5760095490516001600160a01b039091168152602090f35b50503461027e57602036600319011261027e57602091906001600160a01b036104c2611708565b1682526007835280822054151591826104df575b50519015158152f35b819250906104f291600a85522054611881565b151590386104d6565b90503461027a57602036600319011261027a57610516611708565b61051e61183d565b6001600160a01b031691821561054b5750506bffffffffffffffffffffffff60a01b600154161760015580f35b5163f0adf53360e01b8152fd5b83833461027e57610568366117fa565b93909161057361183d565b60095481516325e016d360e11b81526020946001600160a01b0392909190831686828781845afa918215610787579087918993610750575b50855163e0bb933d60e01b815287810187905292839190829081906105d3604483018f6117d5565b90602483015203915afa908115610746578791610719575b501561070a57168452600b835283209184519167ffffffffffffffff83116106f757506106188354611881565b601f81116106be575b5080601f831160011461065c5750839482939492610651575b50508160011b916000199060031b1c191617905580f35b01519050848061063a565b90601f198316958486528286209286905b8882106106a65750508360019596971061068d575b505050811b01905580f35b015160001960f88460031b161c19169055848080610682565b8060018596829496860151815501950193019061066d565b6106e790848652828620601f850160051c8101918486106106ed575b601f0160051c019061191f565b85610621565b90915081906106da565b634e487b7160e01b855260419052602484fd5b505051630a3f1b7960e21b8152fd5b6107399150863d881161073f575b6107318183611723565b810190611869565b886105eb565b503d610727565b84513d89823e3d90fd5b8281939294503d8311610780575b6107688183611723565b8101031261077c57519086906105d36105ab565b8780fd5b503d61075e565b85513d8a823e3d90fd5b50503461027e578160031936011261027e5760207f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa916107cf61183d565b6107d7611936565b6107df611936565b835460ff60a01b1916845551338152a180f35b83833461027e57610802366117fa565b93909161080d61183d565b600954815163cb3e1fe760e01b81526020946001600160a01b0392909190831686828781845afa91821561078757908791899361098c575b50855163e0bb933d60e01b8152878101879052928391908290819061086d604483018f6117d5565b90602483015203915afa90811561074657879161096f575b501561096057168452600a835283209184519167ffffffffffffffff83116106f757506108b28354611881565b601f8111610932575b5080601f83116001146108ea57508394829394926106515750508160011b916000199060031b1c191617905580f35b90601f198316958486528286209286905b88821061091a5750508360019596971061068d57505050811b01905580f35b806001859682949686015181550195019301906108fb565b61095a90848652828620601f850160051c8101918486106106ed57601f0160051c019061191f565b856108bb565b50505163319f172f60e21b8152fd5b6109869150863d881161073f576107318183611723565b88610885565b8281939294503d83116109b8575b6109a48183611723565b8101031261077c575190869061086d610845565b503d61099a565b50503461027e578160031936011261027e57905490516001600160a01b039091168152602090f35b9190503461027a57602036600319011261027a57813591610a0661183d565b610a0e6118fe565b600654808411610ad25783610a22916118f1565b60065560018060a01b03918460208460015416604486600254168551948593849263a9059cbb60e01b8452898401528a60248401525af1908115610ac8578691610aaa575b5015610a9d575050600254169042917f0ec851daa65cf683ea50a214d0556df1c12c6c97741c24d6a433b81b01b8a1ef8480a480f35b51637024dad560e11b8152fd5b610ac2915060203d811161073f576107318183611723565b38610a67565b82513d88823e3d90fd5b5090516306ba5aa760e11b8152fd5b90503461027a578260031936011261027a5760209250549051908152f35b50503461027e576020908160031936011261027a576001600160a01b03610b24611708565b168352600b8252808320815193849181815490610b4082611881565b92838652600192888482169182600014610250575050600114610b6f57858861020e896101ff848a0385611723565b87945081939291528383205b828410610b9557505050820101816101ff61020e386101ed565b8054848a018601528895508794909301928101610b7b565b9190503461027a578260031936011261027a5760015460025482516370a0823160e01b81526001600160a01b039182169481019490945260209184916024918391165afa918215610c40578392610c09575b6020838351908152f35b9091506020813d8211610c38575b81610c2460209383611723565b8101031261027a5760209250519038610bff565b3d9150610c17565b81513d85823e3d90fd5b50503461027e578160031936011261027e57806020923381526007845220549051908152f35b8334610317578060031936011261031757610c8961183d565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461027e578160031936011261027e5760025490516001600160a01b039091168152602090f35b50503461027e578160031936011261027e5760ff6020925460a01c1690519015158152f35b50503461027e578160031936011261027e576020906006549051908152f35b8284346103175760203660031901126103175782359067ffffffffffffffff821161031757506001610d866020610d74819660ff9536910161175b565b818651938285809451938492016117b2565b8101600881520301902001541690519015158152f35b90503461027a57602036600319011261027a57803590610dba61183d565b8115610e0057507fbef184c70b971ce37dd431ed022897a9211e97ca421f71da4c3aa85da4f6c5e59160609160055491816005558051923384526020840152820152a180f35b825163f0adf53360e01b8152fd5b50503461027e57602036600319011261027e577f7aeea51f76cf53bb0e38ea557afb288adf612290f445157ce8bf0e19fdcc4c766020610e4c611708565b610e5461183d565b610e5c6118fe565b60018060a01b031692838552600782528481812055600a825284818120610e838154611881565b80610e94575b50505051428152a280f35b82601f8211600114610eac575050555b843880610e89565b9091808252610ec9601f878420940160051c84016001850161191f565b5555610ea4565b90503461027a576020918260031936011261118b57813592610ef06118fe565b338552600a815281852082518154918188610f0a85611881565b9283835260019587878216918260001461116b57505060011461112d575b50610f3592500382611723565b805115908115611052575b506110435783548086106110335733875260078352838720549081106110235785116110145781869133835260078252848320610f7e8882546118f1565b905554845163a9059cbb60e01b815233878201526024810188905292839160449183916001600160a01b03165af191821561100a578692610fed575b505015610a9d5750504290337f9e6f10237a3bc28f40142a7f51474829ca0926a141b2aa82d169584162500fda8480a480f35b6110039250803d1061073f576107318183611723565b3880610fba565b83513d88823e3d90fd5b5050516379d9383360e11b8152fd5b505050516306ba5aa760e11b8152fd5b5050505163b2726f4960e01b8152fd5b5050516351a846b160e11b8152fd5b600954855163cb3e1fe760e01b815292506001600160a01b03169084838881855afa92831561112357908592918a946110ea575b50906110ad91875180958194829363e0bb933d60e01b84528b8d85015260448401906117d5565b90602483015203915afa9081156107465787916110cd575b501538610f40565b6110e49150833d851161073f576107318183611723565b386110c5565b838193949295503d831161111c575b6111038183611723565b810103126111185751918491906110ad611086565b8880fd5b503d6110f9565b86513d8b823e3d90fd5b91505088528184808a20858b915b858310611152575050610f35935082010138610f28565b809192945054838588010152019101859085859361113b565b60ff191685820152610f3595151560051b8501019250389150610f289050565b8380fd5b83903461027e57602036600319011261027e576111aa61183d565b8035905580f35b50503461027e578160031936011261027e576020906003549051908152f35b90503461027a57602036600319011261027a576111eb611708565b6111f361183d565b6001600160a01b03169182156112205750506bffffffffffffffffffffffff60a01b600954161760095580f35b5163778e115760e01b8152fd5b50503461027e578160031936011261027e5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161126b61183d565b6112736118fe565b61127b6118fe565b835460ff60a01b1916600160a01b17845551338152a180f35b90508234610317576080366003190112610317576112b0611708565b9267ffffffffffffffff9060243582811161118b576112d2903690860161175b565b906064358381116116e8576112ea903690870161175b565b60095482516325e016d360e11b8152976001600160a01b039460209493909286169190858b8b81865afa9a8b156116de57899b6116af575b5099856113508b9c879c999a9b9c5193849283928a63e0bb933d60e01b9d8e865285015260448401906117d5565b9060248301520381865afa9081156116a5578a91611688575b501561167857861694858952600a8552838920918451908a938281549561138f87611881565b928383526001978b898216918260001461165857505060011461161b575b506113ba92500383611723565b81511592831561154e575b50505061153e57841561152e5787846113e26005546044356118bb565b9783541660648c875194859384926323b872dd60e01b845233908401523060248401528c60448401525af1908115611524578991611507575b50156114f7576114496064611432600354896118bb565b048097611441826006546118e4565b6006556118f1565b968589526007855283892061145f8982546118e4565b9055835190818501908111828210176114e4577fa6c1325e03b867ee45303c64111dc7e52670f1da44597390374b5210cda6508d969798999a5084528881526114bb8580830194848652818751938285809451938492016117b2565b8101600881520301902090518155019051151560ff80198354169116179055519384523393a480f35b634e487b7160e01b8a5260418b5260248afd5b8251637024dad560e11b81528990fd5b61151e9150853d871161073f576107318183611723565b8a61141b565b84513d8b823e3d90fd5b825163778e115760e01b81528990fd5b82516351a846b160e11b81528990fd5b865163cb3e1fe760e01b8152929350909187818e81865afa9081156116115787928994928f928f916115d6575b50611597855197889687958695865285015260448401906117d5565b90602483015203915afa9081156115245789916115b9575b50158a80806113c5565b6115d09150853d871161073f576107318183611723565b8a6115af565b9395925050925081813d831161160a575b6115f18183611723565b8101031261160657918c87928994513861157b565b8b80fd5b503d6115e7565b87513d8e823e3d90fd5b9150508c5282888d878282205b85831061163f5750506113ba93508201018f6113ad565b8091929450548385890101520191018990878693611628565b915092506113ba94915060ff191682840152151560051b8201018f6113ad565b83516366a70fa760e11b81528a90fd5b61169f9150863d881161073f576107318183611723565b8b611369565b85513d8c823e3d90fd5b9a50858b813d83116116d7575b6116c68183611723565b810103126111185799519985611322565b503d6116bc565b85513d8b823e3d90fd5b8480fd5b84903461027e578160031936011261027e576020906005548152f35b600435906001600160a01b038216820361171e57565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761174557604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121561171e5780359067ffffffffffffffff82116117455760405192611790601f8401601f191660200185611723565b8284526020838301011161171e57816000926020809301838601378301015290565b60005b8381106117c55750506000910152565b81810151838201526020016117b5565b906020916117ee815180928185528580860191016117b2565b601f01601f1916010190565b90604060031983011261171e576004356001600160a01b038116810361171e57916024359067ffffffffffffffff821161171e5761183a9160040161175b565b90565b6000546001600160a01b0316330361185157565b60405163118cdaa760e01b8152336004820152602490fd5b9081602091031261171e5751801515810361171e5790565b90600182811c921680156118b1575b602083101461189b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611890565b818102929181159184041417156118ce57565b634e487b7160e01b600052601160045260246000fd5b919082018092116118ce57565b919082039182116118ce57565b60ff60005460a01c1661190d57565b60405163d93c066560e01b8152600490fd5b81811061192a575050565b6000815560010161191f565b60ff60005460a01c161561194657565b604051638dfc202b60e01b8152600490fdfea2646970667358221220b139240d1cf2fc909b381ee8674dce7a9c70c237544cd304e085d09d31048bd064736f6c63430008140033";

type CompensationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompensationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Compensation__factory extends ContractFactory {
  constructor(...args: CompensationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _provider: AddressLike,
    _tokenAddress: AddressLike,
    _leveaWallet: AddressLike,
    _serviceFeePercent: BigNumberish,
    _unitPrice: BigNumberish,
    _didAuthAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _provider,
      _tokenAddress,
      _leveaWallet,
      _serviceFeePercent,
      _unitPrice,
      _didAuthAddress,
      overrides || {}
    );
  }
  override deploy(
    _provider: AddressLike,
    _tokenAddress: AddressLike,
    _leveaWallet: AddressLike,
    _serviceFeePercent: BigNumberish,
    _unitPrice: BigNumberish,
    _didAuthAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _provider,
      _tokenAddress,
      _leveaWallet,
      _serviceFeePercent,
      _unitPrice,
      _didAuthAddress,
      overrides || {}
    ) as Promise<
      Compensation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Compensation__factory {
    return super.connect(runner) as Compensation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompensationInterface {
    return new Interface(_abi) as CompensationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Compensation {
    return new Contract(address, _abi, runner) as unknown as Compensation;
  }
}
