/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DataAccess, DataAccessInterface } from "../../src/DataAccess";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
    ],
    name: "DataAccess__AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "DataAccess__InvalidFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredPayment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedPayment",
        type: "uint256",
      },
    ],
    name: "DataAccess__InvalidPayment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
    ],
    name: "DataAccess__InvalidWithdrawal",
    type: "error",
  },
  {
    inputs: [],
    name: "DataAccess__NoFundsToWithdraw",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
    ],
    name: "DataAccess__NotProvider",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
    ],
    name: "DataAccess__NotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "DataAccess__TransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "dataId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "DataRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "dataId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "dataId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "accessFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
    ],
    name: "checkAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dataPayments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "dataProviders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "paidAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
    ],
    name: "purchaseAccess",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "registerData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "updateAccessFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dataId",
        type: "string",
      },
    ],
    name: "withdrawPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461008557331561006f5760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3662386f26fc1000060015561090d908161008b8239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c806307305b35146106095780631eacd7db146104e1578063492b85cd146104c25780635fc25f6f14610398578063715018a61461033e5780638da5cb5b14610312578063945da62f146102b4578063a325a67314610288578063a5657a911461020c578063ea6eeb2c146101a0578063f2c5722f1461012e5763f2fde38b146100a557600080fd5b3461012a57602036600319011261012a576100be61081f565b906100c7610835565b6001600160a01b0391821692831561011457505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b503461012a57602036600319011261012a5780359061014b610835565b811561018b5750907f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df6130291600154908060015582519182526020820152a180f35b9151633df3f58f60e11b815291820152602490fd5b5091346102095760203660031901126102095782359067ffffffffffffffff821161020957506020926101d5913691016107b0565b826101e8835192838151938492016107fc565b6003908201908152819003830190205490516001600160a01b039091168152f35b80fd5b503461012a578160031936011261012a5761022561081f565b9060243567ffffffffffffffff8111610284579360ff9261026161026f61025287956020993691016107b0565b85519283918a830195866108a6565b03601f19810183528261075c565b51902081526002855220541690519015158152f35b8480fd5b503461012a57602036600319011261012a578160209360ff923581526002855220541690519015158152f35b5091346102095760203660031901126102095782359067ffffffffffffffff82116102095750602080936102ee61030193369083016107b0565b90828551948386809551938492016107fc565b820190815203019020549051908152f35b50503461033a578160031936011261033a57905490516001600160a01b039091168152602090f35b5080fd5b8334610209578060031936011261020957610357610835565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012a57602036600319011261012a57803567ffffffffffffffff81116104be576103c890369083016107b0565b90825182516103db8183602087016107fc565b60039082019081528190036020019020546001600160a01b0316913383036104915747918215610483578580808086885af13d1561047e573d61041d81610794565b9061042a8851928361075c565b81528760203d92013e5b1561047057507fc13adde94a452f7b1f4c04f4bae4e99c16fec1df1915ce4ac180baf07f336def91610467602092610886565b9451908152a380f35b84516320d9693d60e01b8152fd5b610434565b845163d62a3bd360e01b8152fd5b6104ba919250835193849363d9a5751560e01b8552339085015260248401526044830190610861565b0390fd5b8380fd5b50503461033a578160031936011261033a576020906001549051908152f35b50602090816003193601126104be57803567ffffffffffffffff81116102845761050e90369083016107b0565b908351825190848401916105238183856107fc565b600390820190815281900385019020546001600160a01b0316156105e757836105569186518093819287519283916107fc565b810184815203019020548034106105cb5750506105bf7f2333e159bfab9e5471f0b05de3eb962fc027bedccc2b553ae9068c58cdeb0ef6918451848101906105a3816102618533866108a6565b519020865260028452848620805460ff19166001179055610886565b9251913483523392a380f35b845163fe55e6c960e01b81529182015234602482015260449150fd5b50906104ba908451938493631bab842760e11b85528401526024830190610861565b50903461012a578060031936011261012a57813567ffffffffffffffff81116104be5761063990369084016107b0565b91602435825191845191602093848701936106558183876107fc565b600390820190815281900385019020546001600160a01b031661073c57837f01e9c763b14f8448acc17ba33b80c03dbdbe454e1dd9a6877790c368e9772eab949361070d936106fd93885184818c516106af8183896107fc565b60039082019081520301902080546001600160a01b03191633179055801561071857885184818c516106e28183896107fc565b810185815203019020555b8751809481938b519283916107fc565b8201908152030190205494610886565b92519384523393a380f35b50600154885184818c5161072d8183896107fc565b810185815203019020556106ed565b845163b3cd1edd60e01b8152808301859052806104ba6024820189610861565b90601f8019910116810190811067ffffffffffffffff82111761077e57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161077e57601f01601f191660200190565b81601f820112156107f7578035906107c782610794565b926107d5604051948561075c565b828452602083830101116107f757816000926020809301838601378301015290565b600080fd5b60005b83811061080f5750506000910152565b81810151838201526020016107ff565b600435906001600160a01b03821682036107f757565b6000546001600160a01b0316330361084957565b60405163118cdaa760e01b8152336004820152602490fd5b9060209161087a815180928185528580860191016107fc565b601f01601f1916010190565b61089e906020604051928284809451938492016107fc565b810103902090565b601492916bffffffffffffffffffffffff199060601b1681526108d282518093602086850191016107fc565b01019056fea2646970667358221220ab0a6ceead71d91438adba4bb3c1151f58094154dc028efed589b20bf7d9412364736f6c63430008140033";

type DataAccessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataAccessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataAccess__factory extends ContractFactory {
  constructor(...args: DataAccessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataAccess & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DataAccess__factory {
    return super.connect(runner) as DataAccess__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataAccessInterface {
    return new Interface(_abi) as DataAccessInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DataAccess {
    return new Contract(address, _abi, runner) as unknown as DataAccess;
  }
}
