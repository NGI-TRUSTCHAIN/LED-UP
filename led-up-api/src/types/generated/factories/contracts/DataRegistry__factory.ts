/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../common';
import type { DataRegistry, DataRegistryInterface } from '../../contracts/DataRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address payable',
        name: '_provider',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_serviceFee',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_didAuth',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'DataRegistry__ConsentAlreadyGranted',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__ConsentAlreadyRevoked',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
    ],
    name: 'DataRegistry__ConsentNotAllowed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__DidAuthNotInitialized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__InvalidDID',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__InvalidDidAuthAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__InvalidInputParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__InvalidRecord',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__PaymentNotVerified',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
    ],
    name: 'DataRegistry__ProducerNotFound',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__RecordAlreadyExists',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__RecordNotActive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
    ],
    name: 'DataRegistry__RecordNotFound',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__ServicePaused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__Unauthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__UnauthorizedConsumer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__UnauthorizedProducer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__UnauthorizedServiceProvider',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DataRegistry__UnauthorizedVerifier',
    type: 'error',
  },
  {
    inputs: [],
    name: 'EnforcedPause',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExpectedPause',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'consumerDid',
        type: 'string',
      },
    ],
    name: 'AccessNotAllowed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'ownerDid',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'consumerDid',
        type: 'string',
      },
    ],
    name: 'ConsumerAuthorized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'consumerDid',
        type: 'string',
      },
    ],
    name: 'ConsumerDeauthorized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'DataDeactivated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'ownerDid',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'cid',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
    ],
    name: 'DataRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
    ],
    name: 'DataRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'consumer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'cid',
        type: 'string',
      },
    ],
    name: 'DataShared',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'cid',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
    ],
    name: 'DataUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'verifierDid',
        type: 'string',
      },
    ],
    name: 'DataVerified',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'url',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
    ],
    name: 'MetadataUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'contractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'isPaused',
        type: 'bool',
      },
    ],
    name: 'PauseStateUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'enum IDataRegistry.ConsentStatus',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'ProducerConsentUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
    ],
    name: 'ProducerRecordRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'enum IDataRegistry.RecordStatus',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'ProducerRecordStatusUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'producer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'cid',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
    ],
    name: 'ProducerRecordUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'url',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
    ],
    name: 'ProviderMetadataUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'url',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'hash',
        type: 'bytes32',
      },
    ],
    name: 'ProviderSchemaUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'string',
        name: 'producerDid',
        type: 'string',
      },
    ],
    name: 'SharingNotAllowed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newAddress',
        type: 'address',
      },
    ],
    name: 'TokenAddressUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newAddress',
        type: 'address',
      },
    ],
    name: 'TokenUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'changePauseState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'changeTokenAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'didAuth',
    outputs: [
      {
        internalType: 'contract DidAuth',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'did',
        type: 'string',
      },
    ],
    name: 'getAddressFromDid',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCompensationContractAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'getProducerConsent',
    outputs: [
      {
        internalType: 'enum IDataRegistry.ConsentStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
    ],
    name: 'getProducerDid',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_recordId',
        type: 'string',
      },
    ],
    name: 'getProducerRecord',
    outputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'string',
            name: 'resourceType',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'cid',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'url',
            type: 'string',
          },
          {
            internalType: 'bytes32',
            name: 'hash',
            type: 'bytes32',
          },
          {
            internalType: 'bool',
            name: 'isVerified',
            type: 'bool',
          },
        ],
        internalType: 'struct IDataRegistry.HealthRecord',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
    ],
    name: 'getProducerRecordCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
    ],
    name: 'getProducerRecordInfo',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'ownerDid',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'producer',
            type: 'address',
          },
          {
            internalType: 'enum IDataRegistry.RecordStatus',
            name: 'status',
            type: 'uint8',
          },
          {
            internalType: 'enum IDataRegistry.ConsentStatus',
            name: 'consent',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'isActive',
            type: 'bool',
          },
          {
            internalType: 'uint256',
            name: 'updatedAt',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
        ],
        internalType: 'struct IDataRegistry.DataRecordCore',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
    ],
    name: 'getProducerRecordStatus',
    outputs: [
      {
        internalType: 'enum IDataRegistry.RecordStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
    ],
    name: 'getProducerRecords',
    outputs: [
      {
        internalType: 'enum IDataRegistry.RecordStatus',
        name: '',
        type: 'uint8',
      },
      {
        internalType: 'enum IDataRegistry.ConsentStatus',
        name: '',
        type: 'uint8',
      },
      {
        components: [
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
          {
            internalType: 'string',
            name: 'resourceType',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'cid',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'url',
            type: 'string',
          },
          {
            internalType: 'bytes32',
            name: 'hash',
            type: 'bytes32',
          },
          {
            internalType: 'bool',
            name: 'isVerified',
            type: 'bool',
          },
        ],
        internalType: 'struct IDataRegistry.HealthRecord[]',
        name: '',
        type: 'tuple[]',
      },
      {
        internalType: 'string[]',
        name: '',
        type: 'string[]',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getProviderMetadata',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'url',
            type: 'string',
          },
          {
            internalType: 'bytes32',
            name: 'hash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IDataRegistry.Metadata',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'requesterDid',
        type: 'string',
      },
    ],
    name: 'getRecordCid',
    outputs: [
      {
        internalType: 'string',
        name: 'cid',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRecordSchema',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'string',
                name: 'url',
                type: 'string',
              },
              {
                internalType: 'bytes32',
                name: 'hash',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IDataRegistry.Metadata',
            name: 'schemaRef',
            type: 'tuple',
          },
        ],
        internalType: 'struct IDataRegistry.Schema',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalRecordsCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'consumerDid',
        type: 'string',
      },
    ],
    name: 'isConsumerAuthorized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
    ],
    name: 'producerExists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_ownerDid',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_recordId',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: '_resourceType',
        type: 'string',
      },
      {
        internalType: 'enum IDataRegistry.ConsentStatus',
        name: '_consent',
        type: 'uint8',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'cid',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'url',
            type: 'string',
          },
          {
            internalType: 'bytes32',
            name: 'hash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IDataRegistry.RecordMetadata',
        name: '_metadata',
        type: 'tuple',
      },
    ],
    name: 'registerProducerRecord',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
    ],
    name: 'removeProducerRecord',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'consumerDid',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'ownerDid',
        type: 'string',
      },
    ],
    name: 'shareData',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_didAuthAddress',
        type: 'address',
      },
    ],
    name: 'updateDidAuthAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
      {
        internalType: 'enum IDataRegistry.ConsentStatus',
        name: '_status',
        type: 'uint8',
      },
    ],
    name: 'updateProducerConsent',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_recordId',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'resourceType',
        type: 'string',
      },
      {
        internalType: 'enum IDataRegistry.RecordStatus',
        name: '_status',
        type: 'uint8',
      },
      {
        internalType: 'enum IDataRegistry.ConsentStatus',
        name: '_consent',
        type: 'uint8',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'cid',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'url',
            type: 'string',
          },
          {
            internalType: 'bytes32',
            name: 'hash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IDataRegistry.RecordMetadata',
        name: '_recordMetadata',
        type: 'tuple',
      },
      {
        internalType: 'string',
        name: 'updaterDid',
        type: 'string',
      },
    ],
    name: 'updateProducerRecord',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_recordId',
        type: 'string',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'cid',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'url',
            type: 'string',
          },
          {
            internalType: 'bytes32',
            name: 'hash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IDataRegistry.RecordMetadata',
        name: '_metadata',
        type: 'tuple',
      },
    ],
    name: 'updateProducerRecordMetadata',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_producer',
        type: 'address',
      },
      {
        internalType: 'enum IDataRegistry.RecordStatus',
        name: '_status',
        type: 'uint8',
      },
    ],
    name: 'updateProducerRecordStatus',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'url',
            type: 'string',
          },
          {
            internalType: 'bytes32',
            name: 'hash',
            type: 'bytes32',
          },
        ],
        internalType: 'struct IDataRegistry.Metadata',
        name: '_metadata',
        type: 'tuple',
      },
    ],
    name: 'updateProviderMetadata',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'string',
                name: 'url',
                type: 'string',
              },
              {
                internalType: 'bytes32',
                name: 'hash',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IDataRegistry.Metadata',
            name: 'schemaRef',
            type: 'tuple',
          },
        ],
        internalType: 'struct IDataRegistry.Schema',
        name: '_schemaRef',
        type: 'tuple',
      },
    ],
    name: 'updateProviderRecordSchema',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'recordId',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'verifierDid',
        type: 'string',
      },
    ],
    name: 'verifyData',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080346101d257601f61528838819003918201601f19168301916001600160401b03831184841017610195578084926080946040528339810103126101d257610047816101d7565b60208201516001600160a01b0381169291908390036101d2576100716060604084015193016101d7565b9133156101bc5760008054604051949133906001600160a01b038316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a81b0319163360ff60a01b19161760009081556004556001600160a01b03169081156101ab57600180546001600160a01b03191683179055611a7791848301916001600160401b038311868410176101955760c094869461381186398784526001600160a01b03166020840181905260408401979097526060830152670de0b6b3a7640000608083015260a08201520301906000f080156101895760018060a01b031660018060a01b0319600254161760025560018060a01b0319600354161760035560405161362590816101ec8239f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b634973c50160e01b60005260046000fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b51906001600160a01b03821682036101d25756fe6080604052600436101561001257600080fd5b60003560e01c80630a0137ab14612e6b5780630d77a96214612df05780630e2e92b014612da857806313e1af3614612bd157806316fab11914612b2b57806320c10fe8146129ed57806334808254146126d157806337959c941461261357806341cf798e1461228f578063555e2c19146121535780635c70dba514611fa65780635c975abb14611f80578063631f1c7914611f2357806369942c9514611efa578063715018a614611ea15780637ebe9dc214611aa25780638020ccb6146118d65780638da5cb5b146118ad5780639a96fcc11461188f578063a5c6b83d14611855578063a64d27c31461180b578063aa3c083e1461110d578063b52ac34d14610f66578063b950fb8f14610f0d578063c14cfdda14610ecb578063c9cda91f14610e62578063d32ad62214610e39578063d95b322114610d31578063da7383ed14610ac9578063de857725146102bf578063e9e797ac14610278578063f2fde38b146101ef5763fe80c4f41461018757600080fd5b346101ea5760203660031901126101ea576001600160a01b036101a8612ec4565b1660005260096020526101e66101cb6101d2604060002060405192838092613249565b0382612fbb565b604051918291602083526020830190612efd565b0390f35b600080fd5b346101ea5760203660031901126101ea57610208612ec4565b610210613585565b6001600160a01b0316801561026257600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101ea5760203660031901126101ea576001600160a01b03610299612ec4565b166000526009602052602060018060a01b03600160406000200154161515604051908152f35b346101ea5760e03660031901126101ea576004356001600160401b0381116101ea576102ef903690600401613178565b6024356001600160401b0381116101ea5761030e903690600401613178565b926044356001600160a01b038116939192908490036101ea576064356001600160401b0381116101ea57366023820112156101ea57610357903690602481600401359101612fdc565b946084356001600160401b0381116101ea57610377903690600401613178565b96909560a4359160038310156101ea5760c4356001600160401b0381116101ea576103a6903690600401613086565b986103af6135ae565b6001546001600160a01b03168015610ab8578515610aa7578315610aa75760405163cb3e1fe760e01b8152602081600481855afa908115610a6757600091610a73575b50602090610419928a8c6040519586948593849363e0bb933d60e01b8552600485016134a8565b03915afa908115610a6757600091610a38575b5015610a275760405187898237602081898101600d815203019020836001600160601b0360a01b825416179055826000526009602052604060002093600185019060018060a01b03825416156000146109e4576104ab9061048e8a8c896134c0565b82546001600160a81b03191660ff60a01b198716178355826133a5565b60006003860155805460ff60b01b1916600160b01b179055426002850155600454600181019081106109a7576004555b82600052600b6020526104fc6104f660406000208789613456565b5461320f565b6109d35782600052600a60205260406000208054680100000000000000008110156108515761053091600182018155613414565b6109bd57858761053f926134c0565b60038401805490600182018092116109a75755895160208b01519061057b60408d019b8c51946040519661057288612f6a565b87523691612fdc565b6020850190815260408501918252606085019283526080850193845260a085019560008752600052600b6020526105b76040600020898b613456565b94518051906001600160401b038211610851576105de826105d8895461320f565b896132e3565b602090601f83116001146109405761060f9291600091836107b1575b50508160011b916000199060031b1c19161790565b85555b51805160018601916001600160401b0382116108515761063c82610636855461320f565b856132e3565b602090601f83116001146108d95761066c9291600091836107b15750508160011b916000199060031b1c19161790565b90555b51805160028501916001600160401b0382116108515761069382610636855461320f565b602090601f8311600114610872576106c39291600091836108675750508160011b916000199060031b1c19161790565b90555b51805160038401916001600160401b038211610851576106ea82610636855461320f565b602090601f83116001146107bc579261074a837fd032e01f2d9158c8569c8e81b890fd35278fa07ba5e45b8087059b22d7cc6b489e9f989693946107a69b9a98956005976000926107b15750508160011b916000199060031b1c19161790565b90555b516004820155019051151560ff801983541691161790556002429101555196519281604051928392833781016000815203902095610798604051958695606087526060870191613487565b908482036020860152612efd565b9060408301520390a2005b0151905038806105fa565b90601f1983169184600052816000209260005b8181106108395750937fd032e01f2d9158c8569c8e81b890fd35278fa07ba5e45b8087059b22d7cc6b489e9f98969360059693600193836107a69e9d9b9810610820575b505050811b01905561074d565b015160001960f88460031b161c19169055388080610813565b929360206001819287860151815501950193016107cf565b634e487b7160e01b600052604160045260246000fd5b015190508f806105fa565b90601f1983169184600052816000209260005b8181106108c157509084600195949392106108a8575b505050811b0190556106c6565b015160001960f88460031b161c191690558e808061089b565b92936020600181928786015181550195019301610885565b90601f1983169184600052816000209260005b818110610928575090846001959493921061090f575b505050811b01905561066f565b015160001960f88460031b161c191690558f8080610902565b929360206001819287860151815501950193016108ec565b90601f1983169188600052816000209260005b81811061098f5750908460019594939210610976575b505050811b018555610612565b015160001960f88460031b161c191690558f8080610969565b92936020600181928786015181550195019301610953565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b633fa2b9c960e11b60005260046000fd5b50506040516109f7816101cb8188613249565b60208151910120610a0936898b612fdc565b60208151910120146104db575b63a72971e560e01b60005260046000fd5b638530cc7960e01b60005260046000fd5b610a5a915060203d602011610a60575b610a528183612fbb565b81019061346f565b8b61042c565b503d610a48565b6040513d6000823e3d90fd5b90506020813d602011610a9f575b81610a8e60209383612fbb565b810103126101ea57516104196103f2565b3d9150610a81565b63fcf9ead760e01b60005260046000fd5b630378e52960e61b60005260046000fd5b346101ea57610ad7366131a5565b600154919392916001600160a01b03168015610ab857336000908152600960205260409020600101546001600160a01b031615610d1c5733600052600b602052610b296104f660406000208587613456565b15610cf25760ff610b4f60405185878237602081878101600c8152030190208488613456565b541615908115610c37575b50610a165760025460405163586d396b60e01b8152602060048201819052909182906001600160a01b03168180610b9560248201898b613487565b03915afa908115610a6757600091610c18575b5015610c0757610bfa6101cb936101d293610bde6101e69760029560405184868237602081868101600c81520301902091613456565b60ff19815416905533600052600b602052604060002091613456565b0160405192838092613249565b631a71808760e31b60005260046000fd5b610c31915060203d602011610a6057610a528183612fbb565b85610ba8565b6040516325e016d360e11b8152909150602081600481855afa908115610a6757600091610cbe575b50602090610c8492604051808095819463e0bb933d60e01b8352888c600485016134a8565b03915afa908115610a6757600091610c9f575b501585610b5a565b610cb8915060203d602011610a6057610a528183612fbb565b85610c97565b90506020813d602011610cea575b81610cd960209383612fbb565b810103126101ea5751610c84610c5f565b3d9150610ccc565b5050610d1860405192839263214173d760e11b8452602060048501526024840191613487565b0390fd5b630f3a639160e11b6000523360045260246000fd5b346101ea5760203660031901126101ea57600435801515908181036101ea57610d58613585565b15610de557610d65613585565b610d6d6135ae565b610d756135ae565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a15b60405190815233907fa97bea79c4fcd6e304357750d9d90655eaa0a6a938922de8184fdd06cab4788660203092a3005b610ded613585565b610df56135ce565b610dfd6135ce565b60ff60a01b19600054166000557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1610db5565b346101ea5760003660031901126101ea576001546040516001600160a01b039091168152602090f35b346101ea5760203660031901126101ea57610e7b612ec4565b610e83613585565b6001600160a01b03168015610aa757600380546001600160a01b031916821790557f2f0c7f17be551d1f4566672cd67adbe50173e96632f56ff80d80acc4ac00f328600080a2005b346101ea57602060ff610f0182610ee1366131a5565b926000949194508260405193849283378101600c81520301902091613456565b54166040519015158152f35b346101ea5760003660031901126101ea57610f266131f5565b506101e6604051610f3681612fa0565b604051610f48816101cb816005613249565b81526006546020820152604051918291602083526020830190612f22565b346101ea5760203660031901126101ea576004356001600160401b0381116101ea57610f96903690600401613040565b610f9e613585565b610fa66135ae565b80519081516001600160401b03811161085157610fc460055461320f565b601f81116110cf575b50602092601f821160011461104d57610fff929382916000926110425750508160011b916000199060031b1c19161790565b6005555b7f8e35eca6c2d38f317a32ca1587b580845af194c0b0fe866a08c5fe2ae567f8d060206110388184015193846006555161331f565b92604051908152a2005b0151905084806105fa565b601f1982169360056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09160005b8681106110b7575083600195961061109e575b505050811b01600555611003565b015160001960f88460031b161c19169055838080611090565b9192602060018192868501518155019401920161107d565b6110fd9060056000526020600020601f840160051c81019160208510611103575b601f0160051c01906132cc565b83610fcd565b90915081906110f0565b346101ea576101003660031901126101ea576004356001600160401b0381116101ea5761113e903690600401613178565b60243591906001600160a01b03831683036101ea576044356001600160401b0381116101ea57611172903690600401613178565b9290916064356001600160401b0381116101ea57611194903690600401613178565b6084949194359060058210156101ea57600360a43510156101ea5760c4356001600160401b0381116101ea576111ce903690600401613086565b9560e4356001600160401b0381116101ea576111ee903690600401613178565b9890946111f96135ae565b6001600160a01b038b811660009081526009602052604090206001015416156117ec576000546001600160a01b0316331415806117d9575b610a16576001546001600160a01b0316958615610ab8576001600160a01b038c166000908152600960209081526040808320600b909252909120909790611279908a8c613456565b6001890154909c906001600160a01b038116156117bc5760b01c60ff16156117ab578c54926112a78461320f565b15611785576040516112bd816101cb818e613249565b602081519101206112cf368484612fdc565b60208151910120149283156116cd575b831561160a575b50505015610a16576001600160401b038311610851578261130961130f9261320f565b8c6132e3565b600090601f831160011461159a578261135e96959361135595936113499360009261158f5750508160011b916000199060031b1c19161790565b8a555b60018a016134c0565b6001830161333f565b61136d60a435600183016133a5565b8351805160028701916001600160401b0382116108515761139282610636855461320f565b602090601f8311600114611528576113c292916000918361151d5750508160011b916000199060031b1c19161790565b90555b6020840151805160038701916001600160401b038211610851576113ed82610636855461320f565b602090601f83116001146114b35791806114229260039695946000926114a85750508160011b916000199060031b1c19161790565b90555b60056040860196875160048201550160ff19815416905542600282015501928354600181018091116109a7577fdb595948a728ad55d119c1e62d41fcd9b482095ce6ac864a4caa9ae4833be2fc945551935191816040519283928337810160008152039020936114a360405192839260018060a01b03169583613389565b0390a3005b015190508b806105fa565b90601f1983169184600052816000209260005b8181106115055750916001939185600398979694106114ed575b505050811b019055611425565b015160001983881b60f8161c191690558a80806114e0565b929360206001819287860151815501950193016114c6565b015190508a806105fa565b90601f1983169184600052816000209260005b818110611577575090846001959493921061155e575b505050811b0190556113c5565b015160001960f88460031b161c19169055898080611551565b9293602060018192878601518155019501930161153b565b013590508e806105fa565b8a82526020822091805b601f19851681106115f2575092611355949260019261135e98979583601f198116106115d8575b505050811b018a5561134c565b0135600019600384901b60f8161c191690558d80806115cb565b909260206001819286860135815501940191016115a4565b60405163cb3e1fe760e01b815292935090602083600481855afa928315610a6757600093611695575b509061165a93602093926040519586948593849363e0bb933d60e01b8552600485016134a8565b03915afa908115610a6757600091611676575b508d80806112e6565b61168f915060203d602011610a6057610a528183612fbb565b8d61166d565b9250906020833d6020116116c5575b816116b160209383612fbb565b810103126101ea579151919061165a611633565b3d91506116a4565b604051630de3574560e11b8152909350602081600481875afa908115610a6757600091611752575b506020611718916040518093819263e0bb933d60e01b83528787600485016134a8565b0381875afa908115610a6757600091611733575b50926112df565b61174c915060203d602011610a6057610a528183612fbb565b3861172c565b90506020813d60201161177d575b8161176d60209383612fbb565b810103126101ea575160206116f5565b3d9150611760565b8b8b610d1860405192839263214173d760e11b8452602060048501526024840191613487565b633326770360e11b60005260046000fd5b8e630f3a639160e11b60005260018060a01b031660045260246000fd5b50336001600160a01b038c161415611231565b630f3a639160e11b60009081526001600160a01b038c16600452602490fd5b346101ea5760203660031901126101ea576001600160a01b0361182c612ec4565b166000526009602052602060ff60016040600020015460a01c166118536040518092613100565bf35b346101ea5760203660031901126101ea576001600160a01b03611876612ec4565b16600052600a6020526020604060002054604051908152f35b346101ea5760003660031901126101ea576020600454604051908152f35b346101ea5760003660031901126101ea576000546040516001600160a01b039091168152602090f35b346101ea576118e4366131a5565b92916118ee6135ae565b6001546001600160a01b03168015610ab857336000908152600960205260409020600101546001600160a01b031615610d1c5733600052600b60205261193c6104f660406000208487613456565b15611a7f57604051630de3574560e11b8152602081600481855afa908115610a6757600091611a4b575b5060209061198b92604051808095819463e0bb933d60e01b83528b8a600485016134a8565b03915afa908115610a6757600091611a2c575b5015611a1b577f3fbb5b9a234eee03eca46fef56d9fc4105da82c38ace0aefb394e238894903309233600052600b60205260056119e060406000208484613456565b01600160ff1982541617905581604051928392833781016000815203902092611a16604051928392602084526020840191613487565b0390a2005b63cc8bfebf60e01b60005260046000fd5b611a45915060203d602011610a6057610a528183612fbb565b8561199e565b90506020813d602011611a77575b81611a6660209383612fbb565b810103126101ea575161198b611966565b3d9150611a59565b60405163214173d760e11b81526020600482015280610d18602482018588613487565b346101ea5760603660031901126101ea576004356001600160401b0381116101ea57611ad2903690600401613178565b6024356001600160401b0381116101ea57611af1903690600401613178565b90916044356001600160401b0381116101ea57611b12903690600401613178565b91909433600052600960205260018060a01b036001604060002001541615610d1c576000546001600160a01b031633141580611e99575b610a1657611b556135ae565b6001546001600160a01b03168015610ab8573360009081526009602052604090206001810154906001600160a01b03821615610d1c57611b9e6101cb9160405192838092613249565b60208151910120611bb036878b612fdc565b805160209182012060405163cb3e1fe760e01b815292149082600481875afa918215610a6757600092611e65575b506020878b611c01604051958693849363e0bb933d60e01b8552600485016134a8565b0381875afa918215610a6757600092611e44575b50159081611e3b575b50610a165760025460405163586d396b60e01b8152602060048201819052909182906001600160a01b03168180611c59602482018b8b613487565b03915afa908115610a6757600091611e1c575b5015610c075760a81c60ff166003811015611e0657611dd6576040516325e016d360e11b8152602081600481855afa908115610a6757600091611da2575b50602090611ccf92604051808095819463e0bb933d60e01b83528b8d600485016134a8565b03915afa908115610a6757600091611d83575b5015611d7257611d0760405183838237602081858101600c8152030190208587613456565b600160ff198254161790558160405192839283378101600081520390209381604051928392833781016000815203902091816040519283928337810160008152039020917f9fb317cf214e8ec9229ce9b8796fcfbf14114523602c68cbcb417e9b5a7a9dc5600080a4005b631b2d695d60e11b60005260046000fd5b611d9c915060203d602011610a6057610a528183612fbb565b87611ce2565b90506020813d602011611dce575b81611dbd60209383612fbb565b810103126101ea5751611ccf611caa565b3d9150611db0565b5090611dfc60405192839263b0ee660560e01b8452604060048501526044840191613487565b3360248301520390fd5b634e487b7160e01b600052602160045260246000fd5b611e35915060203d602011610a6057610a528183612fbb565b89611c6c565b90501589611c1e565b611e5e91925060203d602011610a6057610a528183612fbb565b908a611c15565b9091506020813d602011611e91575b81611e8160209383612fbb565b810103126101ea5751908a611bde565b3d9150611e74565b506000611b49565b346101ea5760003660031901126101ea57611eba613585565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101ea5760003660031901126101ea576002546040516001600160a01b039091168152602090f35b346101ea5760203660031901126101ea576004356001600160401b0381116101ea576020611f5681923690600401613178565b9190826040519384928337600d90820190815203019020546040516001600160a01b039091168152f35b346101ea5760003660031901126101ea57602060ff60005460a01c166040519015158152f35b346101ea5760203660031901126101ea57611fbf612ec4565b600060c0604051611fcf81612f85565b606081528260208201528260408201528260608201528260808201528260a0820152015260018060a01b031680600052600960205260018060a01b03600160406000200154161561213f576000546001600160a01b031633141580612135575b610a16576000526009602052604060002060405161204c81612f85565b60405161205d816101cb8186613249565b815260018201546001600160a01b038116602083019081529092604083019060a085901c60ff166005811015611e0657825260ff8560a81c169460608501956003811015611e06578661211d916120f7985260ff608088019360b01c1615158352612112600360028601549560a08a0196875201549560c08901968752604051998a9960208b525160e060208c01526101008b0190612efd565b97516001600160a01b031660408a0152516060890190613100565b516080870190612f42565b51151560a08501525160c08401525160e08301520390f35b508033141561202f565b630f3a639160e11b60005260045260246000fd5b346101ea5760403660031901126101ea5761216c612ec4565b6024356001600160401b0381116101ea5761218b903690600401613022565b906121946133e0565b506001600160a01b039081166000818152600960205260409020600101549091161561213f576000546001600160a01b031633141580612285575b610a16576101e6916121ee91600052600b602052604060002090613363565b60ff6005604051926121ff84612f6a565b604051612210816101cb8185613249565b8452604051612226816101cb8160018601613249565b602085015260405161223f816101cb8160028601613249565b6040850152604051612258816101cb8160038601613249565b606085015260048101546080850152015416151560a082015260405191829160208352602083019061310d565b50803314156121cf565b346101ea5760203660031901126101ea576001600160a01b036122b0612ec4565b166000818152600960205260409020600101546001600160a01b03161561213f576000546001600160a01b031633141580612609575b610a165780600052600960205260406000209080600052600a60205260406000205491612312836133c9565b926123206040519485612fbb565b808452601f1961232f826133c9565b0160005b8181106125f257505060005b8181106124a5575050600181015491600052600a6020526003604060002091015492815461236c816133c9565b9061237a6040519283612fbb565b80825260208201809460005260206000206000915b8383106124805750505050604051936123c660a08601916123b68760ff8360a01c16613100565b60ff602088019160a81c16612f42565b60a06040860152825180915260c0850190602060c08260051b8801019401916000905b8282106124555750505050838203606085015251808252602082019160208260051b82010193926000915b838310612428578680878a60808301520390f35b9091929394602080612446600193601f198682030187528951612efd565b97019301930191939290612414565b9091929460208061247260019360bf198c8203018652895161310d565b9701920192019092916123e9565b600160208192604051612497816101cb8189613249565b81520192019201919061238f565b83600052600b602052604060002084600052600a6020526124ca826040600020613414565b50604051916000918054906124de8261320f565b91600181169081156125da57506001146125a2575b505082826020926001969594520301902060ff60056040519261251584612f6a565b604051612526816101cb8185613249565b845260405161253b816101cb818a8601613249565b6020850152604051612554816101cb8160028601613249565b604085015260405161256d816101cb8160038601613249565b606085015260048101546080850152015416151560a08201526125908288613442565b5261259b8187613442565b500161233f565b9091925060005260206000206000905b8282106125c65750508201908260206124f3565b6001816020925484880152019101906125b2565b60ff19168652505080151502830191508260206124f3565b6020906125fd6133e0565b82828901015201612333565b50803314156122e6565b346101ea5760403660031901126101ea5761262c612ec4565b6024359060038210156101ea57612641613585565b6126496135ae565b6001600160a01b0390811660008181526009602052604090206001015490929116156126bc5760207f64eb31408af76a886f9c4792085f613c997ab89b66ad33d65f742370571953cc9183600052600982526126ac8160016040600020016133a5565b6126b96040518092612f42565ba2005b50630f3a639160e11b60005260045260246000fd5b346101ea5760603660031901126101ea576126ea612ec4565b6024356001600160401b0381116101ea57612709903690600401613022565b6044356001600160401b0381116101ea57612728903690600401613086565b91612731613585565b6127396135ae565b6001600160a01b0390811660008181526009602052604090206001015490929116156126bc5781600052600b6020526127796104f6604060002083613363565b156129c857825182600052600b6020526002612799604060002084613363565b01908051906001600160401b038211610851576127ba82610636855461320f565b602090601f8311600114612961576127ea9291600091836129565750508160011b916000199060031b1c19161790565b90555b602083015182600052600b602052600361280b604060002084613363565b01908051906001600160401b0382116108515761282c82610636855461320f565b602090601f83116001146128cc579180612880927f1a6c621ce297512b54d9fe58c6d8e32546e8a41325802ae88d331d0e3ad3afbf9695946000926128c15750508160011b916000199060031b1c19161790565b90555b6128b16040850194855185600052600b60205260046128a6604060002086613363565b01555194519161331f565b936114a360405192839283613389565b0151905088806105fa565b90601f1983169184600052816000209260005b81811061293e57509160019391857f1a6c621ce297512b54d9fe58c6d8e32546e8a41325802ae88d331d0e3ad3afbf9897969410612925575b505050811b019055612883565b015160001960f88460031b161c19169055878080612918565b929360206001819287860151815501950193016128df565b0151905087806105fa565b90601f1983169184600052816000209260005b8181106129b05750908460019594939210612997575b505050811b0190556127ed565b015160001960f88460031b161c1916905586808061298a565b92936020600181928786015181550195019301612974565b60405163214173d760e11b815260206004820152908190610d18906024830190612efd565b346101ea5760203660031901126101ea57612a06612ec4565b612a0e613585565b612a166135ae565b60018060a01b03168060005260096020526101cb612a3e604060002060405192838092613249565b805180612af4575b50508060005260096020526000600360408220612a63815461320f565b80612ab1575b50826001820155826002820155015560045460001981019081116109a7576004557fe6e557d47a75287b3ed558b7c82b3380135b5bfc0752ebe108433e9cecae03e0600080a2005b601f8111600114612ac757508281555b84612a69565b81845260208420612ae391601f0160051c8101906001016132cc565b808352826020812081835555612ac1565b60209181612b0a84936040518096819501612eda565b8101600d8152030190206001600160601b0360a01b81541690558180612a46565b346101ea5760403660031901126101ea57612b44612ec4565b6024359060058210156101ea57612b59613585565b612b616135ae565b6001600160a01b0390811660008181526009602052604090206001015490929116156126bc5760207f730b94e013ecb1b73f119bf1a87c2328d2be36ffa5dfe7982bd2dfdb61e7e86a918360005260098252612bc481600160406000200161333f565b6126b96040518092613100565b346101ea5760203660031901126101ea576004356001600160401b0381116101ea57602060031982360301126101ea5760405190612c0e82612f4f565b8060040135906001600160401b0382116101ea576004612c319236920101613040565b8152612c3b613585565b612c436135ae565b8051519081516001600160401b03811161085157612c6260075461320f565b601f8111612d59575b50602092601f8211600114612cd757612c9d929382916000926110425750508160011b916000199060031b1c19161790565b6007555b517fa7edb700029c08cb918eb17ac416c6bbbdb72b7f45f292875c84d7693678b11760206110388184015193846008555161331f565b601f1982169360076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889160005b868110612d415750836001959610612d28575b505050811b01600755612ca1565b015160001960f88460031b161c19169055838080612d1a565b91926020600181928685015181550194019201612d07565b6007600052612da2907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688601f840160051c8101916020851061110357601f0160051c01906132cc565b83612c6b565b346101ea5760203660031901126101ea576001600160a01b03612dc9612ec4565b166000526009602052602060ff60016040600020015460a81c166118536040518092612f42565b346101ea5760003660031901126101ea57604051612e0d81612f4f565b612e156131f5565b90526101e6604051612e2681612f4f565b604051612e3281612fa0565b604051612e44816101cb816007613249565b81526008546020820152815260405191829160208352516020808401526040830190612f22565b346101ea5760203660031901126101ea57612e84612ec4565b612e8c613585565b6001600160a01b03168015612eb3576001600160601b0360a01b6001541617600155600080f35b634973c50160e01b60005260046000fd5b600435906001600160a01b03821682036101ea57565b60005b838110612eed5750506000910152565b8181015183820152602001612edd565b90602091612f1681518092818552858086019101612eda565b601f01601f1916010190565b90602080612f398451604085526040850190612efd565b93015191015290565b906003821015611e065752565b602081019081106001600160401b0382111761085157604052565b60c081019081106001600160401b0382111761085157604052565b60e081019081106001600160401b0382111761085157604052565b604081019081106001600160401b0382111761085157604052565b90601f801991011681019081106001600160401b0382111761085157604052565b9291926001600160401b0382116108515760405191613005601f8201601f191660200184612fbb565b8294818452818301116101ea578281602093846000960137010152565b9080601f830112156101ea5781602061303d93359101612fdc565b90565b9190916040818403126101ea576040519061305a82612fa0565b81938135916001600160401b0383116101ea5761307d6020939284938301613022565b84520135910152565b9190916060818403126101ea5760405190606082018281106001600160401b0382111761085157604052819381356001600160401b0381116101ea57816130ce918401613022565b83526020820135916001600160401b0383116101ea576130f46040939284938301613022565b60208501520135910152565b906005821015611e065752565b9060a08061316361315161313f61312d875160c0885260c0880190612efd565b60208801518782036020890152612efd565b60408701518682036040880152612efd565b60608601518582036060870152612efd565b93608081015160808501520151151591015290565b9181601f840112156101ea578235916001600160401b0383116101ea57602083818601950101116101ea57565b60406003198201126101ea576004356001600160401b0381116101ea57816131cf91600401613178565b92909291602435906001600160401b0382116101ea576131f191600401613178565b9091565b6040519061320282612fa0565b6000602083606081520152565b90600182811c9216801561323f575b602083101461322957565b634e487b7160e01b600052602260045260246000fd5b91607f169161321e565b600092918154916132598361320f565b80835292600181169081156132af575060011461327557505050565b60009081526020812093945091925b838310613295575060209250010190565b600181602092949394548385870101520191019190613284565b915050602093945060ff929192191683830152151560051b010190565b8181106132d7575050565b600081556001016132cc565b9190601f81116132f257505050565b61331d926000526020600020906020601f840160051c8301931061110357601f0160051c01906132cc565b565b61333790602060405192828480945193849201612eda565b810103902090565b906005811015611e0657815460ff60a01b191660a09190911b60ff60a01b16179055565b60209061337d928260405194838680955193849201612eda565b82019081520301902090565b9291906133a0602091604086526040860190612efd565b930152565b906003811015611e0657815460ff60a81b191660a89190911b60ff60a81b16179055565b6001600160401b0381116108515760051b60200190565b604051906133ed82612f6a565b600060a0836060815260606020820152606060408201526060808201528260808201520152565b805482101561342c5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b805182101561342c5760209160051b010190565b6020919283604051948593843782019081520301902090565b908160209103126101ea575180151581036101ea5790565b908060209392818452848401376000828201840152601f01601f1916010190565b9392916020916133a091604087526040870191613487565b9092916001600160401b038111610851576134e5816134df845461320f565b846132e3565b6000601f821160011461352557819061351693949560009261351a5750508160011b916000199060031b1c19161790565b9055565b0135905038806105fa565b601f198216948382526020822091805b87811061356d575083600195969710613553575b505050811b019055565b0135600019600384901b60f8161c19169055388080613549565b90926020600181928686013581550194019101613535565b6000546001600160a01b0316330361359957565b63118cdaa760e01b6000523360045260246000fd5b60ff60005460a01c166135bd57565b63d93c066560e01b60005260046000fd5b60ff60005460a01c16156135de57565b638dfc202b60e01b60005260046000fdfea2646970667358221220b31134f0c24509306076abcbbf0fae4aea6396daf4cc71564f8e0c23171a946864736f6c634300081c003360803461015857601f611a7738819003918201601f19168301916001600160401b0383118484101761015d5780849260c0946040528339810103126101585761004781610173565b61005360208301610173565b60408301519092906001600160a01b038116908190036101585760608201519061008460a060808501519401610173565b6001600160a01b039094169485156101425760008054604051979182906001600160a01b038316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a81b031916176000908155678ac7230489e80000600455600655600180546001600160a01b03199081166001600160a01b0393841617909155600280548216939093179092556003929092556005929092556009805490921692169190911790556118ef90816101888239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101585756fe608080604052600436101561001357600080fd5b60003560e01c908163012a33aa146116525750806301c61a32146112455780630552f9ff146111db5780630a0137ab1461117d57806311a1933c1461115f5780631fa8c9ae1461113e57806320875d6614610e8f5780633f185b6c14610dbf5780634be3a6e914610d5d578063586d396b14610cf85780635a21533814610cda5780635c975abb14610cb457806364208e0914610c8b578063715018a614610c325780637418c96814610c085780637843365514610b7a5780637af8bb5d14610ad05780637c87816614610ab25780638135c36f146109b05780638da5cb5b146109875780638e0e4e09146107b657806394906bcf146107545780639a3867e91461051c578063c9cda91f146104cf578063d150700114610469578063d32ad62214610440578063d3e256bf146103d8578063dea182c114610279578063e058e99714610397578063f2fde38b1461030e578063f9468713146102a2578063fc0c546a146102795763fe80c4f41461018a57600080fd5b34610274576020366003190112610274576001600160a01b036101ab61166d565b16600052600a6020526040600020604051906000908054906101cc826117bb565b808552916001811690811561024d575060011461020c575b610208846101f481860382611683565b60405191829160208352602083019061171f565b0390f35b600090815260208120939250905b808210610233575090915081016020016101f4826101e4565b91926001816020925483858801015201910190929161021a565b60ff191660208087019190915292151560051b850190920192506101f491508390506101e4565b600080fd5b34610274576000366003190112610274576001546040516001600160a01b039091168152602090f35b346102745760203660031901126102745760043567ffffffffffffffff8111610274576102ec60206102da60409336906004016116a5565b818451938285809451938492016116fc565b8101600881520301902060ff6001825492015416825191825215156020820152f35b346102745760203660031901126102745761032761166d565b61032f61184f565b6001600160a01b0316801561038157600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b34610274576020366003190112610274576103b061166d565b6103b861184f565b60018060a01b031660005260076020526020604060002054604051908152f35b34610274576020366003190112610274576004356103f461184f565b801561042f57600354816003556040519081527fea943276b7af14e01ef5207cd2cee75f7c7b742afe03d223779a09627301965560203392a3005b63f0adf53360e01b60005260046000fd5b34610274576000366003190112610274576009546040516001600160a01b039091168152602090f35b34610274576020366003190112610274576001600160a01b0361048a61166d565b168060005260076020526040600020541515806104af575b6020906040519015158152f35b50600052600a60205260206104c86040600020546117bb565b15156104a2565b34610274576020366003190112610274576104e861166d565b6104f061184f565b6001600160a01b0316801561042f576bffffffffffffffffffffffff60a01b6001541617600155600080f35b346102745761052a36611744565b9061053361184f565b6009546040516325e016d360e11b81526001600160a01b0390911690602081600481855afa90811561071457600091610720575b5060209061058b92604051808095819463e0bb933d60e01b8352896004840161179f565b03915afa908115610714576000916106e5575b50156106d4576001600160a01b03166000908152600b60205260409020815167ffffffffffffffff81116106be576105d682546117bb565b601f8111610681575b50602092601f82116001146106215761061292938291600092610616575b50508160011b916000199060031b1c19161790565b9055005b0151905084806105fd565b601f1982169383600052806000209160005b8681106106695750836001959610610650575b505050811b019055005b015160001960f88460031b161c19169055838080610646565b91926020600181928685015181550194019201610633565b6106ae90836000526020600020601f840160051c810191602085106106b4575b601f0160051c0190611838565b836105df565b90915081906106a1565b634e487b7160e01b600052604160045260246000fd5b630a3f1b7960e21b60005260046000fd5b610707915060203d60201161070d575b6106ff8183611683565b810190611787565b8361059e565b503d6106f5565b6040513d6000823e3d90fd5b90506020813d60201161074c575b8161073b60209383611683565b81010312610274575161058b610567565b3d915061072e565b346102745760003660031901126102745761076d61184f565b610775611898565b61077d611898565b60ff60a01b19600054166000557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b34610274576107c436611744565b906107cd61184f565b60095460405163cb3e1fe760e01b81526001600160a01b0390911690602081600481855afa90811561071457600091610953575b5060209061082592604051808095819463e0bb933d60e01b8352896004840161179f565b03915afa90811561071457600091610934575b5015610923576001600160a01b03166000908152600a60205260409020815167ffffffffffffffff81116106be5761087082546117bb565b601f81116108f1575b50602092601f82116001146108ab57610612929382916000926106165750508160011b916000199060031b1c19161790565b601f1982169383600052806000209160005b8681106108d9575083600195961061065057505050811b019055005b919260206001819286850151815501940192016108bd565b61091d90836000526020600020601f840160051c810191602085106106b457601f0160051c0190611838565b83610879565b63319f172f60e21b60005260046000fd5b61094d915060203d60201161070d576106ff8183611683565b83610838565b90506020813d60201161097f575b8161096e60209383611683565b810103126102745751610825610801565b3d9150610961565b34610274576000366003190112610274576000546040516001600160a01b039091168152602090f35b34610274576020366003190112610274576004356109cc61184f565b6109d4611878565b600654808211610aa157816109e89161182b565b60065560015460025460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529160209183916044918391600091165af190811561071457600091610a82575b5015610a71576002544291906001600160a01b03167f0ec851daa65cf683ea50a214d0556df1c12c6c97741c24d6a433b81b01b8a1ef600080a4005b637024dad560e11b60005260046000fd5b610a9b915060203d60201161070d576106ff8183611683565b82610a35565b6306ba5aa760e11b60005260046000fd5b34610274576000366003190112610274576020600454604051908152f35b34610274576020366003190112610274576001600160a01b03610af161166d565b16600052600b602052604060002060405190600090805490610b12826117bb565b808552916001811690811561024d5750600114610b3957610208846101f481860382611683565b600090815260208120939250905b808210610b60575090915081016020016101f4826101e4565b919260018160209254838588010152019101909291610b47565b34610274576000366003190112610274576001546002546040516370a0823160e01b81526001600160a01b0391821660048201529160209183916024918391165afa801561071457600090610bd5575b602090604051908152f35b506020813d602011610c00575b81610bef60209383611683565b810103126102745760209051610bca565b3d9150610be2565b34610274576000366003190112610274573360005260076020526020604060002054604051908152f35b3461027457600036600319011261027457610c4b61184f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610274576000366003190112610274576002546040516001600160a01b039091168152602090f35b3461027457600036600319011261027457602060ff60005460a01c166040519015158152f35b34610274576000366003190112610274576020600654604051908152f35b346102745760203660031901126102745760043567ffffffffffffffff81116102745760ff6001610d466020610d33819536906004016116a5565b81604051938285809451938492016116fc565b810160088152030190200154166040519015158152f35b3461027457602036600319011261027457600435610d7961184f565b801561042f5760607fbef184c70b971ce37dd431ed022897a9211e97ca421f71da4c3aa85da4f6c5e59160055490806005556040519133835260208301526040820152a1005b3461027457602036600319011261027457610dd861166d565b610de061184f565b610de8611878565b6001600160a01b03166000818152600760209081526040808320839055600a90915290208054610e17906117bb565b9081610e4b575b827f7aeea51f76cf53bb0e38ea557afb288adf612290f445157ce8bf0e19fdcc4c766020604051428152a2005b81601f60009311600114610e635750555b8180610e1e565b81835260208320610e7f91601f0160051c810190600101611838565b8082528160208120915555610e5c565b3461027457602036600319011261027457600435610eab611878565b33600052600a602052604060002060405190816000825492610ecc846117bb565b808452936001811690811561111c57506001146110d5575b50610ef192500382611683565b805115908115611009575b50610ff857600454808210610fe757336000526007602052604060002054908110610aa1578111610fd6573360005260076020526040600020610f4082825461182b565b905560015460405163a9059cbb60e01b81523360048201526024810183905290602090829060449082906000906001600160a01b03165af190811561071457600091610fb7575b5015610a71574290337f9e6f10237a3bc28f40142a7f51474829ca0926a141b2aa82d169584162500fda600080a4005b610fd0915060203d60201161070d576106ff8183611683565b82610f87565b6379d9383360e11b60005260046000fd5b63b2726f4960e01b60005260046000fd5b6351a846b160e11b60005260046000fd5b60095460405163cb3e1fe760e01b81526001600160a01b03909116925090602082600481865afa9182156107145760009261109f575b5060405163e0bb933d60e01b81529260209284928391829161106591906004840161179f565b03915afa90811561071457600091611080575b501582610efc565b611099915060203d60201161070d576106ff8183611683565b82611078565b91506020823d6020116110cd575b816110ba60209383611683565b810103126102745790519061106561103f565b3d91506110ad565b90506000929192526020600020906000915b818310611100575050906020610ef19282010185610ee4565b60209193508060019154838588010152019101909183926110e7565b905060209250610ef194915060ff191682840152151560051b82010185610ee4565b346102745760203660031901126102745761115761184f565b600480359055005b34610274576000366003190112610274576020600354604051908152f35b346102745760203660031901126102745761119661166d565b61119e61184f565b6001600160a01b031680156111ca576bffffffffffffffffffffffff60a01b6009541617600955600080f35b63778e115760e01b60005260046000fd5b34610274576000366003190112610274576111f461184f565b6111fc611878565b611204611878565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1005b346102745760803660031901126102745761125e61166d565b60243567ffffffffffffffff81116102745761127e9036906004016116a5565b9060643567ffffffffffffffff81116102745761129f9036906004016116a5565b6009546040516325e016d360e11b81526001600160a01b03909116929190602081600481875afa9081156107145760009161161e575b5060405163e0bb933d60e01b815291602091839182916112f8916004840161179f565b0381865afa908115610714576000916115ff575b50156115ee5760018060a01b03169081600052600a6020526040600020906040519182600082549261133d846117bb565b80845293600181169081156115cc5750600114611585575b5061136292500383611683565b8151159182156114c6575b5050610ff85780156111ca576113876005546044356117f5565b906000602060018060a01b03600154166064604051809481936323b872dd60e01b83523360048401523060248401528860448401525af1908115610714576000916114a7575b5015610a71576113fb60646113e4600354856117f5565b0480936113f38260065461181e565b60065561182b565b92816000526007602052604060002061141585825461181e565b9055604051604081019080821067ffffffffffffffff8311176106be5760019160405285815261145a60208083019484865281604051938285809451938492016116fc565b8101600881520301902090518155019051151560ff801983541691161790556040519182527fa6c1325e03b867ee45303c64111dc7e52670f1da44597390374b5210cda6508d60203393a4005b6114c0915060203d60201161070d576106ff8183611683565b846113cd565b60405163cb3e1fe760e01b8152919250602082600481865afa9182156107145760009261154f575b5060405163e0bb933d60e01b81529260209284928391829161151491906004840161179f565b03915afa90811561071457600091611530575b5015838061136d565b611549915060203d60201161070d576106ff8183611683565b83611527565b91506020823d60201161157d575b8161156a60209383611683565b81010312610274579051906115146114ee565b3d915061155d565b90506000929192526020600020906000915b8183106115b05750509060206113629282010187611355565b6020919350806001915483858901015201910190918492611597565b90506020925061136294915060ff191682840152151560051b82010187611355565b6366a70fa760e11b60005260046000fd5b611618915060203d60201161070d576106ff8183611683565b8461130c565b90506020813d60201161164a575b8161163960209383611683565b8101031261027457516112f86112d5565b3d915061162c565b34610274576000366003190112610274576020906005548152f35b600435906001600160a01b038216820361027457565b90601f8019910116810190811067ffffffffffffffff8211176106be57604052565b81601f820112156102745780359067ffffffffffffffff82116106be57604051926116da601f8401601f191660200185611683565b8284526020838301011161027457816000926020809301838601378301015290565b60005b83811061170f5750506000910152565b81810151838201526020016116ff565b90602091611738815180928185528580860191016116fc565b601f01601f1916010190565b906040600319830112610274576004356001600160a01b038116810361027457916024359067ffffffffffffffff821161027457611784916004016116a5565b90565b90816020910312610274575180151581036102745790565b9291906117b660209160408652604086019061171f565b930152565b90600182811c921680156117eb575b60208310146117d557565b634e487b7160e01b600052602260045260246000fd5b91607f16916117ca565b8181029291811591840414171561180857565b634e487b7160e01b600052601160045260246000fd5b9190820180921161180857565b9190820391821161180857565b818110611843575050565b60008155600101611838565b6000546001600160a01b0316330361186357565b63118cdaa760e01b6000523360045260246000fd5b60ff60005460a01c1661188757565b63d93c066560e01b60005260046000fd5b60ff60005460a01c16156118a857565b638dfc202b60e01b60005260046000fdfea2646970667358221220bf5df1ffeac76366ec76f59534d96f6f50094d06f5fc6b838c22658cb0e654f564736f6c634300081c0033';

type DataRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataRegistry__factory extends ContractFactory {
  constructor(...args: DataRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _provider: AddressLike,
    _serviceFee: BigNumberish,
    _didAuth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, _provider, _serviceFee, _didAuth, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    _provider: AddressLike,
    _serviceFee: BigNumberish,
    _didAuth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, _provider, _serviceFee, _didAuth, overrides || {}) as Promise<
      DataRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DataRegistry__factory {
    return super.connect(runner) as DataRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataRegistryInterface {
    return new Interface(_abi) as DataRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DataRegistry {
    return new Contract(address, _abi, runner) as unknown as DataRegistry;
  }
}
