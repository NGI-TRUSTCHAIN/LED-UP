/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ZKPRegistry,
  ZKPRegistryInterface,
} from "../../../contracts/zkp/ZKPRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKPRegistry__AdminAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKPRegistry__CallerNotAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKPRegistry__InvalidAdminAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKPRegistry__InvalidVerifierAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKPRegistry__InvalidVerifierType",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKPRegistry__VerifierAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "ZKPRegistry__VerifierNotRegistered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "verifierType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    name: "VerifierRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "verifierType",
        type: "bytes32",
      },
    ],
    name: "VerifierRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "verifierType",
        type: "bytes32",
      },
    ],
    name: "getVerifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "verifierType",
        type: "bytes32",
      },
    ],
    name: "isVerifierRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "verifierType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    name: "registerVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "verifierType",
        type: "bytes32",
      },
    ],
    name: "removeVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461009157331561007b5760008054336001600160a01b0319821681178355604080519390929091906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3338152600260205220805460ff1916600117905561088990816100978239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80631785f53c1461068557806324d7806c1461062c5780636c854c47146105f75780637048027514610551578063715018a6146104f75780638da5cb5b146104d0578063d716ee4214610212578063e403f4ff14610160578063eeb7b248146101135763f2fde38b1461008b57600080fd5b34610110576020366003190112610110576100a46107b2565b6100ac6107cd565b6001600160a01b039081169081156100f75782546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b80fd5b5034610110576020366003190112610110576004358152600160205260409020546001600160a01b0316801561014e57602090604051908152f35b6040516324cb792960e01b8152600490fd5b503461011057602036600319011261011057600435338252600260205260ff60408320541615806101fe575b6101ec57808252600160205260408220546001600160a01b03161561014e5780825260016020526040822080546001600160a01b03191690557f6fdcbcf8f91bc23f2c9dcfe8fe01d80d1b1afbbf207298e94c0171ccc587424c8280a280f35b60405163b813dac760e01b8152600490fd5b5081546001600160a01b031633141561018c565b5034610110576040366003190112610110576004356024356001600160a01b03808216820361040a57338452600260205260ff60408520541615806104c3575b6101ec57808216156104b157821561049f57604051610270816107f9565b84815284602082015260405190610286826107f9565b604051610292816107f9565b86815286602082015282526040516102a9816107f9565b8681528660208201526020830152604051906102c4826107f9565b8682528660208301526040519182602081011067ffffffffffffffff60208501111761048b5792919060208201604052878252604051938493630984a41f60e21b855261031a610124860193600487019061082b565b89604486015b60028210610446575050506103399060c485019061082b565b610120610104840152815180915260206101448401920190885b81811061042d57505050908060209203818587165afa6103c3575b507f844aebaef6b58c1ac9ca20d442e8daac6dcd22a339a70bbed6385ab64882c3b49160209184865260018352604086208183166bffffffffffffffffffffffff60a01b82541617905560405191168152a280f35b60203d602011610426575b601f8101601f1916820167ffffffffffffffff8111838210176104125760209183916040528101031261040e57518015150361040a573861036e565b8380fd5b8480fd5b634e487b7160e01b87526041600452602487fd5b503d6103ce565b8251845285945060209384019390920191600101610353565b90918093949596505181908c915b60028310610475575050506020604060019201930191018695949392610320565b6020806001928451815201920192019190610454565b634e487b7160e01b88526041600452602488fd5b6040516316b8427f60e01b8152600490fd5b60405163125d995d60e01b8152600490fd5b5080845416331415610252565b5034610110578060031936011261011057546040516001600160a01b039091168152602090f35b50346101105780600319360112610110576105106107cd565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101105760203660031901126101105761056b6107b2565b6105736107cd565b6001600160a01b031680156105e557808252600260205260ff6040832054166105d457808252600260205260408220805460ff191660011790557f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e3398280a280f35b60405162ba964160e31b8152600490fd5b60405163e288eba160e01b8152600490fd5b503461011057602036600319011261011057602090600435815260018252604060018060a01b03912054161515604051908152f35b5034610110576020366003190112610110576020906001600160a01b03806106526107b2565b16908183526002845260ff604084205416928315610678575b5050506040519015158152f35b541614905038808061066b565b50346101105760203660031901126101105761069f6107b2565b6106a76107cd565b81546001600160a01b039182169116811461075b57808252600260205260ff6040832054161561070c57808252600260205260408220805460ff191690557fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f8280a280f35b60405162461bcd60e51b815260206004820152602160248201527f5a4b5052656769737472793a2061646d696e20646f6573206e6f7420657869736044820152601d60fa1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602960248201527f5a4b5052656769737472793a2063616e6e6f742072656d6f7665206f776e65726044820152681030b99030b236b4b760b91b6064820152608490fd5b600435906001600160a01b03821682036107c857565b600080fd5b6000546001600160a01b031633036107e157565b60405163118cdaa760e01b8152336004820152602490fd5b6040810190811067ffffffffffffffff82111761081557604052565b634e487b7160e01b600052604160045260246000fd5b6000915b6002831061083c57505050565b60019082518152602080910192019201919061082f56fea2646970667358221220681e75e611f891e5acc3cfa0ee560f4132f3e7ca1be9f9d059d005c6c9bea40664736f6c63430008140033";

type ZKPRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKPRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKPRegistry__factory extends ContractFactory {
  constructor(...args: ZKPRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZKPRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZKPRegistry__factory {
    return super.connect(runner) as ZKPRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKPRegistryInterface {
    return new Interface(_abi) as ZKPRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZKPRegistry {
    return new Contract(address, _abi, runner) as unknown as ZKPRegistry;
  }
}
