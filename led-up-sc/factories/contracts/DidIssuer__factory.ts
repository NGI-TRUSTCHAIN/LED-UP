/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DidIssuer, DidIssuerInterface } from "../../contracts/DidIssuer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_didRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DidIssuer__CredentialAlreadyIssued",
    type: "error",
  },
  {
    inputs: [],
    name: "DidIssuer__InvalidSubject",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "credentialType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "credentialId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CredentialIssued",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "credentialId",
        type: "bytes32",
      },
    ],
    name: "isCredentialValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "credentialType",
        type: "string",
      },
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "credentialId",
        type: "bytes32",
      },
    ],
    name: "issueCredential",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f61033438819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b0319169190911790556040516102a490816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081635c591ef1146100685750636dc158eb1461003957600080fd5b34610064576020366003190112610064578160209360ff923581526001855220541690519015158152f35b8280fd5b848385346100645760603660031901126100645767ffffffffffffffff9082358281116102165761009c903690850161021a565b929093602435828111610212576100b6903690830161021a565b875463c8902a2160e01b8a5260208a85018190529960443595929492918b9082906001600160a01b031681806100f0602482018b8b61024d565b03915afa918215610208578a926101a8575b50501561019a578388526001895260ff858920541661018c57509661017c918798847f3d28bbee9384b086a7d8c99955e4ab96ea5e144003875fe3406af4c4cbfeeab2995260018352858a20600160ff1982541617905561016f865198899860808a5260808a019161024d565b928784039088015261024d565b918301524260608301520390a180f35b845163030cb3db60e61b8152fd5b8451631604938f60e21b8152fd5b9091508a903d8c11610200575b601f8201601f19168301908111838210176101ed578b9183918952810103126101e9575180151581036101e9578a80610102565b8880fd5b634e487b7160e01b8b526041845260248bfd5b3d91506101b5565b87513d8c823e3d90fd5b8680fd5b8480fd5b9181601f840112156102485782359167ffffffffffffffff8311610248576020838186019501011161024857565b600080fd5b908060209392818452848401376000828201840152601f01601f191601019056fea26469706673582212201b60baac7dfb8ed5d3aea4694b686904bf43ec164de1e33da56a60eccde436c764736f6c63430008140033";

type DidIssuerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DidIssuerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DidIssuer__factory extends ContractFactory {
  constructor(...args: DidIssuerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _didRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_didRegistryAddress, overrides || {});
  }
  override deploy(
    _didRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_didRegistryAddress, overrides || {}) as Promise<
      DidIssuer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DidIssuer__factory {
    return super.connect(runner) as DidIssuer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DidIssuerInterface {
    return new Interface(_abi) as DidIssuerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DidIssuer {
    return new Contract(address, _abi, runner) as unknown as DidIssuer;
  }
}
