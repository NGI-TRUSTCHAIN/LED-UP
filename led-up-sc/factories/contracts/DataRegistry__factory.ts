/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DataRegistry,
  DataRegistryInterface,
} from "../../contracts/DataRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_serviceFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_didAuthAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "DataRegistry__AccessDenied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "DataRegistry__AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "DataRegistry__ConsentNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__DidAuthNotInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "DataRegistry__ExpiredAccess",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "provided",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "DataRegistry__InvalidAccessDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__InvalidContentHash",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "DataRegistry__InvalidDID",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__InvalidDidAuthAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "DataRegistry__PaymentNotVerified",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "DataRegistry__RecordAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "DataRegistry__RecordNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "DataRegistry__Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "expiration",
        type: "uint40",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "accessLevel",
        type: "uint8",
      },
    ],
    name: "AccessGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "revoker",
        type: "address",
      },
    ],
    name: "AccessRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "consumerDid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum DataRegistry.AccessLevel",
        name: "accessLevel",
        type: "uint8",
      },
    ],
    name: "AccessTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "CompensationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum DataRegistry.ConsentStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "ConsentStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum DataRegistry.AccessLevel",
        name: "accessLevel",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "expiration",
        type: "uint40",
      },
    ],
    name: "ConsumerAuthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "DidAuthUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "ProviderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum DataRegistry.AccessLevel",
        name: "accessLevel",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint40",
        name: "timestamp",
        type: "uint40",
      },
    ],
    name: "ProviderAuthorized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "ProviderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "RecordRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum DataRegistry.RecordStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "RecordStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "RecordUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "verifier",
        type: "address",
      },
    ],
    name: "RecordVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
    ],
    name: "addProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "consumerAddress",
        type: "address",
      },
    ],
    name: "checkAccess",
    outputs: [
      {
        internalType: "bool",
        name: "hasAccess",
        type: "bool",
      },
      {
        internalType: "uint40",
        name: "expiration",
        type: "uint40",
      },
      {
        internalType: "uint8",
        name: "accessLevel",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isRevoked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "didAuth",
    outputs: [
      {
        internalType: "contract DidAuth",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCompensationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "getProducerMetadata",
    outputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "consent",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "entries",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint40",
        name: "lastUpdated",
        type: "uint40",
      },
      {
        internalType: "uint40",
        name: "nonce",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
    ],
    name: "getProducerRecords",
    outputs: [
      {
        internalType: "string[]",
        name: "recordIds",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "getRecordInfo",
    outputs: [
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "recordId",
            type: "string",
          },
          {
            internalType: "address",
            name: "producer",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "sharedCount",
            type: "uint32",
          },
          {
            internalType: "uint40",
            name: "updatedAt",
            type: "uint40",
          },
          {
            internalType: "uint24",
            name: "dataSize",
            type: "uint24",
          },
          {
            internalType: "bytes32",
            name: "contentHash",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "cid",
            type: "string",
          },
        ],
        internalType: "struct DataRegistry.ResourceMetadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "getRecordProducer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalRecords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "isAuthorizedProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "isRecordVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum DataRegistry.RecordStatus",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "enum DataRegistry.ConsentStatus",
        name: "_consent",
        type: "uint8",
      },
    ],
    name: "registerProducer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "enum DataRegistry.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint24",
        name: "dataSize",
        type: "uint24",
      },
    ],
    name: "registerRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_provider",
        type: "address",
      },
    ],
    name: "removeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "consumerAddress",
        type: "address",
      },
    ],
    name: "revokeAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "consumerAddress",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "accessDuration",
        type: "uint40",
      },
    ],
    name: "shareData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint40",
        name: "accessDuration",
        type: "uint40",
      },
      {
        internalType: "enum DataRegistry.AccessLevel",
        name: "accessLevel",
        type: "uint8",
      },
    ],
    name: "shareToProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "triggerAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compensationAddress",
        type: "address",
      },
    ],
    name: "updateCompensationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_didAuthAddress",
        type: "address",
      },
    ],
    name: "updateDidAuthAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "producer",
        type: "address",
      },
      {
        internalType: "enum DataRegistry.ConsentStatus",
        name: "consentStatus",
        type: "uint8",
      },
    ],
    name: "updateProducerConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
      {
        internalType: "string",
        name: "cid",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
    ],
    name: "updateRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "recordId",
        type: "string",
      },
    ],
    name: "verifyRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620001a757601f62004cab38819003918201601f1916830192916001600160401b039182851184861017620001ac578160809285926040978852833981010312620001a7576200005282620001c2565b602083015190916001600160a01b039182811690819003620001a757620000806060878701519601620001c2565b6001805460ff191681556002559133156200018f576003549260018060a01b031995338786161760035585895192600096823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08980a316918215620001805750818760045416176004558851936115cf80860194868610908611176200016c5760a094928694928992620036dc8739845216988960208401528a830152670de0b6b3a76400006060830152608082015203019082f0908115620001615750168160055416176005556006541617600655516135049081620001d88239f35b8551903d90823e3d90fd5b634e487b7160e01b87526041600452602487fd5b634973c50160e01b8152600490fd5b8651631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001a75756fe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a714612d10575080630701844714612ca55780630a0137ab14612c1d5780630aeacb5e14612bf65780632402c82d14612a13578063248a9ca3146129e75780632e00be4a146128075780632f2ff15d146127ca57806336568abe1461278257806337959c94146125d0578063383452ce146120325780633f4ba83a14611fc757806341cf798e14611ebf57806344a08b3614611e7b57806346e2577a14611e1257806350ea4c6814611a56578063516567071461168c57806357285215146110bc5780635c975abb14611099578063715018a61461103b5780638456cb5914610fe15780638a355a5714610f7b5780638da5cb5b14610f5257806391d1485414610f0757806399eb12d814610ea9578063a217fddf14610e8d578063a781871414610e36578063b09d9b2414610c27578063bdd7a3fe14610b40578063c40e58241461094d578063d32ad62214610924578063d547741f146108e3578063dfe0b5fe146106ed578063e189c099146106c4578063f2fde38b146106345763f6bca571146101ad57600080fd5b34610631576080366003190112610631576004356001600160401b03811161062d576101dd903690600401612d91565b6101e5612d7b565b916101ee612e99565b91600360643510156106295760018060a01b03600454166040519063cb3e1fe760e01b8252602082600481845afa91821561061e5787926105e5575b50604051632d5e71fb60e21b81523360048201528781602481855afa9182156105da57602092610280928a916105b8575b5060405180958194829363e0bb933d60e01b8452604060048501526044840190612ed0565b90602483015203915afa9081156105ad57869161057e575b501561054d576102a9368284612e62565b9260405160208186516102bf8183858b01612ead565b8101600981520301902094604051946102d786612dbe565b60ff87541686526040516102f9816102f28160018c016131df565b0382612e26565b6020870152600460e060028901549760018060a01b038916604082015261036563ffffffff9a8b8b60a01c16606084015264ffffffffff9a8b8160c01c16608085015260e81c60a0840152600381015460c084015261035e60405180968193016131df565b0384612e26565b01523388526008602052600160ff8160408b200154160361055f57506001600160a01b0316808752600c602052604087205490959060ff161561054d576040518385823760098185019081528190036020019020600201546001600160a01b031633811480159061052d575b6105015785929161048d9189526008602052610446600160408b2001610416864216829064ffffffffff60201b82549160201b169064ffffffffff60201b1916179055565b61042586825460481c16613338565b64ffffffffff60481b82549160481b169064ffffffffff60481b1916179055565b61046d60026040518789823760208189810160098152030190200191825460a01c166133ce565b815463ffffffff60a01b191660a09190911b63ffffffff60a01b16179055565b164201918242116104ed5791817f5442a10c1ef94969e1f752287154e24a4c34da38678bb6964ce2abc533bd06639360409384519283928337810160008152039020938251916104de606435613135565b6064358352166020820152a380f35b634e487b7160e01b86526011600452602486fd5b505060405163214173d760e11b81526020600482015292839261052992506024840191613364565b0390fd5b5060036040518587823760208187810160098152030190200154156103d1565b60405163a72971e560e01b8152600490fd5b60405163b0ee660560e01b8152908190610529903390600484016133a6565b6105a0915060203d6020116105a6575b6105988183612e26565b8101906131c7565b38610298565b503d61058e565b6040513d88823e3d90fd5b6105d491503d808c833e6105cc8183612e26565b81019061309a565b3861025b565b6040513d8a823e3d90fd5b9091506020813d602011610616575b8161060160209383612e26565b810103126106115751903861022a565b600080fd5b3d91506105f4565b6040513d89823e3d90fd5b8480fd5b5080fd5b80fd5b50346106315760203660031901126106315761064e612d65565b61065661306e565b6001600160a01b039081169081156106ab57600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b50346106315780600319360112610631576005546040516001600160a01b039091168152602090f35b5034610631576106fc36612ef5565b90916107066131a9565b61070e613385565b6040519280828537600384828101600981526020968791030190200154156108bf57604051918181843760098383019081528390038501909220600201546003546001600160a01b039485169493913390851681141591851614816108b6575b50806108ac575b61054d5785602493604051848482378781868101600a81520301902086600052875260406000206501000000000065ff000000000019825416179055604051848482378781868101600a815203019020866000528752604060002064ffffffffff421664ffffffffff198254161790556004541660405194858092632d5e71fb60e21b82528860048301525afa9283156105ad578693610868575b508161085d917f0a8852c305a80e6e5285e212c703193e36a852551bdedd3853fdc779311f90cc936040519283928337810160008152039020926040519182918783523397830190612ed0565b0390a4600160025580f35b61085d919350916108a37f0a8852c305a80e6e5285e212c703193e36a852551bdedd3853fdc779311f90cc933d808a833e6105cc8183612e26565b93915091610810565b5033841415610775565b9050153861076e565b836105298360405193849363214173d760e11b855260048501526024840191613364565b503461063157604036600319011261063157610920600435610903612d7b565b908084528360205261091b6001604086200154612f37565b612ff9565b5080f35b50346106315780600319360112610631576004546040516001600160a01b039091168152602090f35b50346106315760208060031936011261062d576004356001600160401b038111610b3c5761097f903690600401612d91565b90916109896131a9565b610991613385565b60018060a01b0360045416604051906373b82edb60e11b82528282600481845afa9182156105ad578692610b0d575b50604051632d5e71fb60e21b81523360048201528681602481855afa91821561061e578492610a14928991610af9575060405180958194829363e0bb933d60e01b8452604060048501526044840190612ed0565b90602483015203915afa908115610aee578591610ad1575b501561054d5760036040518385823782818581016009815203019020015415610aae57604051908284833781838101600d815203019020600160ff1982541617905580604051928337810190600082528033920390207f5d8aeda3f7f0a25367f3bc13ab8e9e0d99c68bff50caf2113b749f85764dd72b8380a3600160025580f35b6105298360405193849363214173d760e11b855260048501526024840191613364565b610ae89150823d84116105a6576105988183612e26565b38610a2c565b6040513d87823e3d90fd5b6105d491503d808b833e6105cc8183612e26565b9091508281813d8311610b35575b610b258183612e26565b81010312610611575190386109c0565b503d610b1b565b8280fd5b503461063157602036600319011261063157610c09906040906001600160a01b03610b69612d65565b168152600860205220604051610b7e81612e0b565b600160405192610b9984610b9281846131df565b0385612e26565b838352015460ff81169182602082015261ffff8260081c1680604083015260ff8360181c1615159081606084015264ffffffffff9260c063ffffffff858760201c16958660808501528760481c16968760a085015260701c1691015260405196879660c0885260c0880190612ed0565b94602087015260408601526060850152608084015260a08301520390f35b5034610631576020366003190112610631576004356001600160401b03811161062d576060610c5c60e0923690600401612d91565b92909360405190610c6c82612dbe565b80825283602083015280604083015280848301528060808301528060a083015260c08201520152610cb4600160405183858237602081858101600981520301902001546130fb565b15610e125760ff9060206040518285823781818481016009815203019020936004610d5760405196610ce588612dbe565b868154168852604051610cff816102f281600186016131df565b85890152600281015460018060a01b03811660408a015263ffffffff8160a01c1660608a015264ffffffffff8160c01c1660808a015260e81c60a0890152600381015460c08901526102f260405180948193016131df565b60e08601528260405193849283378101600d8152030190205416610e0e604051928392151583526040602084015260ff815116604084015260e0602082015191610daf61010093846060880152610140870190612ed0565b9260018060a01b03604083015116608087015263ffffffff60608301511660a087015264ffffffffff60808301511660c087015262ffffff60a0830151168387015260c0820151908601520151603f1984830301610120850152612ed0565b0390f35b61052960405192839263214173d760e11b8452602060048501526024840191613364565b503461063157602036600319011261063157600435906001600160401b03821161063157602060ff81610e6c3660048701612d91565b91908260405193849283378101600d81520301902054166040519015158152f35b5034610631578060031936011261063157602090604051908152f35b503461063157602036600319011261063157600435906001600160401b0382116106315760206002610ede3660048601612d91565b60405192918190843782019160098352838160018060a01b039403019020015416604051908152f35b5034610631576040366003190112610631576040610f23612d7b565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346106315780600319360112610631576003546040516001600160a01b039091168152602090f35b503461063157602036600319011261063157610f95612d65565b610f9d61306e565b6001600160a01b0316808252600c60205260408220805460ff191690557f1589f8555933761a3cff8aa925061be3b46e2dd43f621322ab611d300f62b1d98280a280f35b5034610631578060031936011261063157610ffa61306e565b6110026131a9565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b503461063157806003193601126106315761105461306e565b600380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610631578060031936011261063157602060ff600154166040519015158152f35b50346106315760a0366003190112610631576004356001600160401b03811161062d576110ed903690600401612d91565b6024356001600160401b0381116116885761110c903690600401612d91565b91600f60643510156106295760843562ffffff811681036116845761112f6131a9565b60018060a01b0360045416338752600860205260408720906040519163cb3e1fe760e01b8352602083600481855afa928315611679578993611644575b506020916111989160405180958194829363e0bb933d60e01b84526040600485015260448401906131df565b90602483015203915afa90811561061e578791611625575b501561054d576111be613385565b62ffffff604051916111cf83612dbe565b60ff6064351683526111e2368589612e62565b602084015233604084015287606084015264ffffffffff421660808401521660a082015260443560c0820152611219368585612e62565b60e08201526040518286823760208184810160098152030190209060ff81511660ff1983541617825560208101518051906001600160401b038211611611576112728261126960018701546130fb565b60018701613155565b602090601f83116001146115a15760e09392918a9183611596575b50508160011b916000199060031b1c19161760018401555b60408101516060820151608083015160a08085015160e81b6001600160e81b0319166001600160a01b0390941692901b63ffffffff60a01b169190911764ffffffffff60c01b60c092831b1617919091176002850155810151600384015501518051906001600160401b038211611582576113308261132760048601546130fb565b60048601613155565b602090601f8311600114611515576004929189918361150a575b50508160011b916000199060031b1c1916179101555b338552600b60205260408520805490680100000000000000008210156114f657600182018082558210156114e257856113a192849289526020892001613275565b33855260086020526001604086200161ffff80825460081c169081146114ce57815462ffff001916600190910160081b62ffff00161790557fff9a8cae8823a9ab8aa62488ee1fb14210cef9a18d7d5b0210ce730e96c5d9fd916114b79133875260086020526114536001604089200161143f64ffffffffff4216829064ffffffffff60201b82549160201b169064ffffffffff60201b1916179055565b61042564ffffffffff825460481c16613338565b6007546001600160801b0360018183160116906001600160801b0319161760075533875260086020526040872095816040519283928337810160008152039020936114a9604051966060885260608801906131df565b918683036020880152613364565b9260443560408201528033940390a3600160025580f35b634e487b7160e01b87526011600452602487fd5b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b87526041600452602487fd5b01519050388061134a565b906004840189526020892091895b601f198516811061156a5750918391600193600495601f19811610611551575b505050811b01910155611360565b015160001960f88460031b161c19169055388080611543565b91926020600181928685015181550194019201611523565b634e487b7160e01b88526041600452602488fd5b01519050388061128d565b90600185018a5260208a20918a5b601f19851681106115f9575091839160019360e09695601f198116106115e0575b505050811b0160018401556112a5565b015160001960f88460031b161c191690553880806115d0565b919260206001819286850151815501940192016115af565b634e487b7160e01b89526041600452602489fd5b61163e915060203d6020116105a6576105988183612e26565b386111b0565b9092506020813d602011611671575b8161166060209383612e26565b81010312610611575191602061116c565b3d9150611653565b6040513d8b823e3d90fd5b8580fd5b8380fd5b50346106315760208060031936011261062d576004356001600160401b038111610b3c576116be903690600401612d91565b600480546040516325e016d360e11b815292916001600160a01b0391821691908690859081855afa93841561061e578794611a27575b5060405193632d5e71fb60e21b9283865233600487015260249589818881855afa918215611a1c57899261174d928c91611a08575060405180958194829363e0bb933d60e01b8452604060048501526044840190612ed0565b908b83015203915afa9081156105da5788916119eb575b501561054d57611775368487612e62565b816005541687604051809263586d396b60e01b8252826004830152818061179e8b820188612ed0565b03915afa9081156116795789916119ce575b50156119aa57506003604051848782378781868101600981520301902001541561198857604051838682378681858101600a81520301902033600052865260406000206040519061180082612df0565b549064ffffffffff91828116825260ff808260281c16151591828b85015260301c16604083015261195e57518116904216811061192a5750908691604051848782378781868101600a81520301902033600052875260406000206501000000000065ff00000000001982541617905560045416936040518095819382523360048301525afa918215610aee5785926118ee575b507faef54108965108e41885814ce5fbef8a36dc89b0fc30b148c0deca3e4463413191928160405192839283378101600081520390209160016118e160405192604084526040840190612ed0565b948201528033940390a380f35b7faef54108965108e41885814ce5fbef8a36dc89b0fc30b148c0deca3e446341319250611924903d8088833e6105cc8183612e26565b91611893565b604051630d24593360e01b815233600482015260608187015290819061195460648301878a613364565b9060448301520390fd5b6040805163560170c760e01b8152336004820152808801919091528061052960448201888b613364565b60405163214173d760e11b815260048101879052806105298187018689613364565b6040516333928dd360e11b8152600481018890529081906105299082880190612ed0565b6119e59150883d8a116105a6576105988183612e26565b386117b0565b611a029150873d89116105a6576105988183612e26565b38611764565b6105d491503d808e833e6105cc8183612e26565b6040513d8c823e3d90fd5b9093508581813d8311611a4f575b611a3f8183612e26565b81010312610611575192386116f4565b503d611a35565b5034610631576040366003190112610631576004359060048210156106315760248035906003821015610b3c57611a8b6131a9565b60048054604051632d5e71fb60e21b815233928101929092526001600160a01b03169184828281865afa918215610aee578592611df6575b50815115611dd45733855260209260088452611ae260408720546130fb565b611dbe5760405163cb3e1fe760e01b8152908482600481845afa91821561061e578792611d8f575b50803b15611d8b5786918291604051809481809463bb53220160e01b825260406004830152611b3c604483018b612ed0565b908983015203925af180156105ad57611d5d575b50611b5a84613135565b60405191611b6783612e0b565b825260ff838301941684526040820195858752606083019660018092148852608084019164ffffffffff94854216845260a081019489865260c0820197838952338b526008815260408b2092518051926001600160401b038411611d4b5750611bda83611bd486546130fb565b86613155565b81601f8411600114611ccf57509460ff611c7a97958d9e9585611ca29d9e9f9661ffff968e9b611c469992611cc4575b5050600019600383901b1c191690831b1781555b019c511660ff198d5416178c5551168a9062ffff0082549160081b169062ffff001916179055565b518854915168ffffffffffff0000001990921690151560181b63ff0000001617911660201b64ffffffffff60201b16178655565b5184546dffffffffff0000000000000000001916911660481b64ffffffffff60481b16178355565b51815463ffffffff60701b191660709190911b63ffffffff60701b1617905580f35b015190503880611c0a565b848d52808d20929190601f198516908e905b828210611d3457505095611ca29b9c9d9e95818661ffff968e9b9660ff96611c469a611c7a9f9d10611d1b575b505050811b018155611c1e565b015160001960f88460031b161c19169055388080611d0e565b808986978294978701518155019601940190611ce1565b634e487b7160e01b8d5260416004528cfd5b6001600160401b038196929611611d78576040529338611b50565b634e487b7160e01b825260416004528582fd5b8680fd5b9091508481813d8311611db7575b611da78183612e26565b81010312611d8b57519038611b0a565b503d611d9d565b50604051633501bdc160e01b8152336004820152fd5b6105296040519283926389d2a6a160e01b845260206004850152830190612ed0565b611e0b9192503d8087833e6105cc8183612e26565b9038611ac3565b503461063157602036600319011261063157611e2c612d65565b611e3461306e565b6001600160a01b0316808252600c60205260408220805460ff191660011790557fae9c2c6481964847714ce58f65a7f6dcc41d0d8394449bacdf161b5920c4744a8280a280f35b503461063157608064ffffffffff60ff611e9d611e9736612ef5565b916133e3565b9392949091604051951515865216602085015216604083015215156060820152f35b50346106315760208060031936011261062d576001600160a01b03611ee2612d65565b168252600b81526040822080546001600160401b038111611fb357919260405192611f12858260051b0185612e26565b8084528484018093835285832083915b838310611f875750505050604051928484019085855251809152604084019460408260051b8601019392955b828710611f5b5785850386f35b909192938280611f77600193603f198a82030186528851612ed0565b9601920196019592919092611f4e565b600188819260409a99979a51611fa1816102f281896131df565b81520192019201919096939596611f22565b634e487b7160e01b84526041600452602484fd5b5034610631578060031936011261063157611fe061306e565b60015460ff8116156120205760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b604051638dfc202b60e01b8152600490fd5b5034610631576060366003190112610631576004356001600160401b03811161062d57612063903690600401612d91565b9061206c612d7b565b91612075612e99565b61207d6131a9565b612085613385565b60018060a01b03600454169360405163cb3e1fe760e01b8152602081600481895afa90811561061e57879161259e575b50604051632d5e71fb60e21b815233600482015287816024818a5afa9081156105da5760209161210a918a91612584575b50604051938492839263e0bb933d60e01b8452604060048501526044840190612ed0565b9060248301520381895afa90811561061e578791612565575b501561054d57612134368486612e62565b600460e0604051602081855161214d8183858a01612ead565b810160098152030190206121db6040519161216783612dbe565b60ff8154168352604051612182816102f281600186016131df565b6020840152600281015460018060a01b038116604085015263ffffffff8160a01c16606085015264ffffffffff8160c01c16608085015260e81c60a0840152600381015460c084015261035e60405180968193016131df565b01523387526008602052600160ff8160408a200154160361055f57506040518385823760098185019081528190036020019020600201546001600160a01b0316338114801590612545575b61054d578087526008602052600160ff8160408a2001541603612514575060055460405163586d396b60e01b8152602060048201819052909182906001600160a01b0316818061227a602482018a8c613364565b03915afa90811561061e5787916124f5575b50156124cf57604051632d5e71fb60e21b81526001600160a01b0390911660048201819052948682602481845afa91821561061e5787926124b3575b506040516325e016d360e11b815291602083600481855afa9283156105da57889361247a575b5060209161231a9160405180958194829363e0bb933d60e01b8452604060048501526044840190612ed0565b90602483015203915afa9081156105ad57869161245b575b501561054d5764ffffffffff1664ffffffffff4216019164ffffffffff8311612447577f82a0d2e2a49bfd6ba24267f26a68a3e677d1f2087421362dc0c6739b69c6ab5b9160409164ffffffffff83519561238c87612df0565b16948581526020810188815284820160018152855185858237602081878101600a815203019020898b5260205264ffffffffff868b2093511666ff00000000000065ff000000000085549451151560281b16925160301b169266ffffffffffffff19161717179055612421600284518484823760208186810160098152030190200161046d63ffffffff825460a01c166133ce565b8183519283928337810187815203902092815190600182526020820152a3600160025580f35b634e487b7160e01b85526011600452602485fd5b612474915060203d6020116105a6576105988183612e26565b38612332565b9092506020813d6020116124ab575b8161249660209383612e26565b810103126124a757519160206122ee565b8780fd5b3d9150612489565b6124c89192503d8089833e6105cc8183612e26565b90386122c8565b50506105296040519283926333928dd360e11b8452602060048501526024840191613364565b61250e915060203d6020116105a6576105988183612e26565b3861228c565b91505061253b60405193849363b0ee660560e01b8552604060048601526044850191613364565b9060248301520390fd5b506003604051858782376020818781016009815203019020015415612226565b61257e915060203d6020116105a6576105988183612e26565b38612123565b61259891503d808c833e6105cc8183612e26565b386120e6565b90506020813d6020116125c8575b816125b960209383612e26565b81010312611d8b5751386120b5565b3d91506125ac565b5034610631576040366003190112610631576125ea612d65565b602435906003821015610b3c576004805460405163cb3e1fe760e01b81526020936001600160a01b039390928416908590839081845afa91821561061e578792612753575b50604051632d5e71fb60e21b81523360048201528781602481855afa9182156105da578692612683928a916105b8575060405180958194829363e0bb933d60e01b8452604060048501526044840190612ed0565b90602483015203915afa9081156105ad578691612736575b501561054d576126a96131a9565b1690818452600881526126bf60408520546130fb565b1561054d577f5e2e9250534c0fb869513a65de986ff72c0f473b89a31dac75b0a2cca7554cba906126ef84613135565b8285526008815260408520600101805468ffffffffff000000ff191660ff8616174260201b64ffffffffff60201b161790556040519361272e81613135565b84523393a380f35b61274d9150843d86116105a6576105988183612e26565b3861269b565b9091508481813d831161277b575b61276b8183612e26565b81010312611d8b5751903861262f565b503d612761565b50346106315760403660031901126106315761279c612d7b565b336001600160a01b038216036127b85761092090600435612ff9565b60405163334bd91960e11b8152600490fd5b5034610631576040366003190112610631576109206004356127ea612d7b565b90808452836020526128026001604086200154612f37565b612f7b565b503461063157604036600319011261063157612821612d65565b906024356001600160401b03811161062d573660238201121561062d57612852903690602481600401359101612e62565b60048054604051632d5e71fb60e21b81526001600160a01b03958616928101839052941692918285602481875afa94851561298b5783956129cb575b5060405193630930828d60e21b85526020958686600481855afa958615610aee57908792918697612996575b50906128e49160405180988194829363e0bb933d60e01b8452604060048501526044840190612ed0565b90602483015203915afa93841561298b57908591849561296c575b5084612953575b916129238260409460ff9694865193828580945193849201612ead565b8101600a8152030190209082528552205460301c1615158161294b575b506040519015158152f35b905038612940565b828452600c8652604084205460ff169450859150612906565b612984919550823d84116105a6576105988183612e26565b93386128ff565b6040513d85823e3d90fd5b838193949298503d83116129c4575b6129af8183612e26565b810103126106295751948691906128e46128ba565b503d6129a5565b6129e09195503d8085833e6105cc8183612e26565b933861288e565b503461063157602036600319011261063157600160406020926004358152808452200154604051908152f35b5034610631576060366003190112610631576001600160401b03600435818111610b3c57612a45903690600401612d91565b909160243590811161168857612a5f903690600401612d91565b604492919235612a6d6131a9565b612a75613385565b6040519483818737838601600981526002602097888160018060a01b0394030190200154163314801590612bd7575b61054d578381612ba18861042584612b96600160408f612b1c8f7f6126d1b7cd1193fe676a7d0f834420081f233a7a1b60bfb1c889f86d85da589f9f908f918f90612bc59f60039188519182378c818c81016009815203019020015560048c8987519182378b818b8101600981520301902001613275565b600887612b6c8b600264ffffffffff998a42169c8d93828a51938492833760099082019081520301902001805464ffffffffff60c01b191660c09290921b64ffffffffff60c01b16919091179055565b33835252200193849064ffffffffff60201b82549160201b169064ffffffffff60201b1916179055565b825460481c16613338565b81604051928392833781018981520390209460405193604085526040850191613364565b948201528033940390a3600160025580f35b5060036040518583823787818781016009815203019020015415612aa4565b503461063157806003193601126106315760206001600160801b0360075416604051908152f35b503461063157602036600319011261063157612c37612d65565b612c3f61306e565b6001600160a01b03908116908115612c9357600454826bffffffffffffffffffffffff60a01b821617600455167fb604ab1abd81da5ff7a2705f0833e68a2613f7b1b9e3bb3647704f21b28c89598380a380f35b604051634973c50160e01b8152600490fd5b503461063157602036600319011261063157612cbf612d65565b612cc761306e565b600580546001600160a01b039283166001600160a01b0319821681179092559091167f2594bd87b6a464fd79dfb4d2ae40f5db0753c604f88005c41b052624621ab80c8380a380f35b90503461062d57602036600319011261062d5760043563ffffffff60e01b8116809103610b3c5760209250637965db0b60e01b8114908115612d54575b5015158152f35b6301ffc9a760e01b14905038612d4d565b600435906001600160a01b038216820361061157565b602435906001600160a01b038216820361061157565b9181601f84011215610611578235916001600160401b038311610611576020838186019501011161061157565b61010081019081106001600160401b03821117612dda57604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117612dda57604052565b60e081019081106001600160401b03821117612dda57604052565b90601f801991011681019081106001600160401b03821117612dda57604052565b6001600160401b038111612dda57601f01601f191660200190565b929192612e6e82612e47565b91612e7c6040519384612e26565b829481845281830111610611578281602093846000960137010152565b6044359064ffffffffff8216820361061157565b60005b838110612ec05750506000910152565b8181015183820152602001612eb0565b90602091612ee981518092818552858086019101612ead565b601f01601f1916010190565b604060031982011261061157600435906001600160401b03821161061157612f1f91600401612d91565b90916024356001600160a01b03811681036106115790565b80600052600060205260406000203360005260205260ff6040600020541615612f5d5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541615600014612ff457808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416600014612ff45780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6003546001600160a01b0316330361308257565b60405163118cdaa760e01b8152336004820152602490fd5b602081830312610611578051906001600160401b038211610611570181601f820112156106115780516130cc81612e47565b926130da6040519485612e26565b81845260208284010111610611576130f89160208085019101612ead565b90565b90600182811c9216801561312b575b602083101461311557565b634e487b7160e01b600052602260045260246000fd5b91607f169161310a565b6003111561313f57565b634e487b7160e01b600052602160045260246000fd5b90601f811161316357505050565b600091825260208220906020601f850160051c8301941061319f575b601f0160051c01915b82811061319457505050565b818155600101613188565b909250829061317f565b60ff600154166131b557565b60405163d93c066560e01b8152600490fd5b90816020910312610611575180151581036106115790565b90600092918054916131f0836130fb565b9182825260019384811690816000146132525750600114613212575b50505050565b90919394506000526020928360002092846000945b83861061323e57505050500101903880808061320c565b805485870183015294019385908201613227565b9294505050602093945060ff191683830152151560051b0101903880808061320c565b9092916001600160401b038111612dda5761329a8161329484546130fb565b84613155565b6000601f82116001146132d457819293946000926132c9575b50508160011b916000199060031b1c1916179055565b0135905038806132b3565b601f198216948382526020918281209281905b88821061332057505083600195969710613306575b505050811b019055565b0135600019600384901b60f8161c191690553880806132fc565b806001849682949587013581550195019201906132e7565b64ffffffffff80911690811461334e5760010190565b634e487b7160e01b600052601160045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b60028054146133945760028055565b604051633ee5aeb560e01b8152600490fd5b906133be602091949394604084526040840190612ed0565b6001600160a01b03909416910152565b63ffffffff80911690811461334e5760010190565b9190604092600384518383823760208185810160098152030190200154156134bc5783518282823760098184019081528190036020019020600201546001600160a01b03938416931683146134a65760209082855193849283378101600a81520301902090600052602052806000209181519261345f84612df0565b549264ffffffffff80851694828680945260ff808360281c1615159283602084015260301c16958691015261349a5742161115929190600090565b50506000929190600190565b5050505060019064ffffffffff90600290600090565b5050505060009060009060009060019056fea2646970667358221220a3d20c9ea9d9f43318ba2d050ff291c8a7c40aa89b6ca805d7af5b584509765b64736f6c6343000814003360803461012257601f620015cf38819003918201601f19168301916001600160401b038311848410176101275780849260a094604052833981010312610122576100488161013d565b6100546020830161013d565b9060408301519261006c60806060830151920161013d565b6001600160a01b03928316949091908515610109576000549560405196818682167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b031916176000908155678ac7230489e80000600355600555600180546001600160a01b031990811696861696909617905560025560045560088054909316911617905561147d9081620001528239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101225756fe608060408181526004908136101561001657600080fd5b600091823560e01c938463012a33aa1461116b5750836301c61a3214610c9c5783630552f9ff14610c365783630a0137ab14610bdb57836311a1933c14610bbd5783631c681d9914610b275783631fa8c9ae14610b0557836320875d66146108895783633f185b6c146107605783634be3a6e9146106f1578363586d396b1461068d5783635a2153381461066f5783635c975abb1461064b578363715018a6146105f15783637418c968146105cc5783637af8bb5d146101715783637c878166146105ae5783638135c36f146104a85783638da5cb5b1461048157836394906bcf14610421578363c9cda91f146103c6578363d15070011461038d578363d32ad62214610365578363d3e256bf146102fe578363dea182c1146102d6578363e058e99714610298578363f2fde38b1461020f578363f9468713146101a157508263fc0c546a1461017657505063fe80c4f41461017157600080fd5b611284565b3461019d578160031936011261019d5760015490516001600160a01b039091168152602090f35b5080fd5b823461020c57602036600319011261020c5781359067ffffffffffffffff821161020c57506101d86101ea926020923691016111f5565b8184519382858094519384920161123c565b8101600781520301902060ff6001825492015416825191825215156020820152f35b80fd5b3461029457602036600319011261029457610228611186565b9061023161131b565b6001600160a01b0391821692831561027e57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b503461019d57602036600319011261019d57806020926102b6611186565b6102be61131b565b6001600160a01b031681526006845220549051908152f35b503461019d578160031936011261019d5760015490516001600160a01b039091168152602090f35b90346102945760203660031901126102945781359161031b61131b565b821561035757506002549082600255519081527fea943276b7af14e01ef5207cd2cee75f7c7b742afe03d223779a09627301965560203392a380f35b905163f0adf53360e01b8152fd5b503461019d578160031936011261019d5760085490516001600160a01b039091168152602090f35b503461019d57602036600319011261019d5760209181906001600160a01b036103b4611186565b16815260068452205415159051908152f35b34610294576020366003190112610294576103df611186565b6103e761131b565b6001600160a01b03169182156104145750506bffffffffffffffffffffffff60a01b600154161760015580f35b5163f0adf53360e01b8152fd5b503461019d578160031936011261019d5760207f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9161045e61131b565b610466611425565b61046e611425565b835460ff60a01b1916845551338152a180f35b503461019d578160031936011261019d57905490516001600160a01b039091168152602090f35b34610294576020366003190112610294578035916104c461131b565b6104cc611404565b6005548084116105a057836104e0916113f7565b600555600154815163a9059cbb60e01b81523084820190815260208082018790529192839182900360400190829089906001600160a01b03165af1908115610596578591610568575b501561055b5750504290307f0ec851daa65cf683ea50a214d0556df1c12c6c97741c24d6a433b81b01b8a1ef8480a480f35b51637024dad560e11b8152fd5b610589915060203d811161058f575b61058181836111a1565b8101906113a9565b85610529565b503d610577565b82513d87823e3d90fd5b50516306ba5aa760e11b8152fd5b503461019d578160031936011261019d576020906003549051908152f35b503461019d578160031936011261019d57806020923381526006845220549051908152f35b823461020c578060031936011261020c5761060a61131b565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461019d578160031936011261019d5760ff6020925460a01c1690519015158152f35b503461019d578160031936011261019d576020906005549051908152f35b913461020c57602036600319011261020c5782359067ffffffffffffffff821161020c575060016106db60206106c9819660ff953691016111f5565b8186519382858094519384920161123c565b8101600781520301902001541690519015158152f35b90346102945760203660031901126102945781359061070e61131b565b81156107515791817fbef184c70b971ce37dd431ed022897a9211e97ca421f71da4c3aa85da4f6c5e593606093835493558051923384526020840152820152a180f35b5163f0adf53360e01b81529050fd5b9034610294576020806003193601126108855761077b611186565b9161078461131b565b61078c611404565b6001600160a01b03838116808752600684528287205495909490918790876107e8575b50857f7aeea51f76cf53bb0e38ea557afb288adf612290f445157ce8bf0e19fdcc4c76868683855260068252848181205551428152a280f35b600154855163a9059cbb60e01b81526001600160a01b03909416948401948552602085019890985291968593889391909116918391829060400103925af193841561087b577f7aeea51f76cf53bb0e38ea557afb288adf612290f445157ce8bf0e19fdcc4c76939461085e575b849386826107af565b61087490833d851161058f5761058181836111a1565b5085610855565b81513d87823e3d90fd5b8380fd5b346102945760209182600319360112610885578135926108a7611404565b6008548251632d5e71fb60e21b815233858201526001600160a01b03918216908781602481855afa908115610afb578891610ad9575b508051159182156109ff575b50506109f0576003548086106109e05733875260068352838720549081106109d05785116109c157338652600682528286206109268682546113f7565b9055600154835163a9059cbb60e01b815233868201908152602081018890529092849284928390036040019183918b91165af19182156109b757869261099a575b50501561055b5750504290337f9e6f10237a3bc28f40142a7f51474829ca0926a141b2aa82d169584162500fda8480a480f35b6109b09250803d1061058f5761058181836111a1565b8580610967565b83513d88823e3d90fd5b5050516379d9383360e11b8152fd5b505050516306ba5aa760e11b8152fd5b5050505163b2726f4960e01b8152fd5b5050516351a846b160e11b8152fd5b855163cb3e1fe760e01b815292509084838881855afa928315610acf57908592918a94610a96575b5090610a4e91875180958194829363e0bb933d60e01b84528b8d850152604484019061125f565b90602483015203915afa908115610a8c578791610a6f575b501587806108e9565b610a869150833d851161058f5761058181836111a1565b87610a66565b84513d89823e3d90fd5b838193949295503d8311610ac8575b610aaf81836111a1565b81010312610ac4575191849190610a4e610a27565b8880fd5b503d610aa5565b86513d8b823e3d90fd5b610af591503d808a833e610aed81836111a1565b810190611347565b886108dd565b85513d8a823e3d90fd5b90503461019d57602036600319011261019d57610b2061131b565b3560035580f35b903461029457826003193601126102945760015481516370a0823160e01b81523093810193909352602090839060249082906001600160a01b03165afa918215610bb3578392610b7c575b6020838351908152f35b9091506020813d8211610bab575b81610b97602093836111a1565b810103126102945760209250519083610b72565b3d9150610b8a565b81513d85823e3d90fd5b503461019d578160031936011261019d576020906002549051908152f35b3461029457602036600319011261029457610bf4611186565b610bfc61131b565b6001600160a01b0316918215610c295750506bffffffffffffffffffffffff60a01b600854161760085580f35b5163778e115760e01b8152fd5b503461019d578160031936011261019d5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610c7361131b565b610c7b611404565b610c83611404565b835460ff60a01b1916600160a01b17845551338152a180f35b903461029457608036600319011261029457610cb6611186565b9060249283359167ffffffffffffffff9283811161116757610cdb90369084016111f5565b60643584811161116357610cf290369085016111f5565b6001600160a01b039586169490939085156111545786600854168451632d5e71fb60e21b815287848201528a818b81855afa90811561114a578b91611130575b50805115908115611061575b50611051578451906325e016d360e11b825260209687838681855afa928c841561104657918993918d9561100a575b50610d949089519586948593849363e0bb933d60e01b85528d8c860152604485019061125f565b9183015203915afa908115611000578a91610fe3575b5015610fd457610dbd82546044356113c1565b87819860015416878c88519283809281610e046323b872dd60e01b998a8352308d3390850160409194939294606082019560018060a01b0380921683521660208201520152565b03925af1908115610fca578c91610fad575b5015610f9d57600154865180890193845233818d01908152306020820152604081018c9052919092169288928d92610e5b90829060600103601f1981018352826111a1565b519082855af115610f935789513d610f8a5750803b155b610f755750610e83600254886113c1565b606481029080820460641490151715610f6357612710610eb491048098610eac826005546113ea565b6005556113f7565b97868a5260068652848a20610eca8a82546113ea565b905584519283860192831184841017610f525750508392916001917fa6c1325e03b867ee45303c64111dc7e52670f1da44597390374b5210cda6508d969552888152610f2985808301948486528187519382858094519384920161123c565b8101600781520301902090518155019051151560ff80198354169116179055519384523393a480f35b634e487b7160e01b8b526041905289fd5b634e487b7160e01b8a5260118352888afd5b828991865191635274afe760e01b8352820152fd5b60011415610e72565b84513d8b823e3d90fd5b8551637024dad560e11b81528490fd5b610fc49150883d8a1161058f5761058181836111a1565b8c610e16565b87513d8e823e3d90fd5b5082516366a70fa760e11b8152fd5b610ffa9150863d881161058f5761058181836111a1565b8a610daa565b85513d8c823e3d90fd5b9380929550849193503d831161103f575b61102581836111a1565b8101031261103b5790518a928892610d94610d6d565b8b80fd5b503d61101b565b8851903d90823e3d90fd5b84516351a846b160e11b81528390fd5b865163cb3e1fe760e01b8152602092509082828781875afa918d83156111255790849291936110ee575b506110b1908d8a51948593849363e0bb933d60e01b85528d8c860152604485019061125f565b918301520381865afa918215610fca578c926110d1575b5050158b610d3e565b6110e79250803d1061058f5761058181836111a1565b8b806110c8565b8281939294503d831161111e575b61110681836111a1565b8101031261111a57519082906110b161108b565b8c80fd5b503d6110fc565b8951903d90823e3d90fd5b61114491503d808d833e610aed81836111a1565b8b610d32565b86513d8d823e3d90fd5b50825163778e115760e01b8152fd5b8780fd5b8680fd5b91503461029457826003193601126102945760209250548152f35b600435906001600160a01b038216820361119c57565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176111c357604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116111c357601f01601f191660200190565b81601f8201121561119c5780359061120c826111d9565b9261121a60405194856111a1565b8284526020838301011161119c57816000926020809301838601378301015290565b60005b83811061124f5750506000910152565b818101518382015260200161123f565b906020916112788151809281855285808601910161123c565b601f01601f1916010190565b3461119c57602036600319011261119c5761129d611186565b600854604051632d5e71fb60e21b81526001600160a01b0392831660048201529160009183916024918391165afa801561130f576112f2916000916112f6575b5060405191829160208352602083019061125f565b0390f35b611309913d8091833e610aed81836111a1565b386112dd565b6040513d6000823e3d90fd5b6000546001600160a01b0316330361132f57565b60405163118cdaa760e01b8152336004820152602490fd5b60208183031261119c5780519067ffffffffffffffff821161119c570181601f8201121561119c57805161137a816111d9565b9261138860405194856111a1565b8184526020828401011161119c576113a6916020808501910161123c565b90565b9081602091031261119c5751801515810361119c5790565b818102929181159184041417156113d457565b634e487b7160e01b600052601160045260246000fd5b919082018092116113d457565b919082039182116113d457565b60ff60005460a01c1661141357565b60405163d93c066560e01b8152600490fd5b60ff60005460a01c161561143557565b604051638dfc202b60e01b8152600490fdfea264697066735822122068f1ce7a9b536fd710475f857b980a4a82f90b5b5598365786db96bedbe5bb1364736f6c63430008140033";

type DataRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataRegistry__factory extends ContractFactory {
  constructor(...args: DataRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    _provider: AddressLike,
    _serviceFee: BigNumberish,
    _didAuthAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenAddress,
      _provider,
      _serviceFee,
      _didAuthAddress,
      overrides || {}
    );
  }
  override deploy(
    _tokenAddress: AddressLike,
    _provider: AddressLike,
    _serviceFee: BigNumberish,
    _didAuthAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenAddress,
      _provider,
      _serviceFee,
      _didAuthAddress,
      overrides || {}
    ) as Promise<
      DataRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DataRegistry__factory {
    return super.connect(runner) as DataRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataRegistryInterface {
    return new Interface(_abi) as DataRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataRegistry {
    return new Contract(address, _abi, runner) as unknown as DataRegistry;
  }
}
