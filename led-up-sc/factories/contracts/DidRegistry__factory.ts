/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DidRegistry,
  DidRegistryInterface,
} from "../../contracts/DidRegistry";

const _abi = [
  {
    inputs: [],
    name: "DidRegistry__DIDAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "DidRegistry__DeactivatedDID",
    type: "error",
  },
  {
    inputs: [],
    name: "DidRegistry__InvalidDID",
    type: "error",
  },
  {
    inputs: [],
    name: "DidRegistry__Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DIDDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "DIDRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DIDUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addressToDID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "deactivateDid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getController",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getDocument",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getDocumentForDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getLastUpdated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getLastUpdatedForDid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getPublicKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getPublicKeyForDid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getSubject",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "getSubjectForDid",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "isActiveForDid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "reactivateDid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        internalType: "string",
        name: "document",
        type: "string",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "registerDid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
    ],
    name: "resolveDid",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subject",
            type: "address",
          },
          {
            internalType: "uint40",
            name: "lastUpdated",
            type: "uint40",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
          {
            internalType: "string",
            name: "publicKey",
            type: "string",
          },
          {
            internalType: "string",
            name: "document",
            type: "string",
          },
        ],
        internalType: "struct DidRegistry.DIDDocument",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        internalType: "string",
        name: "newDocument",
        type: "string",
      },
    ],
    name: "updateDidDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "did",
        type: "string",
      },
      {
        internalType: "string",
        name: "newPublicKey",
        type: "string",
      },
    ],
    name: "updateDidPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576111cb908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b6000803560e01c806306da339a146109065780632a5961e11461084c5780633633852c146106ff57806343b162c81461069a578063454b0d271461031c5780634aeee7ba1461069557806363a27111146106955780637ccb6a64146105085780639462be3a146105475780639961860e14610508578063be89ee801461035b578063bff908211461031c578063c8902a21146102e3578063dd1388c214610288578063e1f0bde014610288578063f4653a1d14610194578063f789c0a1146101475763f8d087b2146100e657600080fd5b34610144576020366003190112610144578235906001600160401b038211610144575061012461011e60209461013b93369101610d94565b906110fa565b600052600160205260ff60406000205460c81c1690565b90519015158152f35b80fd5b5091346101905760203660031901126101905735916001600160a01b0383168303610144575061017961018c9261108e565b9051918291602083526020830190610dc6565b0390f35b8280fd5b509190346101905760203660031901126101905781356001600160401b038111610284576101c59036908401610d94565b9190926101d283856110fa565b906101ea823360005260026020526040600020541490565b1561027657818652600160205260ff8387205460c81c1615610269575084526001602052808420805465ffffffffffff60a01b19164260a01b64ffffffffff60a01b161790557fa462dbc9bc21feff6ddeab7dc5f3bfc006aa8fcd156b8b1b30e02f1d1dd197d891610263915b51918291429583610fc0565b0390a280f35b825162e7400960e21b8152fd5b825163cc6b994960e01b8152fd5b8380fd5b5034610144576020366003190112610144578235906001600160401b03821161014457506102c161011e6020946102dc93369101610d94565b600052600160205264ffffffffff60406000205460a01c1690565b9051908152f35b5034610144576020366003190112610144578235906001600160401b038211610144575061012461011e60209461013b93369101610d94565b5034610144576020366003190112610144578235906001600160401b038211610144575061035661011e61018c9461017993369101610d94565b611145565b5091346101905761036b36610e50565b61037b83859795969394966110fa565b610392813360005260026020526040600020541490565b156104f85780885260019060209082825260ff878b205460c81c16156104e957895281815285892094828601946001600160401b0385116104d657506103e2846103dc8754610f32565b87610f6c565b898092601f86116001146104545750938060008051602061117683398151915299979461026399979482946102579894610449575b50501b916000199060031b1c19161790555b805464ffffffffff60a01b19164260a01b64ffffffffff60a01b16179055565b013592503880610417565b868c52808c20949594939150601f198516908c905b8282106104bf57505092610257959285926000805160206111768339815191529b99966102639b9996106104a5575b505050811b019055610429565b0135600019600384901b60f8161c19169055388080610498565b808885978294968801358155019601930190610469565b634e487b7160e01b8b526041905260248afd5b865162e7400960e21b81528590fd5b845163cc6b994960e01b81528390fd5b5034610144576020366003190112610144578235906001600160401b038211610144575061054261011e61018c9461017993369101610d94565b61115d565b5091346101905761055736610e50565b61056783859795969394966110fa565b61057e813360005260026020526040600020541490565b156104f85780885260019060209082825260ff878b205460c81c16156104e95789528181528589209460028601946001600160401b0385116104d657506105c9846103dc8754610f32565b898092601f861160011461062e57509380600080516020611176833981519152999794610263999794829461025798946104495750501b916000199060031b1c1916179055805464ffffffffff60a01b19164260a01b64ffffffffff60a01b16179055565b868c52808c20949594939150601f198516908c905b82821061067e57505092610257959285926000805160206111768339815191529b99966102639b9996106104a557505050811b019055610429565b808885978294968801358155019601930190610643565b610e06565b5034610144576020366003190112610144578235906001600160401b03821161014457506106d361011e6020946106ee93369101610d94565b6000908152600160205260409020546001600160a01b031690565b90516001600160a01b039091168152f35b5082903461014457602091826003193601126108485780356001600160401b038111610190578461018c9361076961073f60809561083595369101610d94565b90845161074b81610e9a565b848152848a82015284868201526060978189808094015201526110fa565b815260018652209185519061077d82610e9a565b83549560018060a01b039788881684528184019164ffffffffff90818a60a01c16845260ff8387019a60c81c1615158a52818b6107ce60026107c160018d01610fe8565b9b898b019c8d5201610fe8565b998a60808a0152519751169a5115159451169083519a6107ed8c610e9a565b8b52808b01918252838b01948552858b0196875260808b0198895283519b8c9b828d525116908b0152511690880152511515908601525160a0608086015260c0850190610dc6565b9051838203601f190160a0850152610dc6565b5080fd5b509190346101905760203660031901126101905781356001600160401b0381116102845761087d9036908401610d94565b91909261088a83856110fa565b906108a2823360005260026020526040600020541490565b1561027657818652600160205260ff8387205460c81c16610276575084526001602052808420805465ffffffffffff60a01b19164260a01b64ffffffffff60a01b1617600160c81b1790556000805160206111768339815191529161026391610257565b50919034610190576060366003190112610190576001600160401b03908235828111610d90576109399036908501610d94565b929093602435828111610d8c576109539036908301610d94565b9091604435848111610d885761096c9036908301610d94565b9261097836898b610eec565b93845160208096012092838c52886001978888528d60018060a01b03928391205416610d785792879289928f96958d903389526002875289828a205480610d47575b505090610a04610a4d959493926109f58351996109d68b610e9a565b338b528a019564ffffffffff978842168852858c019a8b523691610eec565b9960608a019a8b523691610eec565b608088019081528a8a528d8d52982095518654925164ffffffffff60a01b941660a01b939093166001600160c81b0319909216921664ffffffffff60a01b191691909117178355565b51815460ff60c81b191690151560c81b60ff60c81b161781559051805190919087820190898111610d3457610a8c81610a868454610f32565b84610f6c565b878e6001601f841114610cd3579060029583610cc8575b5050600019600383901b1c191690891b1790555b019051805190878211610cb5578190610ada82610ad48654610f32565b86610f6c565b86908d601f8411600114610c565792610c4b575b5050600019600383901b1c191690861b1790555b3389526002835280868a2055808651888a823784818a81016003815203019020558852808252848820938611610c385750610b4785610b418554610f32565b85610f6c565b8690601f8611600114610baf575091848061026395937fd59e4d670f6e249831d6f8ce560f47ced54b3f4203e2d0050dc495fd6b919dd297958a93610ba4575b501b906000198560031b1c19161790555b51918291339583610fc0565b890135925038610b87565b90601f1986168489528289209289905b828210610c2157505091610263959391877fd59e4d670f6e249831d6f8ce560f47ced54b3f4203e2d0050dc495fd6b919dd298969410610c07575b505083811b019055610b98565b880135600019600387901b60f8161c191690553880610bfa565b808685968294968d01358155019501930190610bbf565b634e487b7160e01b885260419052602487fd5b015190503880610aee565b9190899450601f198416868452898420935b8a828210610c9f5750508411610c86575b505050811b019055610b02565b015160001960f88460031b161c19169055388080610c79565b8385015186558c97909501949384019301610c68565b634e487b7160e01b8c526041855260248cfd5b015190503880610aa3565b8a9291601f1983168583528b8320925b8c828210610d1e575050968360029810610d05575b505050811b019055610ab7565b015160001960f88460031b161c19169055388080610cf8565b838a015185558e96909401939283019201610ce3565b634e487b7160e01b8e526041875260248efd5b939650939650939697505003610d685792879289928f96958d9089386109ba565b8a5163cc6b994960e01b81528790fd5b8a51632236a56360e11b81528790fd5b8880fd5b8680fd5b8480fd5b9181601f84011215610dc1578235916001600160401b038311610dc15760208381860195010111610dc157565b600080fd5b919082519283825260005b848110610df2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610dd1565b34610dc1576020366003190112610dc1576004356001600160401b038111610dc157610e3e6106d361011e6020933690600401610d94565b6040516001600160a01b039091168152f35b6040600319820112610dc1576001600160401b0391600435838111610dc15782610e7c91600401610d94565b93909392602435918211610dc157610e9691600401610d94565b9091565b60a081019081106001600160401b03821117610eb557604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117610eb557604052565b9291926001600160401b038211610eb55760405191610f15601f8201601f191660200184610ecb565b829481845281830111610dc1578281602093846000960137010152565b90600182811c92168015610f62575b6020831014610f4c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f41565b90601f8111610f7a57505050565b600091825260208220906020601f850160051c83019410610fb6575b601f0160051c01915b828110610fab57505050565b818155600101610f9f565b9092508290610f96565b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b9060405191826000825492610ffc84610f32565b90818452600194858116908160001461106b5750600114611028575b505061102692500383610ecb565b565b9093915060005260209081600020936000915b81831061105357505061102693508201013880611018565b8554888401850152948501948794509183019161103b565b91505061102694506020925060ff191682840152151560051b8201013880611018565b6001600160a01b031660009081526002602052604081205480156110c357816040916110c09352600460205220610fe8565b90565b5060405190602082018281106001600160401b038211176110e657604052815290565b634e487b7160e01b82526041600452602482fd5b602090826040519384928337600390820190815203019020546000818152600160205260409020546001600160a01b0316156111335790565b604051637c24598f60e01b8152600490fd5b60005260016020526110c06001604060002001610fe8565b60005260016020526110c06002604060002001610fe856fe7d3c1c12143e97b7e778b120465649d38afc23c41117c80cf79e1a65b4c54e0ea26469706673582212205bc2a0eaf93c5432f167815fe3b0a1767c168653b478d884b24cea976dc18dbb64736f6c63430008140033";

type DidRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DidRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DidRegistry__factory extends ContractFactory {
  constructor(...args: DidRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DidRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DidRegistry__factory {
    return super.connect(runner) as DidRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DidRegistryInterface {
    return new Interface(_abi) as DidRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DidRegistry {
    return new Contract(address, _abi, runner) as unknown as DidRegistry;
  }
}
